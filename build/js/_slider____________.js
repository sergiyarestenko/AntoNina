this.createSliders=function(){$(".gt-slider").each(function(){function i(){d&&r.find(".gt-slider-arrow-holder").html(""),l=r.outerWidth()/s,r.find(".gt-slider-container").outerWidth((h+1)*l),g.each(function(){$(this).outerWidth(l)}),h>s&&(d&&function(){var i="";f&&(i='<div class="gt-slider-arrow-num"><i class="gt-slider-num-curr">1</i> <i>из</i> <i class="gt-slider-num-max">10</i> </div>');r.find(".gt-slider-arrow-holder").html('<span class = "gt-slider-arrow left"><i class="fa fa-angle-left fa-2x"></i></span>'+i+'<span class = "gt-slider-arrow right"><i class="fa fa-angle-right fa-2x"></i></span>'),r.find(".left").off().on("click",function(){e(!1)}),r.find(".right").off().on("click",function(){e(!0)}),n(),f&&t()}(),c&&function(){for(var i=r.find(".gt-slider-nav"),n="",t=0;t<h;t++)n+="<span data-num = "+t+"></span>";i.html(n),i.find("span").first().addClass("gt-active"),r.find(".gt-slider-nav span").off().on("click",function(){e(!0,+$(this).attr("data-num"))})}()),o=r.outerHeight(),r.find(".gt-img-holder").outerHeight(o)}function n(){var i=r.find(".left"),n=r.find(".right");n.removeClass("not-active"),i.removeClass("not-active"),0==a&&i.addClass("not-active"),a!=h-1&&a!=h-s||n.addClass("not-active")}function e(i,e){return e||0===e?a=e:i?a+=1:a-=1,a>h-s?(a=h-s,void self.sliderEndLeft(r)):a<0?(a=0,void self.sliderEndRight(r)):(self.sliderMove(r,l,a),d&&n(),void(f&&t()))}function t(){r.find(".gt-slider-num-curr").text(a+1),r.find(".gt-slider-num-max").text(h)}var s,l,o,r=$(this),a=0,d=!1,c=!1,f=!1,g=r.find(".gt-slider-inner"),h=g.length;r.hasClass("gt-slider-has-arrow")&&(d=!0,r.hasClass("gt-slider-num")&&(f=!0),r.append('<div class="gt-slider-arrow-holder"></div>')),r.hasClass("gt-slider-has-dots")&&(c=!0,r.append('<div class="gt-slider-nav"></div>')),findScreenConst(),i(),function(){var i=0,n=0;r.on("touchstart",function(n){var e=n.originalEvent;i=Math.abs(e.touches[0].pageX)}),r.on("touchend",function(t){var s=t.originalEvent;n=Math.abs(s.changedTouches[0].pageX),Math.abs(i-n)>50&&e(!(i>n))})}(),r.find(".gt-slider-open-clone")&&r.find(".gt-slider-open-clone").each(function(){$(this).on("click",function(){self.createCloneSlider(r,$(this).parent().index())})}),$(window).resize(function(){findScreenConst(),i(),a>h-s&&(a=h-s),h<=s&&(a=0),self.sliderMove(r,l,a)})})},this.createCloneSlider=function(i,n){function e(){if((l+=1)>c-1)return l=c-1,void self.sliderEndRight(o);self.sliderMove(o,f,l),s()}function t(){if((l-=1)<0)return l=0,void self.sliderEndLeft(o);self.sliderMove(o,f,l),s()}function s(){if($("#gt-clone-arrow-left")){var i=$("#gt-clone-arrow-left"),n=$("#gt-clone-arrow-right");n.removeClass("not-active"),i.removeClass("not-active"),0==l&&i.addClass("not-active"),l==c-1&&n.addClass("not-active")}}if(!$("div").is("#gt-clone")){self.fixBody();var l=n;$("#gt-body-wrapper").show().append('<div id = "gt-clone" class="gt-slider-clone"><div id = "gt-clone-close" class = "gt-slider-clone-close"></div><div class="container"><div id = "gt-clone-inner" class = "gt-slider-clone-inner"><div id = "gt-clone-container" class = "gt-slider-container gt-slider-clone-container"></div></div></div></div>');var o=$("#gt-clone-inner"),r=i.find(".gt-slider-inner").clone(!0),a=r.length;r.each(function(){$(this).removeClass("gt-slider-inner").addClass("gt-clone-slider-inner"),$(this).find(".gt-slider-inner-cover").remove(),$("#gt-clone-container").append($(this))}),a>1&&($("#gt-clone .container").append('<span class = "gt-slider-arrow left" id = "gt-clone-arrow-left"><i class="fa fa-angle-left fa-2x"></i></span><span class = "gt-slider-arrow right" id = "gt-clone-arrow-right"><i class="fa fa-angle-right fa-2x"></i></span>'),$("#gt-clone-arrow-left").on("click",t),$("#gt-clone-arrow-right").on("click",e));var d=o.find("#gt-clone-container"),c=r.length,f=o.outerWidth();r.each(function(){$(this).outerWidth(f)}),d.outerWidth(f*(c+1)),d.css("margin-left",-1*f*l+"px"),setTimeout(function(){d.addClass("gt-animated")}),s();var g=0,h=0;o.on("touchstart",function(i){var n=i.originalEvent;g=Math.abs(n.touches[0].pageX)}),o.on("touchend",function(i){var n=i.originalEvent;h=Math.abs(n.changedTouches[0].pageX),Math.abs(g-h)>50&&(g>h?t():e())}),$("#gt-clone-close").on("click",function(){self.destroyCloneSlider()})}},this.destroyCloneSlider=function(){$("#gt-clone-arrow-right").off(),$("#gt-clone-arrow-left").off(),$("#gt-clone-close").off(),$("#gt-clone-inner").off(),$("#gt-clone").remove(),$("#gt-body-wrapper").hide(),self.unfixBody()},this.sliderEndLeft=function(i){console.log("left_end")},this.sliderEndRight=function(i){console.log("right_end")},this.sliderMove=function(i,n,e){if(i.find(".gt-slider-nav")){var t=i.find(".gt-slider-nav span");t.removeClass("gt-active"),$(t[e]).addClass("gt-active")}i.find(".gt-slider-container").css("margin-left",-1*n*e+"px")},this.numberCollectionArticle=function(i){i.find(".gt-collection-link-wrapper").each(function(){$(this).find(".gt-collection-link-slider-wrapper").after('<div class = "gt-collection-link-number"><span>'+($(this).index()+1)+"</span></div>")})},$("div").is(".gt-collection-wrapper-num")&&$(".gt-collection-wrapper-num").each(function(){self.numberCollectionArticle($(this))}),$("div").is(".gt-slider")&&self.createSliders();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
