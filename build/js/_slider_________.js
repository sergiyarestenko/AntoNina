this.createSliders=function(){$(".gt-slider").each(function(){function i(){o=1,a.attr("data-count")&&(o=parseInt(a.attr("data-count")),$(token768).is(":visible")&&(o=3),$(token667).is(":visible")&&(o=2),$(token360).is(":visible")&&(o=1))}function n(){c&&a.find(".gt-slider-arrow-holder").html(""),l=a.outerWidth()/o,a.find(".gt-slider-container").outerWidth((v+1)*l),h.each(function(){$(this).outerWidth(l)}),v>o&&(c&&function(){var i="";g&&(i='<div class="gt-slider-arrow-num"><i class="gt-slider-num-curr">1</i> <i>из</i> <i class="gt-slider-num-max">10</i> </div>');a.find(".gt-slider-arrow-holder").html('<span class = "gt-slider-arrow left"><i class="fa fa-angle-left fa-2x"></i></span>'+i+'<span class = "gt-slider-arrow right"><i class="fa fa-angle-right fa-2x"></i></span>'),a.find(".left").off().on("click",function(){t(!1)}),a.find(".right").off().on("click",function(){t(!0)}),e(),g&&s()}(),f&&function(){for(var i=a.find(".gt-slider-nav"),n="",e=0;e<v;e++)n+="<span data-num = "+e+"></span>";i.html(n),i.find("span").first().addClass("gt-active"),a.find(".gt-slider-nav span").off().on("click",function(){t(!0,+$(this).attr("data-num"))})}()),r=a.outerHeight(),a.find(".gt-img-holder").outerHeight(r)}function e(){var i=a.find(".left"),n=a.find(".right");n.removeClass("not-active"),i.removeClass("not-active"),0==d&&i.addClass("not-active"),d!=v-1&&d!=v-o||n.addClass("not-active")}function t(i,n){return n||0===n?d=n:i?d+=1:d-=1,d>v-o?(d=v-o,void self.sliderEndLeft(a)):d<0?(d=0,void self.sliderEndRight(a)):(self.sliderMove(a,l,d),c&&e(),void(g&&s()))}function s(){a.find(".gt-slider-num-curr").text(d+1),a.find(".gt-slider-num-max").text(v)}var o,l,r,a=$(this),d=0,c=!1,f=!1,g=!1,h=a.find(".gt-slider-inner"),v=h.length;a.hasClass("gt-slider-has-arrow")&&(c=!0,a.hasClass("gt-slider-num")&&(g=!0),a.append('<div class="gt-slider-arrow-holder"></div>')),a.hasClass("gt-slider-has-dots")&&(f=!0,a.append('<div class="gt-slider-nav"></div>')),i(),n(),function(){var i=0,n=0;a.on("touchstart",function(n){var e=n.originalEvent;i=Math.abs(e.touches[0].pageX)}),a.on("touchend",function(e){var s=e.originalEvent;n=Math.abs(s.changedTouches[0].pageX),Math.abs(i-n)>50&&t(!(i>n))})}(),a.find(".gt-slider-open-clone")&&a.find(".gt-slider-open-clone").each(function(){$(this).on("click",function(){self.createCloneSlider(a,$(this).parent().index())})}),$(window).resize(function(){i(),n(),d>v-o&&(d=v-o),v<=o&&(d=0),self.sliderMove(a,l,d)})})},this.createCloneSlider=function(i,n){function e(){if((o+=1)>c-1)return o=c-1,void self.sliderEndRight(l);self.sliderMove(l,f,o),s()}function t(){if((o-=1)<0)return o=0,void self.sliderEndLeft(l);self.sliderMove(l,f,o),s()}function s(){if($("#gt-clone-arrow-left")){var i=$("#gt-clone-arrow-left"),n=$("#gt-clone-arrow-right");n.removeClass("not-active"),i.removeClass("not-active"),0==o&&i.addClass("not-active"),o==c-1&&n.addClass("not-active")}}if(!$("div").is("#gt-clone-close")){self.fixBody();var o=n;$("#gt-body-wrapper").show().append('<div id = "gt-clone" class="gt-slider-clone"><div id = "gt-clone-close" class = "gt-slider-clone-close"></div><div class="container"><div id = "gt-clone-inner" class = "gt-slider-clone-inner"><div id = "gt-clone-container" class = "gt-slider-container gt-slider-clone-container"></div></div></div></div>');var l=$("#gt-clone-inner"),r=i.find(".gt-slider-inner").clone(!0),a=r.length;r.each(function(){$(this).removeClass("gt-slider-inner").addClass("gt-clone-slider-inner"),$(this).find(".gt-slider-inner-cover").remove(),$("#gt-clone-container").append($(this))}),a>1&&($("#gt-clone .container").append('<span class = "gt-slider-arrow left" id = "gt-clone-arrow-left"><i class="fa fa-angle-left fa-2x"></i></span><span class = "gt-slider-arrow right" id = "gt-clone-arrow-right"><i class="fa fa-angle-right fa-2x"></i></span>'),$("#gt-clone-arrow-left").on("click",t),$("#gt-clone-arrow-right").on("click",e));var d=l.find("#gt-clone-container"),c=r.length,f=l.outerWidth();r.each(function(){$(this).outerWidth(f)}),d.outerWidth(f*(c+1)),d.css("margin-left",-1*f*o+"px"),setTimeout(function(){d.addClass("gt-animated")}),s();var g=0,h=0;l.on("touchstart",function(i){var n=i.originalEvent;g=Math.abs(n.touches[0].pageX)}),l.on("touchend",function(i){var n=i.originalEvent;h=Math.abs(n.changedTouches[0].pageX),Math.abs(g-h)>50&&(g>h?t():e())}),$("#gt-clone-close").on("click",function(){self.destroyCloneSlider()})}},this.destroyCloneSlider=function(){$("#gt-clone-arrow-right").off(),$("#gt-clone-arrow-left").off(),$("#gt-clone-close").off(),$("#gt-clone-inner").off(),$("#gt-clone").remove(),$("#gt-body-wrapper").hide(),self.unfixBody()},this.sliderEndLeft=function(i){console.log("left_end")},this.sliderEndRight=function(i){console.log("right_end")},this.sliderMove=function(i,n,e){if(i.find(".gt-slider-nav")){var t=i.find(".gt-slider-nav span");t.removeClass("gt-active"),$(t[e]).addClass("gt-active")}i.find(".gt-slider-container").css("margin-left",-1*n*e+"px")},this.numberCollectionArticle=function(i){i.find(".gt-collection-link-wrapper").each(function(){$(this).find(".gt-collection-link-slider-wrapper").after('<div class = "gt-collection-link-number"><span>'+($(this).index()+1)+"</span></div>")})},$("div").is(".gt-collection-wrapper-num")&&$(".gt-collection-wrapper-num").each(function(){self.numberCollectionArticle($(this))}),$("div").is(".gt-slider")&&self.createSliders();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
