GoToTrip=function(){function t(){w||(w=setTimeout(function(){w=null,e.fixArticleScrollTablePosition(),k&&e.showArtidleShadow()}))}var e=this,i=$(document.body),s=$(document),o=$(window),n={top:!1,left:!1},a=$("#gt-is-360"),r=($("#gt-is-480"),$("#gt-is-667")),c=$("#gt-is-768"),l=$("#gt-is-1024"),d=($("#gt-is-1231"),$("header")),g=$("footer"),u=$("#gt-wrapper"),h=$("#gt-up"),f=$("#gt-mobile-menu-switch"),p=$(".gt-enter"),v=$("#gt-header-enter-wrapper"),m=$("#gt-header-enter"),b=$("#gt-header-enter-chose"),C=$("#gt-header-enter-close");if($("html").niceScroll({cursorborder:"1px solid #6d6d6d",mousescrollstep:"60",bouncescroll:!0,cursorcolor:"#6d6d6d"}),this.fixBody=function(){n.top||n.left||(n.top=s.scrollTop(),n.left=i.offset().left,i.css({position:"fixed",left:n.left+"px",top:-1*n.top+"px"}))},this.unfixBody=function(){i.css({position:"",left:"",top:""}),s.scrollTop(n.top),n.top=!1,n.left=!1},this.footerHeight=function(){g.outerHeight()>o.height()-50?(g.css("position","static"),u.css("margin-bottom",""),h.css("position","static")):(g.css("position",""),h.css("position",""),u.css("margin-bottom",g.outerHeight()+"px"))},this.deskTopMenuScroll=function(){o.scrollTop()>d.outerHeight()?d.addClass("gt-header-scrolled"):d.removeClass("gt-header-scrolled")},this.mobileMenuClose=function(){e.unfixBody(),f.removeClass("gt-open"),d.removeClass("gt-open")},this.mobileMenuOpen=function(){e.fixBody(),d.addClass("gt-open"),f.addClass("gt-open")},f.on("click",function(){$(this).hasClass("gt-open")?e.mobileMenuClose():e.mobileMenuOpen()}),this.openEnterForm=function(){v.addClass("gt-open"),setTimeout(function(){$("#gt-header-registered").addClass("gt-open"),m.addClass("gt-open"),C.addClass("gt-open")})},this.closeEnterForm=function(){C.removeClass("gt-open"),m.removeClass("gt-open"),$("#gt-header-registered").removeClass("gt-open"),e.closeRestorePass(),setTimeout(function(){v.removeClass("gt-open")},750)},this.changeEnterRegistration=function(t){m.hasClass($(t.target).attr("class"))||m.removeClass("gt-chosen-enter").removeClass("gt-chosen-registration").addClass($(t.target).attr("class"))},this.openRestorePass=function(){$("#gt-enter-pass-restore-wrapper").addClass("gt-open")},this.closeRestorePass=function(){$("#gt-enter-pass-restore-wrapper").removeClass("gt-open")},p.each(function(){$(this).on("click",e.openEnterForm)}),C.on("click",e.closeEnterForm),b.on("click",function(t){e.changeEnterRegistration(t)}),$("#gt-enter-form-restore-pass").on("click",e.openRestorePass),$("#gt-enter-pass-restore-submit").on("click",e.closeRestorePass),this.setBackground=function(){$(".gt-img-holder").each(function(){if($(this).attr("data-bg")){var t=$(this).attr("data-bg");r.is(":visible")?$(this).css("background-image",'url("./img/backgrounds/phone/'+t+'")'):l.is(":visible")?$(this).css("background-image",'url("./img/backgrounds/tablet/'+t+'")'):$(this).css("background-image",'url("./img/backgrounds/desktop/'+t+'")')}})},this.imgHolderFunc=function(t){$(t).removeClass("gt-width"),$(t).removeClass("gt-height"),$(t).removeClass("gt-visible");var e=t.outerHeight()/t.outerWidth(),i=t.find("img");i.outerHeight()/i.outerWidth()>e?$(t).addClass("gt-width"):$(t).addClass("gt-height"),$(t).addClass("gt-visible")},$("div").is(".gt-img-holder")&&e.setBackground(),this.createSlider=function(t,i){function s(){if(y>C){var e="";E&&(e='<div class="gt-slider-arrow-num"><i class="gt-slider-num-curr"></i><i>из</i><i class="gt-slider-num-max"></i></div>'),t.find(".gt-slider-arrow-holder").html('<span class = "gt-slider-arrow left"></span>'+e+'<span class = "gt-slider-arrow right"></span>'),t.find(".left").on("click",function(){l(!1)}),t.find(".right").on("click",function(){l(!0)}),E&&u(),u()}w=!0}function n(e){var i=e||t;i.find(".left").off(),i.find(".right").off(),i.find(".gt-slider-arrow-holder").html(""),w=!1}function l(e,i){if(i||0===i?T=i:e?T++:T--,B&&(T>y-C&&(T=0),T<0&&(T=y-C),g()),H&&(console.log("start",T),T>y-C&&(x.css("left",-(T-2)*b+"px"),x.append(x.children().first().clone()),x.children().first().remove(),T--),T<0?(x.css("left",-(T+2)*b+"px"),x.prepend(x.children().last().clone()),x.children().last().remove(),T++,d()):d()),E&&u(),M){var s=t.find(".gt-slider-nav span");s.removeClass("gt-active"),$(s[x.find(".gt-open").attr("data-count")]).addClass("gt-active")}}function d(){x.children().removeClass("gt-open"),x.animate({left:-T*b},A),x.children().eq(T).addClass("gt-open")}function g(t){var e=t||T;$(k).removeClass("gt-open"),$(k[e]).addClass("gt-open")}function u(){t.find(".gt-slider-num-curr").text(+x.find(".gt-open").attr("data-count")+1),t.find(".gt-slider-num-max").text(y)}function h(){var e=0,i=0;t.on("touchstart",function(t){var i=t.originalEvent;e=Math.abs(i.touches[0].pageX),console.log("touchstart")}),t.on("touchend",function(t){var s=t.originalEvent;i=Math.abs(s.changedTouches[0].pageX),Math.abs(e-i)>50&&l(e>i?!0:!1)})}function f(e){(e||t).off()}function p(){t.attr("data-count")&&(C=parseInt(t.attr("data-count")),$(c).is(":visible")&&(C=3),$(r).is(":visible")&&(C=2),$(a).is(":visible")&&(C=1))}function v(){b=t.outerWidth()/C,t.find(".gt-slider-container").outerWidth((y+1)*b),k.each(function(){$(this).outerWidth(b),$(this).attr("data-count",$(this).index())})}var m,b,C=1,w=!1,k=t.find(".gt-slider-inner"),x=t.find(".gt-slider-container"),y=k.length,T=i||0,S=t.hasClass("gt-slider-has-arrow"),M=t.hasClass("gt-slider-has-dots"),E=t.hasClass("gt-slider-num"),H=t.hasClass("gt-slider-tram"),A=t.attr("data-duration")||300,B=t.hasClass("gt-slider-fade"),R=t.hasClass("gt-slider-has-clone");B&&g(i),H&&(p(),v(),d()),S&&(t.append('<div class="gt-slider-arrow-holder"></div>'),s()),M&&function(){t.append('<div class="gt-slider-nav"></div>');for(var e=t.find(".gt-slider-nav"),i="",s=0;s<y;s++)i+="<span data-num = "+s+"></span>";e.html(i),e.find("span").first().addClass("gt-active"),t.find(".gt-slider-nav span").on("click",function(){l(!0,+$(this).attr("data-num"))})}(),y>C&&h(),R&&t.find(".gt-slider-inner-cover").each(function(){$(this).on("click",function(){!function(i){if(!$("div").is("#gt-clone")){e.fixBody();var s=$("#gt-body-wrapper");s.append('<div id = "gt-clone-wrapper"   class="container"><div id = "gt-clone" class="gt-slider gt-slider-clone gt-slider-fade gt-slider-num  gt-slider-has-arrow"><div id = "gt-clone-close" class = "gt-slider-clone-close"></div><div  id = "gt-clone-container" class="gt-slider-container"></div></div></div>'),s.show();var o=$("#gt-clone");t.find(".gt-slider-inner").clone(!0).each(function(){$(this).outerWidth(""),$("#gt-clone-container").append($(this))}),e.createSlider(o,i),$("#gt-clone-close").on("click",function(){!function(t){n(t),f(t),$("#gt-clone-close").off(),$("#gt-clone-wrapper").remove(),$("#gt-body-wrapper").hide(),e.unfixBody()}(o)})}}($(this).parent().index())})}),o.resize(function(){m||(m=setTimeout(function(){m=null,f(),H&&(p(),v(),T>y-C&&(T=y-C),y<=C&&(T=0),d()),w&&(n(),s()),y>C&&h()},132))})},$("div").is(".gt-slider")&&$(".gt-slider").each(function(){e.createSlider($(this))}),this.manageGtActiveUlMenu=function(t){"li"!=t.tagName&&(t=$(t).closest("li")),$(t).closest($("ul")).find("li").removeClass("gt-active"),$(t).addClass("gt-active")},$("*").is(".gt-button-menu")&&$(".gt-button-menu").on("click",function(t){t.preventDefault(),e.manageGtActiveUlMenu(t.target)}),$("*").is(".gt-menu-news")&&$(".gt-menu-news").on("click",function(t){t.preventDefault(),e.manageGtActiveUlMenu(t.target)}),this.setPlayers=function(){var t=document.createElement("script");t.type="text/javascript",t.src="https://www.youtube.com/player_api";var i=$("script")[$("script").length-1];i.parentNode.insertBefore(t,i);$(".gt-video").each(function(){var t=$(this);t.find(".gt-video-switch").on("click",function(){$(this).addClass("gt-open"),t.addClass("gt-open"),e.addYouTube(t)})})},this.addYouTube=function(t){function e(){s.mute(),s.playVideo(),t.addClass("gt-video-on"),t.find(".gt-video-uncover").on("click",i),t.find(".gt-video-pause").on("click",function(){s.pauseVideo()}),t.find(".gt-video-play").on("click",function(){s.playVideo()})}function i(){console.log("playFullScreen");var e=t.find("iframe")[0],i=e.requestFullScreen||e.mozRequestFullScreen||e.webkitRequestFullScreen;i&&i.bind(e)()}var s,o="gt-video-"+t.index();t.find(".gt-video-switch").hide("slow"),t.find(".gt-video-inner").attr("id",o).addClass("gt-video-foreground"),s=new YT.Player(o,{width:600,height:400,videoId:t.attr("data-youtube"),playerVars:{playlist:t.attr("data-youtube"),color:"white",loop:1,autoplay:1},events:{onReady:e}})},$("div").is(".gt-video")&&e.setPlayers(),this.fixArticleScrollTablePosition=function(){var t=$(".gt-article-table-wrapper"),e=t.parent(),i=e.position().top,n=i+e.outerHeight(),a=t.outerWidth(),r=s.scrollTop(),c=o.outerHeight();console.log(i),console.log(r),i+90>r&&t.hasClass("gt-fixed")&&(t.removeClass("gt-fixed"),t.css({left:"",width:""})),i<r+90&&(t.hasClass("gt-fixed")||(t.css({left:t.offset().left+"px",width:a}),t.addClass("gt-fixed")),r+c>n?t.addClass("gt-fixed-bottom"):t.removeClass("gt-fixed-bottom")),t.hasClass("gt-fixed")?t.css({height:c-120+"px"}):t.css({height:""})},this.createArticteScrollTable=function(){if($("div").is(".gt-article")){var t="";$(".gt-article").each(function(){t+='<div class = "gt-article-scroll"><div class = "gt-article-scroll-shadow"></div><p>'+$(this).find("h2").text()+"</p></div>"}),$("#gt-article-scroll-table").html(t)}},this.showArtidleShadow=function(){$(".gt-article").each(function(){var t=$(this).position().top,e=$(this).outerHeight(),i=$(document).scrollTop(),s=0;(s=t>i?0:(i-t)/e)>1&&(s=1);var o=$(".gt-article-scroll")[$(this).index()];$(o).find(".gt-article-scroll-shadow").css("width",100*s+"%")})},$("div").is(".gt-article-table-wrapper")){var w,k=!1;$("div").is(".gt-article-scroll-table")&&(k=!0,e.createArticteScrollTable(),e.showArtidleShadow()),o.scroll(t),o.resize(t)}this.setCurrTime=function(){e.currTime();setInterval(e.currTime,3e4)},this.currTime=function(){$(".gt-curr-time").each(function(){var t=new Date;$(this).attr("data-gmt")&&t.setUTCHours(+$(this).attr("data-gmt"));var e=t.getHours(),i=t.getMinutes(),s=t.getDay(),o=t.getDate(),n=t.getMonth(),a=t.getFullYear();e<10&&(e="0"+e),i<10&&(i="0"+i),s=["Воскресенье","Понедельник","Вторник","Среда","Четверг","Пятница","Суббота"][s],n=["января","февраля","марта","апреля","мая","июня","июля","августа","сентября","октября","ноября","декабря"][n],$(".gt-curr-time-time")&&$(".gt-curr-time-time").html(e+":"+i),$(".gt-curr-time-date")&&$(".gt-curr-time-date").html(s+", "+o+" "+n+" "+a)})},$("div").is(".gt-curr-time")&&e.setCurrTime(),$("div").is(".gt-inner-scroll")&&$(".gt-inner-scroll").each(function(){$(this).niceScroll({cursoropacitymin:"1",cursoropacitymax:"1",cursorwidth:"2px",cursorborder:"none",mousescrollstep:"60",background:"#CECECE",railoffset:"left",zindex:"auto",cursorcolor:"#CECECE"})}),this.tabSlider=function(){$(".gt-tabs").each(function(){var t=$(this);t.find(".gt-tabs-button").each(function(){$(this).on("click",function(){e.tabSliderAction(t,$(this).index())})}),e.tabSliderAction(t,0)})},this.tabSliderAction=function(t,e){var i=$(t.find(".gt-tabs-button")),s=$(t.find(".gt-tabs-main"));t.find(".gt-inner-scroll-tab").each(function(){$("#"+$(this).attr("data-scroll")).hide()}),i.removeClass("active"),s.removeClass("active"),$(i[e]).addClass("active"),$(s[e]).addClass("active"),0!=$("#"+$(s[e]).find(".gt-inner-scroll-tab").attr("data-scroll")).find(".gt-scroll-cursor").height()&&$("#"+$(s[e]).find(".gt-inner-scroll-tab").attr("data-scroll")).show()},$("div").is(".gt-tabs")&&e.tabSlider(),this.createIconsItemsClick=function(){$(".gt-view-cards-icons-item").each(function(){$(this).hasClass("gt-view-cards-icons-visit")?e.createVisitLink($(this)):$(this).hasClass("gt-view-cards-icons-bookmarks")?e.createBookmarksLink($(this)):$(this).hasClass("gt-view-cards-icons-pin")||$(this).hasClass("gt-view-cards-icons-share")?e.toggleGtActive($(this)):$(this).hasClass("gt-view-cards-icons-share")&&e.createShareLink($(this))})},this.createShareLink=function(t){t.removeClass("gt-active"),t.on("click",function(){t.toggleClass("gt-active")})},this.toggleGtActive=function(t){(t=$(t)).removeClass("gt-active"),t.on("click",function(){t.toggleClass("gt-active")})},this.createVisitLink=function(t){t.closest(".gt-view-cards-inner").attr("data-href")&&t.on("click",function(){e.addVisitedLink(t)})},this.addVisitedLink=function(t){alert("послали данные на бек",t.closest(".gt-view-cards-inner").attr("data-href")),t.toggleClass("gt-active")},this.addBookmark=function(t,e,i){try{window.external.AddFavorite(e,i)}catch(s){try{window.sidebar.addPanel(i,e,"")}catch(s){if("object"==typeof opera)return t.title=i,t.url=e,!0;alert("Нажмите Ctrl-D чтобы добавить страницу в закладки")}}return!1},this.createBookmarksLink=function(t){var i=(t=$(t)).closest(".gt-view-cards-inner");(i=$(i)).attr("data-href")||i.attr("data-href",window.location.href),i.attr("data-bookmark")||i.attr("data-bookmark","GoToTrip"),t.attr("href",i.attr("data-href")),t.attr("rel","sidebar"),t.on("click",function(s){s.preventDefault(),e.addBookmark(t,i.attr("data-href"),i.attr("data-bookmark"))})},$("*").is(".gt-view-cards-icons-bookmarks")&&e.createBookmarksLink(),$("*").is(".gt-view-cards-icons-item")&&e.createIconsItemsClick(),$("#gt-enter-form-facebook").on("click",function(){e.socialEnter("facebook")}),$("#gt-enter-form-twitter").on("click",function(){e.socialEnter("twitter")}),$("#gt-enter-form-google").on("click",function(){e.socialEnter("google")}),$("#gt-reg-form-facebook").on("click",function(){e.socialRegistration("facebook")}),$("#gt-reg-form-twitter").on("click",function(){e.socialRegistration("twitter")}),$("#gt-reg-form-google").on("click",function(){e.socialRegistration("google")}),this.socialRegistration=function(t){alert("Регистрация через "+t)},this.socialEnter=function(t){alert("Вход через "+t)},this.cutNews=function(t){var e,i,s,o=t.parent(),n=o.height(),a=t.find("p");o.children().each(function(){n-=$(this).outerHeight(!0)}),n=n+t.height()-20,a.each(function(){(e=$(this).outerHeight(!0))<n?n-=e:n?(i=Math.floor($(this).text().length*n/e),s=$(this).text().substring(0,i-5),$(this).text(s+"..."),n=0):$(this).css("display","none")})},$("div").is(".js-news-cut")&&($(".js-news-cut").each(function(){e.cutNews($(this))}),o.resize(function(){$(".js-news-cut").each(function(){e.cutNews($(this))})})),this.cutReadMoreSlider=function(){$(".gt-read-more-slider-text-inner").each(function(){e.cutting($(this),160)})},this.cutting=function(t,e){var i=t.text();i.length>e&&(i=i.slice(0,e)+"...",t.text(i))},$("p").is(".gt-read-more-slider-text-inner")&&e.cutReadMoreSlider(),s.ready(function(){e.footerHeight(),e.deskTopMenuScroll()}),this.pageUp=function(){return $("html, body").animate({scrollTop:0},800),!1},this.upPageButton=function(){$(document).scrollTop()>30?h.addClass("gt-visible"):h.removeClass("gt-visible")},h.on("click",e.pageUp),o.scroll(function(){e.upPageButton(),$(".gt-header-menu").is(":visible")&&e.deskTopMenuScroll()}),o.resize(function(){e.deskTopMenuScroll(),e.footerHeight(),d.hasClass("gt-open")&&e.mobileMenuClose(),$("div").is(".gt-img-holder-abs")&&$(".gt-img-holder-abs").each(function(){$(this).removeClass("gt-width"),$(this).removeClass("gt-height"),e.imgHolderFunc($(this))})}),$(window).on("load",function(){$("div").is(".gt-img-holder-abs")&&$(".gt-img-holder-abs").each(function(){e.imgHolderFunc($(this))})}),i.on("click",function(t){})},$(document).ready(function(){new GoToTrip});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJHb1RvVHJpcCIsInNjcm9sbFRocm90dGxlciIsInNjcm9sbFRpbWVvdXQiLCJzZXRUaW1lb3V0Iiwic2VsZiIsImZpeEFydGljbGVTY3JvbGxUYWJsZVBvc2l0aW9uIiwic2hhZG93Iiwic2hvd0FydGlkbGVTaGFkb3ciLCJ0aGlzIiwiYm9keSIsIiQiLCJkb2N1bWVudCIsImRvYyIsImRvY1dpbmRvdyIsIndpbmRvdyIsImJvZHlQb3NpdGlvbiIsInRvcCIsImxlZnQiLCJ0b2tlbjM2MCIsInRva2VuNjY3IiwidG9rZW43NjgiLCJ0b2tlbjEwMjQiLCJndEhlYWRlciIsImd0Rm9vdGVyIiwiZ3RXcmFwcGVyIiwidXBCdXR0b24iLCJtb2JpbGVNZW51U3dpdGNoIiwiZW50ZXJCdXR0b24iLCJlbnRlcldyYXBwZXIiLCJlbnRlckZvcm0iLCJlbnRlckNob3NlIiwiZW50ZXJDbG9zZSIsIm5pY2VTY3JvbGwiLCJjdXJzb3Jib3JkZXIiLCJtb3VzZXNjcm9sbHN0ZXAiLCJib3VuY2VzY3JvbGwiLCJjdXJzb3Jjb2xvciIsImZpeEJvZHkiLCJzY3JvbGxUb3AiLCJvZmZzZXQiLCJjc3MiLCJwb3NpdGlvbiIsInVuZml4Qm9keSIsImZvb3RlckhlaWdodCIsIm91dGVySGVpZ2h0IiwiaGVpZ2h0IiwiZGVza1RvcE1lbnVTY3JvbGwiLCJhZGRDbGFzcyIsInJlbW92ZUNsYXNzIiwibW9iaWxlTWVudUNsb3NlIiwibW9iaWxlTWVudU9wZW4iLCJvbiIsImhhc0NsYXNzIiwib3BlbkVudGVyRm9ybSIsImNsb3NlRW50ZXJGb3JtIiwiY2xvc2VSZXN0b3JlUGFzcyIsImNoYW5nZUVudGVyUmVnaXN0cmF0aW9uIiwiZXZlbnQiLCJ0YXJnZXQiLCJhdHRyIiwib3BlblJlc3RvcmVQYXNzIiwiZWFjaCIsInNldEJhY2tncm91bmQiLCJwYXRoIiwiaXMiLCJpbWdIb2xkZXJGdW5jIiwiZWwiLCJob2xkZXJDb25zdCIsIm91dGVyV2lkdGgiLCJpbWciLCJmaW5kIiwiY3JlYXRlU2xpZGVyIiwiY3VyclNsaWRlciIsImNyZWF0ZUFycm93cyIsImlubmVyQ291bnQiLCJzY3JlZW5Db25zdCIsIm51bUlubmVyIiwibnVtUGFuZWwiLCJodG1sIiwib25lTW92ZUZ1bmN0aW9uIiwic2hvd051bSIsImFycm93c1JlYWR5IiwiZGVzdHJveUFycm93cyIsImNsb25lIiwib2ZmIiwiYnVsIiwibnVtIiwiY3VyclBvc2l0aW9uIiwiZmFkZSIsImZhZGVTbGlkZXJNb3ZlIiwidHJhbSIsImNvbnNvbGUiLCJsb2ciLCJjb250YWluZXIiLCJiYXNlV2lkdGgiLCJhcHBlbmQiLCJjaGlsZHJlbiIsImZpcnN0IiwicmVtb3ZlIiwicHJlcGVuZCIsImxhc3QiLCJ0cmFtU2xpZGVyTW92ZSIsImRvdHMiLCJhbGxEb3RzIiwiYW5pbWF0ZSIsInRyYW1BbmltYXRpb24iLCJlcSIsImluZGV4IiwiaW5uZXIiLCJ0ZXh0IiwiY3JlYXRlVG91Y2giLCJpbml0aWFsUG9pbnQiLCJmaW5hbFBvaW50IiwiZSIsIm9yaWdpbmFsRXZlbnQiLCJNYXRoIiwiYWJzIiwidG91Y2hlcyIsInBhZ2VYIiwiY2hhbmdlZFRvdWNoZXMiLCJkZXN0cm95VG91Y2giLCJmaW5kU2NyZWVuQ29uc3QiLCJwYXJzZUludCIsInNldEJhc2VXaWR0aCIsInNsaWRlclRpbWVPdXQiLCJsZW5ndGgiLCJhcnJvdyIsImhhc0Nsb25lIiwibmF2Iiwic3BhbnMiLCJpIiwiY3JlYXRlRG90cyIsImNsaWNrUG9zaXRpb24iLCJib2R5V3JhcHBlciIsInNob3ciLCJjbG9uZVNsaWRlciIsImhpZGUiLCJkZXN0cm95Q2xvbmVTbGlkZXIiLCJjcmVhdGVDbG9uZVNsaWRlciIsInBhcmVudCIsInJlc2l6ZSIsIm1hbmFnZUd0QWN0aXZlVWxNZW51IiwidGFnTmFtZSIsImNsb3Nlc3QiLCJwcmV2ZW50RGVmYXVsdCIsInNldFBsYXllcnMiLCJ0YWciLCJjcmVhdGVFbGVtZW50IiwidHlwZSIsInNyYyIsImxhc3RTY3JpcHRUYWciLCJwYXJlbnROb2RlIiwiaW5zZXJ0QmVmb3JlIiwiY3VycmVudFBsYXllciIsImFkZFlvdVR1YmUiLCJpbml0aWFsaXplIiwicGxheWVyIiwibXV0ZSIsInBsYXlWaWRlbyIsInBsYXlGdWxsU2NyZWVuIiwicGF1c2VWaWRlbyIsImlmcmFtZSIsInJlcXVlc3RGdWxsU2NyZWVuIiwibW96UmVxdWVzdEZ1bGxTY3JlZW4iLCJ3ZWJraXRSZXF1ZXN0RnVsbFNjcmVlbiIsImJpbmQiLCJlbElkIiwiWVQiLCJQbGF5ZXIiLCJ3aWR0aCIsInZpZGVvSWQiLCJwbGF5ZXJWYXJzIiwicGxheWxpc3QiLCJjb2xvciIsImxvb3AiLCJhdXRvcGxheSIsImV2ZW50cyIsIm9uUmVhZHkiLCJ0YWJsZSIsInRhYmxlUGFyZW50IiwidGFibGVQYXJlbnRUb3AiLCJ0YWJsZVBhcmVudEJvdHRvbSIsInRhYmxlV2lkdGgiLCJ3aW5kb3dUb3AiLCJ3aWRvd0hlaWdodCIsImNyZWF0ZUFydGljdGVTY3JvbGxUYWJsZSIsImVsSGVpZ2h0Iiwid2luZG93UG9zaXRpb24iLCJ4IiwiY3VyclNoYWRvdyIsInNjcm9sbCIsInNldEN1cnJUaW1lIiwiY3VyclRpbWUiLCJzZXRJbnRlcnZhbCIsImRhdGUiLCJEYXRlIiwic2V0VVRDSG91cnMiLCJob3VycyIsImdldEhvdXJzIiwibWludXRlcyIsImdldE1pbnV0ZXMiLCJ3ZWVrZGF5IiwiZ2V0RGF5IiwiZGF5IiwiZ2V0RGF0ZSIsIm1vbnRoIiwiZ2V0TW9udGgiLCJ5ZWFyIiwiZ2V0RnVsbFllYXIiLCJjdXJzb3JvcGFjaXR5bWluIiwiY3Vyc29yb3BhY2l0eW1heCIsImN1cnNvcndpZHRoIiwiYmFja2dyb3VuZCIsInJhaWxvZmZzZXQiLCJ6aW5kZXgiLCJ0YWJTbGlkZXIiLCJjdXJyVGFicyIsInRhYlNsaWRlckFjdGlvbiIsImJ1dHRvbnMiLCJtYWluIiwiY3JlYXRlSWNvbnNJdGVtc0NsaWNrIiwiY3JlYXRlVmlzaXRMaW5rIiwiY3JlYXRlQm9va21hcmtzTGluayIsInRvZ2dsZUd0QWN0aXZlIiwiY3JlYXRlU2hhcmVMaW5rIiwidG9nZ2xlQ2xhc3MiLCJhZGRWaXNpdGVkTGluayIsImFsZXJ0IiwiYWRkQm9va21hcmsiLCJhIiwidXJsIiwidGl0bGUiLCJleHRlcm5hbCIsIkFkZEZhdm9yaXRlIiwic2lkZWJhciIsImFkZFBhbmVsIiwib3BlcmEiLCJsb2NhdGlvbiIsImhyZWYiLCJzb2NpYWxFbnRlciIsInNvY2lhbFJlZ2lzdHJhdGlvbiIsInRva2VuIiwiY3V0TmV3cyIsImN1cnJIZWlnaHQiLCJjdXR0aW5nTGVuZ2h0IiwibmV3VGV4dCIsIm1heEhlaWdodCIsImN1dHRpbmdFbCIsImZsb29yIiwic3Vic3RyaW5nIiwiY3V0UmVhZE1vcmVTbGlkZXIiLCJjdXR0aW5nIiwibmV3c1RleHQiLCJzbGljZSIsInJlYWR5IiwicGFnZVVwIiwidXBQYWdlQnV0dG9uIl0sIm1hcHBpbmdzIjoiQUFLQUEsU0FBVyxXQXVzQkgsU0FBU0MsSUFDQUMsSUFDREEsRUFBZ0JDLFdBQVcsV0FDdkJELEVBQWdCLEtBQ2hCRSxFQUFLQyxnQ0FDREMsR0FDQUYsRUFBS0csdUJBM3NCekIsSUFBSUgsRUFBT0ksS0FDUEMsRUFBT0MsRUFBRUMsU0FBU0YsTUFDbEJHLEVBQU1GLEVBQUVDLFVBQ1JFLEVBQVlILEVBQUVJLFFBQ2RDLEdBQ0lDLEtBQUssRUFDTEMsTUFBTSxHQUVWQyxFQUFXUixFQUFFLGNBRWJTLEdBRFdULEVBQUUsY0FDRkEsRUFBRSxlQUNiVSxFQUFXVixFQUFFLGNBQ2JXLEVBQVlYLEVBQUUsZUFFZFksR0FEWVosRUFBRSxlQUNIQSxFQUFFLFdBQ2JhLEVBQVdiLEVBQUUsVUFDYmMsRUFBWWQsRUFBRSxlQUNkZSxFQUFXZixFQUFFLFVBQ2JnQixFQUFtQmhCLEVBQUUsMEJBQ3JCaUIsRUFBY2pCLEVBQUUsYUFDaEJrQixFQUFlbEIsRUFBRSw0QkFDakJtQixFQUFZbkIsRUFBRSxvQkFDZG9CLEVBQWFwQixFQUFFLDBCQUNmcUIsRUFBYXJCLEVBQUUsMEJBb3FCbkIsR0FucUJBQSxFQUFFLFFBQVFzQixZQUNOQyxhQUFjLG9CQUNkQyxnQkFBaUIsS0FDakJDLGNBQWMsRUFDZEMsWUFBYSxZQUlqQjVCLEtBQUs2QixRQUFVLFdBQ1B0QixFQUFhQyxLQUFPRCxFQUFhRSxPQUNyQ0YsRUFBYUMsSUFBTUosRUFBSTBCLFlBQ3ZCdkIsRUFBYUUsS0FBT1IsRUFBSzhCLFNBQVN0QixLQUNsQ1IsRUFBSytCLEtBQ0RDLFNBQVUsUUFDVnhCLEtBQU1GLEVBQWFFLEtBQU8sS0FDMUJELEtBQU0sRUFBSUQsRUFBYUMsSUFBTSxTQUlyQ1IsS0FBS2tDLFVBQVksV0FDYmpDLEVBQUsrQixLQUNEQyxTQUFVLEdBQ1Z4QixLQUFNLEdBQ05ELElBQUssS0FFVEosRUFBSTBCLFVBQVV2QixFQUFhQyxLQUMzQkQsRUFBYUMsS0FBTSxFQUNuQkQsRUFBYUUsTUFBTyxHQUd4QlQsS0FBS21DLGFBQWUsV0FDR3BCLEVBQVNxQixjQUNUL0IsRUFBVWdDLFNBQVcsSUFDcEN0QixFQUFTaUIsSUFBSSxXQUFZLFVBQ3pCaEIsRUFBVWdCLElBQUksZ0JBQWlCLElBQy9CZixFQUFTZSxJQUFJLFdBQVksWUFFekJqQixFQUFTaUIsSUFBSSxXQUFZLElBQ3pCZixFQUFTZSxJQUFJLFdBQVksSUFDekJoQixFQUFVZ0IsSUFBSSxnQkFBaUJqQixFQUFTcUIsY0FBZ0IsUUFHaEVwQyxLQUFLc0Msa0JBQW9CLFdBQ2pCakMsRUFBVXlCLFlBQWNoQixFQUFTc0IsY0FDakN0QixFQUFTeUIsU0FBUyxzQkFFbEJ6QixFQUFTMEIsWUFBWSx1QkFLN0J4QyxLQUFLeUMsZ0JBQWtCLFdBQ25CN0MsRUFBS3NDLFlBQ0xoQixFQUFpQnNCLFlBQVksV0FDN0IxQixFQUFTMEIsWUFBWSxZQUd6QnhDLEtBQUswQyxlQUFpQixXQUNsQjlDLEVBQUtpQyxVQUNMZixFQUFTeUIsU0FBUyxXQUNsQnJCLEVBQWlCcUIsU0FBUyxZQUs5QnJCLEVBQWlCeUIsR0FBRyxRQUFTLFdBQ3JCekMsRUFBRUYsTUFBTTRDLFNBQVMsV0FDakJoRCxFQUFLNkMsa0JBRUw3QyxFQUFLOEMsbUJBR2IxQyxLQUFLNkMsY0FBZ0IsV0FDakJ6QixFQUFhbUIsU0FBUyxXQUN0QjVDLFdBQ0EsV0FDSU8sRUFBRSx5QkFBeUJxQyxTQUFTLFdBQ3BDbEIsRUFBVWtCLFNBQVMsV0FDbkJoQixFQUFXZ0IsU0FBUyxjQUk1QnZDLEtBQUs4QyxlQUFpQixXQUNsQnZCLEVBQVdpQixZQUFZLFdBQ3ZCbkIsRUFBVW1CLFlBQVksV0FDdEJ0QyxFQUFFLHlCQUF5QnNDLFlBQVksV0FDdkM1QyxFQUFLbUQsbUJBQ0xwRCxXQUNBLFdBQ0l5QixFQUFhb0IsWUFBWSxZQUZaLE1BTXJCeEMsS0FBS2dELHdCQUEwQixTQUFVQyxHQUNqQzVCLEVBQVV1QixTQUFTMUMsRUFBRStDLEVBQU1DLFFBQVFDLEtBQUssV0FFNUM5QixFQUFVbUIsWUFBWSxtQkFBbUJBLFlBQVksMEJBQTBCRCxTQUFTckMsRUFBRStDLEVBQU1DLFFBQVFDLEtBQUssV0FJakhuRCxLQUFLb0QsZ0JBQWtCLFdBQ25CbEQsRUFBRSxrQ0FBa0NxQyxTQUFTLFlBR2pEdkMsS0FBSytDLGlCQUFtQixXQUNwQjdDLEVBQUUsa0NBQWtDc0MsWUFBWSxZQUlwRHJCLEVBQVlrQyxLQUFLLFdBQ2JuRCxFQUFFRixNQUFNMkMsR0FBRyxRQUFTL0MsRUFBS2lELGlCQUc3QnRCLEVBQVdvQixHQUFHLFFBQVMvQyxFQUFLa0QsZ0JBRTVCeEIsRUFBV3FCLEdBQUcsUUFBUyxTQUFVTSxHQUM3QnJELEVBQUtvRCx3QkFBd0JDLEtBR2pDL0MsRUFBRSwrQkFBK0J5QyxHQUFHLFFBQVEvQyxFQUFLd0QsaUJBQ2pEbEQsRUFBRSxpQ0FBaUN5QyxHQUFHLFFBQVEvQyxFQUFLbUQsa0JBRW5EL0MsS0FBS3NELGNBQWdCLFdBQ0FwRCxFQUFFLGtCQUNSbUQsS0FBSyxXQUNaLEdBQUtuRCxFQUFFRixNQUFNbUQsS0FBSyxXQUFsQixDQUNBLElBQUlJLEVBQU9yRCxFQUFFRixNQUFNbUQsS0FBSyxXQUNwQnhDLEVBQVM2QyxHQUFHLFlBQ1p0RCxFQUFFRixNQUFNZ0MsSUFDSixtQkFDQSxnQ0FBa0N1QixFQUFPLE1BSTdDMUMsRUFBVTJDLEdBQUcsWUFDYnRELEVBQUVGLE1BQU1nQyxJQUNKLG1CQUNBLGlDQUFtQ3VCLEVBQU8sTUFJbERyRCxFQUFFRixNQUFNZ0MsSUFDSixtQkFDQSxrQ0FBb0N1QixFQUFPLFVBTXZEdkQsS0FBS3lELGNBQWdCLFNBQVVDLEdBQzNCeEQsRUFBRXdELEdBQUlsQixZQUFZLFlBQ2xCdEMsRUFBRXdELEdBQUlsQixZQUFZLGFBQ2xCdEMsRUFBRXdELEdBQUlsQixZQUFZLGNBQ2xCLElBQUltQixFQUFjRCxFQUFHdEIsY0FBZ0JzQixFQUFHRSxhQUNwQ0MsRUFBTUgsRUFBR0ksS0FBSyxPQUNIRCxFQUFJekIsY0FBZ0J5QixFQUFJRCxhQUV4QkQsRUFDWHpELEVBQUV3RCxHQUFJbkIsU0FBUyxZQUdmckMsRUFBRXdELEdBQUluQixTQUFTLGFBRW5CckMsRUFBRXdELEdBQUluQixTQUFTLGVBSWZyQyxFQUFFLE9BQU9zRCxHQUFHLG1CQUNaNUQsRUFBSzBELGdCQUdUdEQsS0FBSytELGFBQWUsU0FBVUMsRUFBWS9CLEdBOEN0QyxTQUFTZ0MsSUFDTCxHQUFJQyxFQUFhQyxFQUFhLENBQzFCLElBQUlDLEVBQVcsR0FDWEMsSUFDQUQsRUFBVyx1SEFFZkosRUFBV0YsS0FBSywyQkFBMkJRLEtBQ3ZDLCtDQUNZRixFQUNaLGlEQWtCUkosRUFBV0YsS0FBSyxTQUFTbkIsR0FBRyxRQUFTLFdBQ2pDNEIsR0FBZ0IsS0FFcEJQLEVBQVdGLEtBQUssVUFBVW5CLEdBQUcsUUFBUyxXQUNsQzRCLEdBQWdCLEtBRWhCRixHQUFVRyxJQXBCVkEsSUFFSkMsR0FBYyxFQUdsQixTQUFTQyxFQUFjQyxHQUNuQixJQUFJakIsRUFBS2lCLEdBQVNYLEVBQ2xCTixFQUFHSSxLQUFLLFNBQVNjLE1BQ2pCbEIsRUFBR0ksS0FBSyxVQUFVYyxNQUNsQmxCLEVBQUdJLEtBQUssMkJBQTJCUSxLQUFLLElBQ3hDRyxHQUFjLEVBMkJsQixTQUFTRixFQUFnQk0sRUFBS0MsR0ErQzFCLEdBOUNJQSxHQUFlLElBQVJBLEVBQ1BDLEVBQWVELEVBR1ZELEVBQ0xFLElBRUFBLElBSUFDLElBQ0lELEVBQWViLEVBQWFDLElBQzVCWSxFQUFlLEdBR2ZBLEVBQWUsSUFDZkEsRUFBZWIsRUFBYUMsR0FHaENjLEtBR0FDLElBQ0FDLFFBQVFDLElBQUksUUFBU0wsR0FDakJBLEVBQWViLEVBQWFDLElBQzVCa0IsRUFBVXJELElBQUksU0FBVytDLEVBQWUsR0FBS08sRUFBYSxNQUMxREQsRUFBVUUsT0FBT0YsRUFBVUcsV0FBV0MsUUFBUWQsU0FDOUNVLEVBQVVHLFdBQVdDLFFBQVFDLFNBQzdCWCxLQUVBQSxFQUFlLEdBQ2ZNLEVBQVVyRCxJQUFJLFNBQVcrQyxFQUFlLEdBQUtPLEVBQWEsTUFDMURELEVBQVVNLFFBQVFOLEVBQVVHLFdBQVdJLE9BQU9qQixTQUM5Q1UsRUFBVUcsV0FBV0ksT0FBT0YsU0FDNUJYLElBQ0FjLEtBR0FBLEtBTUp4QixHQUFVRyxJQUNWc0IsRUFBTSxDQUNOLElBQUlDLEVBQVUvQixFQUFXRixLQUFLLHVCQUM5QmlDLEVBQVF2RCxZQUFZLGFBQ3BCdEMsRUFBRTZGLEVBQVFWLEVBQVV2QixLQUFLLFlBQVlYLEtBQUssZ0JBQWdCWixTQUFTLGNBSTNFLFNBQVNzRCxJQUNMUixFQUFVRyxXQUFXaEQsWUFBWSxXQUNqQzZDLEVBQVVXLFNBQVN2RixNQUFPc0UsRUFBZU8sR0FBWVcsR0FDckRaLEVBQVVHLFdBQVdVLEdBQUduQixHQUFjeEMsU0FBUyxXQUluRCxTQUFTMEMsRUFBZWhELEdBQ3BCLElBQUlrRSxFQUFRbEUsR0FBWThDLEVBQ3hCN0UsRUFBRWtHLEdBQU81RCxZQUFZLFdBQ3JCdEMsRUFBRWtHLEVBQU1ELElBQVE1RCxTQUFTLFdBRzdCLFNBQVNpQyxJQUNMUixFQUFXRixLQUFLLHVCQUF1QnVDLE1BQU9oQixFQUFVdkIsS0FBSyxZQUFZWCxLQUFLLGNBQWlCLEdBQy9GYSxFQUFXRixLQUFLLHNCQUFzQnVDLEtBQUtuQyxHQUcvQyxTQUFTb0MsSUFDTCxJQUFJQyxFQUFlLEVBQ2ZDLEVBQWEsRUFDakJ4QyxFQUFXckIsR0FBRyxhQUFjLFNBQVVNLEdBQ2xDLElBQUl3RCxFQUFJeEQsRUFBTXlELGNBQ2RILEVBQWVJLEtBQUtDLElBQUlILEVBQUVJLFFBQVEsR0FBR0MsT0FDckMzQixRQUFRQyxJQUFJLGdCQUVoQnBCLEVBQVdyQixHQUFHLFdBQVksU0FBVU0sR0FDaEMsSUFBSXdELEVBQUl4RCxFQUFNeUQsY0FDZEYsRUFBYUcsS0FBS0MsSUFBSUgsRUFBRU0sZUFBZSxHQUFHRCxPQUN0Q0gsS0FBS0MsSUFBSUwsRUFBZUMsR0FBYyxJQUVsQ2pDLEVBREFnQyxFQUFlQyxHQUNDLEdBRUEsS0FNaEMsU0FBU1EsRUFBYXJDLElBQ1RBLEdBQVNYLEdBQ2ZZLE1BR1AsU0FBU3FDLElBQ0RqRCxFQUFXYixLQUFLLGdCQUNoQmdCLEVBQWMrQyxTQUFTbEQsRUFBV2IsS0FBSyxlQUNuQ2pELEVBQUVVLEdBQVU0QyxHQUFHLGNBQWFXLEVBQWMsR0FDMUNqRSxFQUFFUyxHQUFVNkMsR0FBRyxjQUFhVyxFQUFjLEdBQzFDakUsRUFBRVEsR0FBVThDLEdBQUcsY0FBYVcsRUFBYyxJQUl0RCxTQUFTZ0QsSUFDTDdCLEVBQVl0QixFQUFXSixhQUFlTyxFQUN0Q0gsRUFBV0YsS0FBSyx3QkFBd0JGLFlBQVlNLEVBQWEsR0FBS29CLEdBQ3RFYyxFQUFNL0MsS0FBSyxXQUNQbkQsRUFBRUYsTUFBTTRELFdBQVcwQixHQUNuQnBGLEVBQUVGLE1BQU1tRCxLQUFLLGFBQWNqRCxFQUFFRixNQUFNbUcsV0EvTTNDLElBQUlpQixFQUVBOUIsRUFEQW5CLEVBQWMsRUFFZE0sR0FBYyxFQUNkMkIsRUFBUXBDLEVBQVdGLEtBQUssb0JBQ3hCdUIsRUFBWXJCLEVBQVdGLEtBQUssd0JBQzVCSSxFQUFha0MsRUFBTWlCLE9BQ25CdEMsRUFBZTlDLEdBQVksRUFDM0JxRixFQUFRdEQsRUFBV3BCLFNBQVMsdUJBQzVCa0QsRUFBTzlCLEVBQVdwQixTQUFTLHNCQUMzQnlCLEVBQVdMLEVBQVdwQixTQUFTLGlCQUMvQnNDLEVBQU9sQixFQUFXcEIsU0FBUyxrQkFDM0JxRCxFQUFnQmpDLEVBQVdiLEtBQUssa0JBQW9CLElBQ3BENkIsRUFBT2hCLEVBQVdwQixTQUFTLGtCQUMzQjJFLEVBQVd2RCxFQUFXcEIsU0FBUyx1QkFDL0JvQyxHQUNBQyxFQUFlaEQsR0FFZmlELElBQ0ErQixJQUNBRSxJQUNBdEIsS0FFQXlCLElBQ0F0RCxFQUFXdUIsT0FBTyw4Q0FDbEJ0QixLQUVBNkIsR0FzREosV0FDSTlCLEVBQVd1QixPQUFPLHFDQUdsQixJQUFLLElBRkRpQyxFQUFNeEQsRUFBV0YsS0FBSyxrQkFDdEIyRCxFQUFRLEdBQ0hDLEVBQUksRUFBR0EsRUFBSXhELEVBQVl3RCxJQUM1QkQsR0FBUyxvQkFBc0JDLEVBQUksV0FFdkNGLEVBQUlsRCxLQUFLbUQsR0FDVEQsRUFBSTFELEtBQUssUUFBUTJCLFFBQVFsRCxTQUFTLGFBQ2xDeUIsRUFBV0YsS0FBSyx1QkFBdUJuQixHQUFHLFFBQVMsV0FDL0M0QixHQUFnQixHQUFPckUsRUFBRUYsTUFBTW1ELEtBQUssZUEvRHhDd0UsR0FFQXpELEVBQWFDLEdBQ2JtQyxJQUVBaUIsR0FLQXZELEVBQVdGLEtBQUssMEJBQTBCVCxLQUFLLFdBQzNDbkQsRUFBRUYsTUFBTTJDLEdBQUcsUUFBUyxZQTRLNUIsU0FBMkJpRixHQUN2QixJQUFJMUgsRUFBRSxPQUFPc0QsR0FBRyxhQUFoQixDQUNBNUQsRUFBS2lDLFVBQ0wsSUFBSWdHLEVBQWMzSCxFQUFFLG9CQUNwQjJILEVBQVl0QyxPQUFPLDZTQUNuQnNDLEVBQVlDLE9BQ1osSUFBSUMsRUFBYzdILEVBQUUsYUFDUDhELEVBQVdGLEtBQUssb0JBQW9CYSxPQUFNLEdBQ2hEdEIsS0FBSyxXQUNSbkQsRUFBRUYsTUFBTTRELFdBQVcsSUFDbkIxRCxFQUFFLHVCQUF1QnFGLE9BQU9yRixFQUFFRixTQUV0Q0osRUFBS21FLGFBQWFnRSxFQUFhSCxHQUMvQjFILEVBQUUsbUJBQW1CeUMsR0FBRyxRQUFTLFlBS3JDLFNBQTRCb0YsR0FDeEJyRCxFQUFjcUQsR0FDZGYsRUFBYWUsR0FDYjdILEVBQUUsbUJBQW1CMEUsTUFDckIxRSxFQUFFLHFCQUFxQndGLFNBQ3ZCeEYsRUFBRSxvQkFBb0I4SCxPQUN0QnBJLEVBQUtzQyxZQVZEK0YsQ0FBbUJGLE1BekxmRyxDQUFrQmhJLEVBQUVGLE1BQU1tSSxTQUFTaEMsYUFnTi9DOUYsRUFBVStILE9BVFYsV0FDU2hCLElBQ0RBLEVBQWdCekgsV0FBVyxXQUN2QnlILEVBQWdCLEtBU3hCSixJQUNJOUIsSUFDQStCLElBQ0FFLElBZ0JBcEMsRUFBZWIsRUFBYUMsSUFDNUJZLEVBQWViLEVBQWFDLEdBQzVCRCxHQUFjQyxJQUFhWSxFQUFlLEdBaEIxQ2MsS0FFQXBCLElBQ0FDLElBQ0FULEtBRUFDLEVBQWFDLEdBQ2JtQyxLQW5CRyxTQWtDWHBHLEVBQUUsT0FBT3NELEdBQUcsZUFDWnRELEVBQUUsY0FBY21ELEtBQUssV0FDakJ6RCxFQUFLbUUsYUFBYTdELEVBQUVGLFNBRzVCQSxLQUFLcUkscUJBQXVCLFNBQVUzRSxHQUNoQixNQUFkQSxFQUFHNEUsVUFDSDVFLEVBQUt4RCxFQUFFd0QsR0FBSTZFLFFBQVEsT0FFdkJySSxFQUFFd0QsR0FBSTZFLFFBQVFySSxFQUFFLE9BQU80RCxLQUFLLE1BQU10QixZQUFZLGFBQzlDdEMsRUFBRXdELEdBQUluQixTQUFTLGNBWWZyQyxFQUFFLEtBQUtzRCxHQUFHLG9CQUNWdEQsRUFBRSxtQkFBbUJ5QyxHQUFHLFFBQVMsU0FBVU0sR0FDdkNBLEVBQU11RixpQkFDTjVJLEVBQUt5SSxxQkFBcUJwRixFQUFNQyxVQUlwQ2hELEVBQUUsS0FBS3NELEdBQUcsa0JBQ1Z0RCxFQUFFLGlCQUFpQnlDLEdBQUcsUUFBUyxTQUFVTSxHQUNyQ0EsRUFBTXVGLGlCQUNONUksRUFBS3lJLHFCQUFxQnBGLEVBQU1DLFVBSXhDbEQsS0FBS3lJLFdBQWEsV0FDZCxJQUFJQyxFQUFNdkksU0FBU3dJLGNBQWMsVUFDakNELEVBQUlFLEtBQU8sa0JBQ1hGLEVBQUlHLElBQU0scUNBQ1YsSUFBSUMsRUFBZ0I1SSxFQUFFLFVBQVVBLEVBQUUsVUFBVW1ILE9BQVMsR0FDckR5QixFQUFjQyxXQUFXQyxhQUFhTixFQUFLSSxHQUM1QjVJLEVBQUUsYUFDUm1ELEtBQUssV0FDVixJQUFJNEYsRUFBZ0IvSSxFQUFFRixNQUN0QmlKLEVBQWNuRixLQUFLLG9CQUFvQm5CLEdBQUcsUUFBUyxXQUMvQ3pDLEVBQUVGLE1BQU11QyxTQUFTLFdBQ2pCMEcsRUFBYzFHLFNBQVMsV0FDdkIzQyxFQUFLc0osV0FBV0QsUUFLNUJqSixLQUFLa0osV0FBYSxTQUFVeEYsR0FnQ3hCLFNBQVN5RixJQUNMQyxFQUFPQyxPQUNQRCxFQUFPRSxZQUNQNUYsRUFBR25CLFNBQVMsZUFDWm1CLEVBQUdJLEtBQUsscUJBQXFCbkIsR0FBRyxRQUFTNEcsR0FDekM3RixFQUFHSSxLQUFLLG1CQUFtQm5CLEdBQUcsUUFBUyxXQUNuQ3lHLEVBQU9JLGVBRVg5RixFQUFHSSxLQUFLLGtCQUFrQm5CLEdBQUcsUUFBUyxXQUNsQ3lHLEVBQU9FLGNBSWYsU0FBU0MsSUFDTHBFLFFBQVFDLElBQUksa0JBQ1osSUFBSXFFLEVBQVMvRixFQUFHSSxLQUFLLFVBQVUsR0FDM0I0RixFQUFvQkQsRUFBT0MsbUJBQXFCRCxFQUFPRSxzQkFBd0JGLEVBQU9HLHdCQUN0RkYsR0FDQUEsRUFBa0JHLEtBQUtKLEVBQXZCQyxHQWpEUixJQUFJTixFQUNBVSxFQUFPLFlBQWNwRyxFQUFHeUMsUUFFNUJ6QyxFQUFHSSxLQUFLLG9CQUFvQmtFLEtBQUssUUFFakN0RSxFQUNLSSxLQUFLLG1CQUNMWCxLQUFLLEtBQU0yRyxHQUNYdkgsU0FBUyx1QkFHVjZHLEVBQVMsSUFBSVcsR0FBR0MsT0FBT0YsR0FDbkJHLE1BQU8sSUFDUDVILE9BQVEsSUFDUjZILFFBQVN4RyxFQUFHUCxLQUFLLGdCQUNqQmdILFlBQ0lDLFNBQVUxRyxFQUFHUCxLQUFLLGdCQUNsQmtILE1BQU8sUUFDUEMsS0FBTSxFQUNOQyxTQUFVLEdBSWRDLFFBQ0lDLFFBQVN0QixNQXNEckJqSixFQUFFLE9BQU9zRCxHQUFHLGNBQ1o1RCxFQUFLNkksYUFFVHpJLEtBQUtILDhCQUFnQyxXQUNqQyxJQUFJNkssRUFBUXhLLEVBQUUsNkJBQ1Z5SyxFQUFjRCxFQUFNdkMsU0FDcEJ5QyxFQUFpQkQsRUFBWTFJLFdBQVd6QixJQUN4Q3FLLEVBQW9CRCxFQUFpQkQsRUFBWXZJLGNBQ2pEMEksRUFBYUosRUFBTTlHLGFBQ25CbUgsRUFBWTNLLEVBQUkwQixZQUNoQmtKLEVBQWMzSyxFQUFVK0IsY0FFNUIrQyxRQUFRQyxJQUFJd0YsR0FDWnpGLFFBQVFDLElBQUkyRixHQUdSSCxFQUFlLEdBQUtHLEdBQ2hCTCxFQUFNOUgsU0FBUyxjQUNmOEgsRUFBTWxJLFlBQVksWUFDbEJrSSxFQUFNMUksS0FDRnZCLEtBQU0sR0FDTndKLE1BQU8sTUFLZlcsRUFBaUJHLEVBQVksS0FDeEJMLEVBQU05SCxTQUFTLGNBQ2hCOEgsRUFBTTFJLEtBQ0Z2QixLQUFNaUssRUFBTTNJLFNBQVN0QixLQUFPLEtBQzVCd0osTUFBT2EsSUFFWEosRUFBTW5JLFNBQVMsYUFJZndJLEVBQVlDLEVBQWNILEVBQzFCSCxFQUFNbkksU0FBUyxtQkFFZm1JLEVBQU1sSSxZQUFZLG9CQUtsQmtJLEVBQU05SCxTQUFTLFlBQ2Y4SCxFQUFNMUksS0FDRkssT0FBUzJJLEVBQWMsSUFBTyxPQUdsQ04sRUFBTTFJLEtBQ0ZLLE9BQVEsTUFPeEJyQyxLQUFLaUwseUJBQTJCLFdBQzVCLEdBQUsvSyxFQUFFLE9BQU9zRCxHQUFHLGVBQWpCLENBQ0EsSUFDSWMsRUFBTyxHQURJcEUsRUFBRSxlQUVSbUQsS0FBSyxXQUNWaUIsR0FDSSxxRkFDQXBFLEVBQUVGLE1BQ0c4RCxLQUFLLE1BQ0x1QyxPQUNMLGVBRVJuRyxFQUFFLDRCQUE0Qm9FLEtBQUtBLEtBR3ZDdEUsS0FBS0Qsa0JBQW9CLFdBQ3JCRyxFQUFFLGVBQWVtRCxLQUFLLFdBRWxCLElBQUkwQixFQUFlN0UsRUFBRUYsTUFBTWlDLFdBQVd6QixJQUNsQzBLLEVBQVdoTCxFQUFFRixNQUFNb0MsY0FDbkIrSSxFQUFpQmpMLEVBQUVDLFVBQVUyQixZQUM3QnNKLEVBQUksR0FFSkEsRUFEQXJHLEVBQWVvRyxFQUNYLEdBRUNBLEVBQWlCcEcsR0FBZ0JtRyxHQUVsQyxJQUFHRSxFQUFJLEdBQ2YsSUFBSUMsRUFBYW5MLEVBQUUsc0JBQXNCQSxFQUFFRixNQUFNbUcsU0FDakRqRyxFQUFFbUwsR0FDR3ZILEtBQUssNkJBQ0w5QixJQUFJLFFBQWEsSUFBSm9KLEVBQVUsUUFLaENsTCxFQUFFLE9BQU9zRCxHQUFHLDZCQUE4QixDQUMxQyxJQUNJOUQsRUFEQUksR0FBUyxFQUVUSSxFQUFFLE9BQU9zRCxHQUFHLDhCQUNaMUQsR0FBUyxFQUNURixFQUFLcUwsMkJBQ0xyTCxFQUFLRyxxQkFpQlRNLEVBQVVpTCxPQUFPN0wsR0FDakJZLEVBQVUrSCxPQUFPM0ksR0FFckJPLEtBQUt1TCxZQUFjLFdBQ2YzTCxFQUFLNEwsV0FDR0MsWUFBWTdMLEVBQUs0TCxTQUFVLE1BS3ZDeEwsS0FBS3dMLFNBQVcsV0FDWnRMLEVBQUUsaUJBQWlCbUQsS0FBSyxXQUNwQixJQUFJcUksRUFBTyxJQUFJQyxLQUNYekwsRUFBRUYsTUFBTW1ELEtBQUssYUFBYXVJLEVBQUtFLGFBQWExTCxFQUFFRixNQUFNbUQsS0FBSyxhQUM3RCxJQUFJMEksRUFBUUgsRUFBS0ksV0FDYkMsRUFBVUwsRUFBS00sYUFDZkMsRUFBVVAsRUFBS1EsU0FDZkMsRUFBTVQsRUFBS1UsVUFDWEMsRUFBUVgsRUFBS1ksV0FDYkMsRUFBT2IsRUFBS2MsY0F3QlpYLEVBQVEsS0FBSUEsRUFBUSxJQUFNQSxHQUMxQkUsRUFBVSxLQUFJQSxFQUFVLElBQU1BLEdBQ2xDRSxHQXhCUSxjQUNBLGNBQ0EsVUFDQSxRQUNBLFVBQ0EsVUFDQSxXQWtCV0EsR0FDbkJJLEdBaEJRLFNBQ0EsVUFDQSxRQUNBLFNBQ0EsTUFDQSxPQUNBLE9BQ0EsVUFDQSxXQUNBLFVBQ0EsU0FDQSxXQUtRQSxHQUNabk0sRUFBRSx1QkFDRkEsRUFBRSxzQkFBc0JvRSxLQUFLdUgsRUFBUSxJQUFNRSxHQUMzQzdMLEVBQUUsdUJBQ0ZBLEVBQUUsc0JBQXNCb0UsS0FDcEIySCxFQUFVLEtBQU9FLEVBQU0sSUFBTUUsRUFBUSxJQUFNRSxNQU12RHJNLEVBQUUsT0FBT3NELEdBQUcsa0JBQ1o1RCxFQUFLMkwsY0FHTHJMLEVBQUUsT0FBT3NELEdBQUcscUJBQ1p0RCxFQUFFLG9CQUFvQm1ELEtBQUssV0FFdkJuRCxFQUFFRixNQUFNd0IsWUFDSmlMLGlCQUFrQixJQUNsQkMsaUJBQWtCLElBQ2xCQyxZQUFhLE1BQ2JsTCxhQUFjLE9BQ2RDLGdCQUFpQixLQUNqQmtMLFdBQVksVUFDWkMsV0FBWSxPQUNaQyxPQUFRLE9BQ1JsTCxZQUFhLGNBTXpCNUIsS0FBSytNLFVBQVksV0FDSTdNLEVBQUUsWUFDUm1ELEtBQUssV0FDWixJQUFJMkosRUFBVzlNLEVBQUVGLE1BQ2pCZ04sRUFBU2xKLEtBQUssbUJBQW1CVCxLQUFLLFdBQ2xDbkQsRUFBRUYsTUFBTTJDLEdBQUcsUUFBUyxXQUNoQi9DLEVBQUtxTixnQkFBZ0JELEVBQVU5TSxFQUFFRixNQUFNbUcsYUFHL0N2RyxFQUFLcU4sZ0JBQWdCRCxFQUFTLE1BSXRDaE4sS0FBS2lOLGdCQUFrQixTQUFVdkosRUFBSW9CLEdBQ2pDLElBQUlvSSxFQUFVaE4sRUFBRXdELEVBQUdJLEtBQUssb0JBQ3BCcUosRUFBUWpOLEVBQUV3RCxFQUFHSSxLQUFLLGtCQUN0QkosRUFBR0ksS0FBSyx3QkFBd0JULEtBQUssV0FDakNuRCxFQUFFLElBQU1BLEVBQUVGLE1BQU1tRCxLQUFLLGdCQUFnQjZFLFNBRXpDa0YsRUFBUTFLLFlBQVksVUFDcEIySyxFQUFLM0ssWUFBWSxVQUNqQnRDLEVBQUVnTixFQUFRcEksSUFBTXZDLFNBQVMsVUFDekJyQyxFQUFFaU4sRUFBS3JJLElBQU12QyxTQUFTLFVBRTBGLEdBQTdHckMsRUFBRSxJQUFNQSxFQUFFaU4sRUFBS3JJLElBQU1oQixLQUFLLHdCQUF3QlgsS0FBSyxnQkFBZ0JXLEtBQUsscUJBQXFCekIsVUFDaEduQyxFQUFFLElBQU1BLEVBQUVpTixFQUFLckksSUFBTWhCLEtBQUssd0JBQXdCWCxLQUFLLGdCQUFnQjJFLFFBSTNFNUgsRUFBRSxPQUFPc0QsR0FBRyxhQUNaNUQsRUFBS21OLFlBU1QvTSxLQUFLb04sc0JBQXdCLFdBQ3pCbE4sRUFBRSw2QkFBNkJtRCxLQUFLLFdBQzVCbkQsRUFBRUYsTUFBTTRDLFNBQVMsNkJBQ2pCaEQsRUFBS3lOLGdCQUFnQm5OLEVBQUVGLE9BR3ZCRSxFQUFFRixNQUFNNEMsU0FBUyxpQ0FDakJoRCxFQUFLME4sb0JBQW9CcE4sRUFBRUYsT0FJM0JFLEVBQUVGLE1BQU00QyxTQUFTLDRCQUNqQjFDLEVBQUVGLE1BQU00QyxTQUFTLDZCQUVqQmhELEVBQUsyTixlQUFlck4sRUFBRUYsT0FHdEJFLEVBQUVGLE1BQU00QyxTQUFTLDhCQUNqQmhELEVBQUs0TixnQkFBZ0J0TixFQUFFRixVQU1uQ0EsS0FBS3dOLGdCQUFrQixTQUFVOUosR0FDN0JBLEVBQUdsQixZQUFZLGFBQ2ZrQixFQUFHZixHQUFHLFFBQVMsV0FDWGUsRUFBRytKLFlBQVksZ0JBSXZCek4sS0FBS3VOLGVBQWlCLFNBQVU3SixJQUN4QkEsRUFBS3hELEVBQUV3RCxJQUNSbEIsWUFBWSxhQUNma0IsRUFBR2YsR0FBRyxRQUFTLFdBQ1hlLEVBQUcrSixZQUFZLGdCQUt2QnpOLEtBQUtxTixnQkFBa0IsU0FBVTNKLEdBQ3hCQSxFQUFHNkUsUUFBUSx3QkFBd0JwRixLQUFLLGNBQzdDTyxFQUFHZixHQUFHLFFBQVMsV0FDWC9DLEVBQUs4TixlQUFlaEssTUFLNUIxRCxLQUFLME4sZUFBaUIsU0FBVWhLLEdBQzVCaUssTUFDSSx3QkFDQWpLLEVBQUc2RSxRQUFRLHdCQUF3QnBGLEtBQUssY0FFNUNPLEVBQUcrSixZQUFZLGNBSW5Cek4sS0FBSzROLFlBQWMsU0FBVUMsRUFBR0MsRUFBS0MsR0FDakMsSUFDSXpOLE9BQU8wTixTQUFTQyxZQUFZSCxFQUFLQyxHQUNuQyxNQUFPdEgsR0FDTCxJQUNJbkcsT0FBTzROLFFBQVFDLFNBQVNKLEVBQU9ELEVBQUssSUFDdEMsTUFBT3JILEdBQ0wsR0FBb0IsaUJBQVQySCxNQUdQLE9BRkFQLEVBQUVFLE1BQVFBLEVBQ1ZGLEVBQUVDLElBQU1BLEdBQ0QsRUFFUEgsTUFBTSxzREFJbEIsT0FBTyxHQUtYM04sS0FBS3NOLG9CQUFzQixTQUFVNUosR0FDakMsSUFDSXlFLEdBREF6RSxFQUFLeEQsRUFBRXdELElBQ0s2RSxRQUFRLHlCQUN4QkosRUFBU2pJLEVBQUVpSSxJQUNDaEYsS0FBSyxjQUNiZ0YsRUFBT2hGLEtBQUssWUFBYTdDLE9BQU8rTixTQUFTQyxNQUN4Q25HLEVBQU9oRixLQUFLLGtCQUFrQmdGLEVBQU9oRixLQUFLLGdCQUFpQixZQUNoRU8sRUFBR1AsS0FBSyxPQUFRZ0YsRUFBT2hGLEtBQUssY0FDNUJPLEVBQUdQLEtBQUssTUFBTyxXQUNmTyxFQUFHZixHQUFHLFFBQVMsU0FBVThELEdBQ3JCQSxFQUFFK0IsaUJBQ0Y1SSxFQUFLZ08sWUFDRGxLLEVBQ0F5RSxFQUFPaEYsS0FBSyxhQUNaZ0YsRUFBT2hGLEtBQUsscUJBU3BCakQsRUFBRSxLQUFLc0QsR0FBRyxtQ0FDVjVELEVBQUswTixzQkFJTHBOLEVBQUUsS0FBS3NELEdBQUcsOEJBQ1Y1RCxFQUFLd04sd0JBTVRsTixFQUFFLDJCQUEyQnlDLEdBQUcsUUFBUyxXQUNyQy9DLEVBQUsyTyxZQUFZLGNBRXJCck8sRUFBRSwwQkFBMEJ5QyxHQUFHLFFBQVMsV0FDcEMvQyxFQUFLMk8sWUFBWSxhQUVyQnJPLEVBQUUseUJBQXlCeUMsR0FBRyxRQUFTLFdBQ25DL0MsRUFBSzJPLFlBQVksWUFHckJyTyxFQUFFLHlCQUF5QnlDLEdBQUcsUUFBUyxXQUNuQy9DLEVBQUs0TyxtQkFBbUIsY0FFNUJ0TyxFQUFFLHdCQUF3QnlDLEdBQUcsUUFBUyxXQUNsQy9DLEVBQUs0TyxtQkFBbUIsYUFFNUJ0TyxFQUFFLHVCQUF1QnlDLEdBQUcsUUFBUyxXQUNqQy9DLEVBQUs0TyxtQkFBbUIsWUFHNUJ4TyxLQUFLd08sbUJBQXFCLFNBQVVDLEdBRWhDZCxNQUFNLHFCQUF1QmMsSUFHakN6TyxLQUFLdU8sWUFBYyxTQUFVRSxHQUV6QmQsTUFBTSxjQUFnQmMsSUFHM0J6TyxLQUFLME8sUUFBVSxTQUFVaEwsR0FDckIsSUFHSWlMLEVBQ0FDLEVBQ0FDLEVBTEExRyxFQUFTekUsRUFBR3lFLFNBQ1oyRyxFQUFZM0csRUFBTzlGLFNBQ25CME0sRUFBWXJMLEVBQUdJLEtBQUssS0FJeEJxRSxFQUFPM0MsV0FBV25DLEtBQUssV0FDbkJ5TCxHQUFhNU8sRUFBRUYsTUFBTW9DLGFBQVksS0FHckMwTSxFQUFZQSxFQUFZcEwsRUFBR3JCLFNBQVUsR0FJckMwTSxFQUFVMUwsS0FBSyxZQUNYc0wsRUFBYXpPLEVBQUVGLE1BQU1vQyxhQUFZLElBRWhCME0sRUFDYkEsR0FBWUgsRUFFUkcsR0FHQUYsRUFBaUJqSSxLQUFLcUksTUFBTTlPLEVBQUVGLE1BQU1xRyxPQUFPZ0IsT0FBU3lILEVBQVlILEdBQ2hFRSxFQUFVM08sRUFBRUYsTUFBTXFHLE9BQU80SSxVQUFVLEVBQUdMLEVBQWMsR0FFcEQxTyxFQUFFRixNQUFNcUcsS0FBSyxFQUFZLE9BQ3pCeUksRUFBWSxHQU5aNU8sRUFBRUYsTUFBTWdDLElBQUksVUFBVSxXQXlCbEM5QixFQUFFLE9BQU9zRCxHQUFHLGtCQUNadEQsRUFBRSxnQkFBZ0JtRCxLQUFLLFdBQ25CekQsRUFBSzhPLFFBQVF4TyxFQUFFRixTQUluQkssRUFBVStILE9BQU8sV0FDYmxJLEVBQUUsZ0JBQWdCbUQsS0FBSyxXQUNuQnpELEVBQUs4TyxRQUFReE8sRUFBRUYsWUFPM0JBLEtBQUtrUCxrQkFBb0IsV0FDTmhQLEVBQUUsbUNBQ1JtRCxLQUFLLFdBQ1Z6RCxFQUFLdVAsUUFBUWpQLEVBQUVGLE1BQU8sUUFJOUJBLEtBQUttUCxRQUFVLFNBQVV6TCxFQUFJb0IsR0FDekIsSUFBSXNLLEVBQVcxTCxFQUFHMkMsT0FDZCtJLEVBQVMvSCxPQUFTdkMsSUFDbEJzSyxFQUFXQSxFQUFTQyxNQUFNLEVBQUd2SyxHQUFPLE1BQ3BDcEIsRUFBRzJDLEtBQUsrSSxLQU1abFAsRUFBRSxLQUFLc0QsR0FBRyxvQ0FDVjVELEVBQUtzUCxvQkFLUjlPLEVBQUlrUCxNQUFNLFdBRU4xUCxFQUFLdUMsZUFDTHZDLEVBQUswQyxzQkFJVHRDLEtBQUt1UCxPQUFTLFdBRVYsT0FEQXJQLEVBQUUsY0FBYzhGLFNBQVNsRSxVQUFXLEdBQUksTUFDakMsR0FHWDlCLEtBQUt3UCxhQUFlLFdBQ1p0UCxFQUFFQyxVQUFVMkIsWUFBYyxHQUMxQmIsRUFBU3NCLFNBQVMsY0FFbEJ0QixFQUFTdUIsWUFBWSxlQUs3QnZCLEVBQVMwQixHQUFHLFFBQVMvQyxFQUFLMlAsUUFFMUJsUCxFQUFVaUwsT0FBTyxXQUNiMUwsRUFBSzRQLGVBQ0R0UCxFQUFFLG1CQUFtQnNELEdBQUcsYUFDeEI1RCxFQUFLMEMsc0JBR2JqQyxFQUFVK0gsT0FBTyxXQUNieEksRUFBSzBDLG9CQUNMMUMsRUFBS3VDLGVBRURyQixFQUFTOEIsU0FBUyxZQUFZaEQsRUFBSzZDLGtCQUVuQ3ZDLEVBQUUsT0FBT3NELEdBQUcsdUJBQ1p0RCxFQUFFLHNCQUFzQm1ELEtBQUssV0FDekJuRCxFQUFFRixNQUFNd0MsWUFBWSxZQUNwQnRDLEVBQUVGLE1BQU13QyxZQUFZLGFBQ3BCNUMsRUFBSzZELGNBQWN2RCxFQUFFRixXQUlqQ0UsRUFBRUksUUFBUXFDLEdBQUcsT0FBUSxXQUNiekMsRUFBRSxPQUFPc0QsR0FBRyx1QkFDWnRELEVBQUUsc0JBQXNCbUQsS0FBSyxXQUN6QnpELEVBQUs2RCxjQUFjdkQsRUFBRUYsV0FLakNDLEVBQUswQyxHQUFHLFFBQVMsU0FBVU0sT0FZL0IvQyxFQUFFQyxVQUFVbVAsTUFFUixXQUNtQixJQUFJOVAiLCJmaWxlIjoiYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy/RhNGD0L3QutGG0LjRjywg0L7Qv9GA0LXQtNC10LvRj9GO0YnQsNGPINC30LDRgNC10LPQuNGB0YLQstC40YDQvtCy0LDQvdC90YvQuSDQv9C+0LvRjNC30L7QstCw0YLQtdC70Ywg0LjQu9C4INC90LXRglxyXG5cclxuLy8g0L/RgNC10LTRg9GB0LzQvtGC0YDQtdGC0Ywg0LLRi9GF0L7QtCDQuNC3INCw0LrQutCw0YPQvdGC0LBcclxuXHJcblxyXG5Hb1RvVHJpcCA9IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICB2YXIgc2VsZiA9IHRoaXMsXHJcbiAgICAgICAgYm9keSA9ICQoZG9jdW1lbnQuYm9keSksXHJcbiAgICAgICAgZG9jID0gJChkb2N1bWVudCksXHJcbiAgICAgICAgZG9jV2luZG93ID0gJCh3aW5kb3cpLFxyXG4gICAgICAgIGJvZHlQb3NpdGlvbiA9IHtcclxuICAgICAgICAgICAgdG9wOiBmYWxzZSxcclxuICAgICAgICAgICAgbGVmdDogZmFsc2VcclxuICAgICAgICB9LFxyXG4gICAgICAgIHRva2VuMzYwID0gJChcIiNndC1pcy0zNjBcIiksXHJcbiAgICAgICAgdG9rZW40ODAgPSAkKFwiI2d0LWlzLTQ4MFwiKSxcclxuICAgICAgICB0b2tlbjY2NyA9ICQoXCIjZ3QtaXMtNjY3XCIpLFxyXG4gICAgICAgIHRva2VuNzY4ID0gJChcIiNndC1pcy03NjhcIiksXHJcbiAgICAgICAgdG9rZW4xMDI0ID0gJChcIiNndC1pcy0xMDI0XCIpLFxyXG4gICAgICAgIHRva2VuMTIzMSA9ICQoXCIjZ3QtaXMtMTIzMVwiKSxcclxuICAgICAgICBndEhlYWRlciA9ICQoXCJoZWFkZXJcIiksXHJcbiAgICAgICAgZ3RGb290ZXIgPSAkKFwiZm9vdGVyXCIpLFxyXG4gICAgICAgIGd0V3JhcHBlciA9ICQoXCIjZ3Qtd3JhcHBlclwiKSxcclxuICAgICAgICB1cEJ1dHRvbiA9ICQoXCIjZ3QtdXBcIiksXHJcbiAgICAgICAgbW9iaWxlTWVudVN3aXRjaCA9ICQoXCIjZ3QtbW9iaWxlLW1lbnUtc3dpdGNoXCIpLFxyXG4gICAgICAgIGVudGVyQnV0dG9uID0gJCgnLmd0LWVudGVyJyksXHJcbiAgICAgICAgZW50ZXJXcmFwcGVyID0gJCgnI2d0LWhlYWRlci1lbnRlci13cmFwcGVyJyksXHJcbiAgICAgICAgZW50ZXJGb3JtID0gJCgnI2d0LWhlYWRlci1lbnRlcicpLFxyXG4gICAgICAgIGVudGVyQ2hvc2UgPSAkKCcjZ3QtaGVhZGVyLWVudGVyLWNob3NlJyksXHJcbiAgICAgICAgZW50ZXJDbG9zZSA9ICQoJyNndC1oZWFkZXItZW50ZXItY2xvc2UnKTtcclxuICAgICQoXCJodG1sXCIpLm5pY2VTY3JvbGwoe1xyXG4gICAgICAgIGN1cnNvcmJvcmRlcjogJzFweCBzb2xpZCAjNmQ2ZDZkJyxcclxuICAgICAgICBtb3VzZXNjcm9sbHN0ZXA6ICc2MCcsXHJcbiAgICAgICAgYm91bmNlc2Nyb2xsOiB0cnVlLFxyXG4gICAgICAgIGN1cnNvcmNvbG9yOiAnIzZkNmQ2ZCdcclxuICAgIH0pXHJcblxyXG5cclxuICAgIHRoaXMuZml4Qm9keSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAoYm9keVBvc2l0aW9uLnRvcCB8fCBib2R5UG9zaXRpb24ubGVmdCkgcmV0dXJuO1xyXG4gICAgICAgIGJvZHlQb3NpdGlvbi50b3AgPSBkb2Muc2Nyb2xsVG9wKCk7XHJcbiAgICAgICAgYm9keVBvc2l0aW9uLmxlZnQgPSBib2R5Lm9mZnNldCgpLmxlZnQ7XHJcbiAgICAgICAgYm9keS5jc3Moe1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogXCJmaXhlZFwiLFxyXG4gICAgICAgICAgICBsZWZ0OiBib2R5UG9zaXRpb24ubGVmdCArIFwicHhcIixcclxuICAgICAgICAgICAgdG9wOiAtMSAqIGJvZHlQb3NpdGlvbi50b3AgKyBcInB4XCJcclxuICAgICAgICB9KTtcclxuICAgIH07XHJcbiAgICBcclxuICAgIHRoaXMudW5maXhCb2R5ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGJvZHkuY3NzKHtcclxuICAgICAgICAgICAgcG9zaXRpb246IFwiXCIsXHJcbiAgICAgICAgICAgIGxlZnQ6IFwiXCIsXHJcbiAgICAgICAgICAgIHRvcDogXCJcIlxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGRvYy5zY3JvbGxUb3AoYm9keVBvc2l0aW9uLnRvcCk7XHJcbiAgICAgICAgYm9keVBvc2l0aW9uLnRvcCA9IGZhbHNlO1xyXG4gICAgICAgIGJvZHlQb3NpdGlvbi5sZWZ0ID0gZmFsc2U7XHJcbiAgICB9O1xyXG5cclxuICAgIHRoaXMuZm9vdGVySGVpZ2h0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBmb290ZXJIZWlnaHQgPSBndEZvb3Rlci5vdXRlckhlaWdodCgpO1xyXG4gICAgICAgIGlmIChmb290ZXJIZWlnaHQgPiBkb2NXaW5kb3cuaGVpZ2h0KCkgLSA1MCkge1xyXG4gICAgICAgICAgICBndEZvb3Rlci5jc3MoXCJwb3NpdGlvblwiLCBcInN0YXRpY1wiKTtcclxuICAgICAgICAgICAgZ3RXcmFwcGVyLmNzcyhcIm1hcmdpbi1ib3R0b21cIiwgXCJcIik7XHJcbiAgICAgICAgICAgIHVwQnV0dG9uLmNzcyhcInBvc2l0aW9uXCIsIFwic3RhdGljXCIpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGd0Rm9vdGVyLmNzcyhcInBvc2l0aW9uXCIsIFwiXCIpO1xyXG4gICAgICAgICAgICB1cEJ1dHRvbi5jc3MoXCJwb3NpdGlvblwiLCBcIlwiKTtcclxuICAgICAgICAgICAgZ3RXcmFwcGVyLmNzcyhcIm1hcmdpbi1ib3R0b21cIiwgZ3RGb290ZXIub3V0ZXJIZWlnaHQoKSArIFwicHhcIik7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIHRoaXMuZGVza1RvcE1lbnVTY3JvbGwgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKGRvY1dpbmRvdy5zY3JvbGxUb3AoKSA+IGd0SGVhZGVyLm91dGVySGVpZ2h0KCkpIHtcclxuICAgICAgICAgICAgZ3RIZWFkZXIuYWRkQ2xhc3MoXCJndC1oZWFkZXItc2Nyb2xsZWRcIik7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgZ3RIZWFkZXIucmVtb3ZlQ2xhc3MoXCJndC1oZWFkZXItc2Nyb2xsZWRcIik7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBcclxuICAgIHRoaXMubW9iaWxlTWVudUNsb3NlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHNlbGYudW5maXhCb2R5KCk7XHJcbiAgICAgICAgbW9iaWxlTWVudVN3aXRjaC5yZW1vdmVDbGFzcyhcImd0LW9wZW5cIik7XHJcbiAgICAgICAgZ3RIZWFkZXIucmVtb3ZlQ2xhc3MoXCJndC1vcGVuXCIpO1xyXG4gICAgfTtcclxuICAgIFxyXG4gICAgdGhpcy5tb2JpbGVNZW51T3BlbiA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBzZWxmLmZpeEJvZHkoKTtcclxuICAgICAgICBndEhlYWRlci5hZGRDbGFzcyhcImd0LW9wZW5cIik7XHJcbiAgICAgICAgbW9iaWxlTWVudVN3aXRjaC5hZGRDbGFzcyhcImd0LW9wZW5cIik7XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgbW9iaWxlTWVudVN3aXRjaC5vbihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAoJCh0aGlzKS5oYXNDbGFzcyhcImd0LW9wZW5cIikpIHtcclxuICAgICAgICAgICAgc2VsZi5tb2JpbGVNZW51Q2xvc2UoKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBzZWxmLm1vYmlsZU1lbnVPcGVuKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICB0aGlzLm9wZW5FbnRlckZvcm0gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgZW50ZXJXcmFwcGVyLmFkZENsYXNzKCdndC1vcGVuJyk7XHJcbiAgICAgICAgc2V0VGltZW91dChzaG93KTtcclxuICAgICAgICBmdW5jdGlvbiBzaG93KCkge1xyXG4gICAgICAgICAgICAkKCcjZ3QtaGVhZGVyLXJlZ2lzdGVyZWQnKS5hZGRDbGFzcygnZ3Qtb3BlbicpO1xyXG4gICAgICAgICAgICBlbnRlckZvcm0uYWRkQ2xhc3MoJ2d0LW9wZW4nKTtcclxuICAgICAgICAgICAgZW50ZXJDbG9zZS5hZGRDbGFzcygnZ3Qtb3BlbicpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICBcclxuICAgIHRoaXMuY2xvc2VFbnRlckZvcm0gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgZW50ZXJDbG9zZS5yZW1vdmVDbGFzcygnZ3Qtb3BlbicpO1xyXG4gICAgICAgIGVudGVyRm9ybS5yZW1vdmVDbGFzcygnZ3Qtb3BlbicpO1xyXG4gICAgICAgICQoJyNndC1oZWFkZXItcmVnaXN0ZXJlZCcpLnJlbW92ZUNsYXNzKCdndC1vcGVuJyk7XHJcbiAgICAgICAgc2VsZi5jbG9zZVJlc3RvcmVQYXNzKCk7XHJcbiAgICAgICAgc2V0VGltZW91dChoaWRlLCA3NTApO1xyXG4gICAgICAgIGZ1bmN0aW9uIGhpZGUoKSB7XHJcbiAgICAgICAgICAgIGVudGVyV3JhcHBlci5yZW1vdmVDbGFzcygnZ3Qtb3BlbicpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICBcclxuICAgIHRoaXMuY2hhbmdlRW50ZXJSZWdpc3RyYXRpb24gPSBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICBpZiAoZW50ZXJGb3JtLmhhc0NsYXNzKCQoZXZlbnQudGFyZ2V0KS5hdHRyKFwiY2xhc3NcIikpKVxyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgZW50ZXJGb3JtLnJlbW92ZUNsYXNzKFwiZ3QtY2hvc2VuLWVudGVyXCIpLnJlbW92ZUNsYXNzKFwiZ3QtY2hvc2VuLXJlZ2lzdHJhdGlvblwiKS5hZGRDbGFzcygkKGV2ZW50LnRhcmdldCkuYXR0cihcImNsYXNzXCIpKTtcclxuICAgIH07XHJcbiAgICBcclxuICAgIFxyXG4gICAgdGhpcy5vcGVuUmVzdG9yZVBhc3MgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgJCgnI2d0LWVudGVyLXBhc3MtcmVzdG9yZS13cmFwcGVyJykuYWRkQ2xhc3MoJ2d0LW9wZW4nKVxyXG4gICAgXHJcbiAgICB9O1xyXG4gICAgdGhpcy5jbG9zZVJlc3RvcmVQYXNzID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQoJyNndC1lbnRlci1wYXNzLXJlc3RvcmUtd3JhcHBlcicpLnJlbW92ZUNsYXNzKCdndC1vcGVuJylcclxuICAgIH07XHJcbiAgICBcclxuICAgIFxyXG4gICAgZW50ZXJCdXR0b24uZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgJCh0aGlzKS5vbignY2xpY2snLCBzZWxmLm9wZW5FbnRlckZvcm0pXHJcbiAgICB9KTtcclxuICAgIFxyXG4gICAgZW50ZXJDbG9zZS5vbignY2xpY2snLCBzZWxmLmNsb3NlRW50ZXJGb3JtKTtcclxuICAgIFxyXG4gICAgZW50ZXJDaG9zZS5vbignY2xpY2snLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICBzZWxmLmNoYW5nZUVudGVyUmVnaXN0cmF0aW9uKGV2ZW50KTtcclxuICAgIH0pO1xyXG4gICAgXHJcbiAgICAkKCcjZ3QtZW50ZXItZm9ybS1yZXN0b3JlLXBhc3MnKS5vbignY2xpY2snLHNlbGYub3BlblJlc3RvcmVQYXNzKTtcclxuICAgICQoJyNndC1lbnRlci1wYXNzLXJlc3RvcmUtc3VibWl0Jykub24oJ2NsaWNrJyxzZWxmLmNsb3NlUmVzdG9yZVBhc3MpO1xyXG5cclxuICAgIHRoaXMuc2V0QmFja2dyb3VuZCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgaW1nSG9sZGVycyA9ICQoXCIuZ3QtaW1nLWhvbGRlclwiKTtcclxuICAgICAgICBpbWdIb2xkZXJzLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAoISQodGhpcykuYXR0cihcImRhdGEtYmdcIikpIHJldHVybjtcclxuICAgICAgICAgICAgdmFyIHBhdGggPSAkKHRoaXMpLmF0dHIoXCJkYXRhLWJnXCIpO1xyXG4gICAgICAgICAgICBpZiAodG9rZW42NjcuaXMoXCI6dmlzaWJsZVwiKSkge1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5jc3MoXHJcbiAgICAgICAgICAgICAgICAgICAgXCJiYWNrZ3JvdW5kLWltYWdlXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgJ3VybChcIi4vaW1nL2JhY2tncm91bmRzL3Bob25lLycgKyBwYXRoICsgJ1wiKSdcclxuICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHRva2VuMTAyNC5pcyhcIjp2aXNpYmxlXCIpKSB7XHJcbiAgICAgICAgICAgICAgICAkKHRoaXMpLmNzcyhcclxuICAgICAgICAgICAgICAgICAgICBcImJhY2tncm91bmQtaW1hZ2VcIixcclxuICAgICAgICAgICAgICAgICAgICAndXJsKFwiLi9pbWcvYmFja2dyb3VuZHMvdGFibGV0LycgKyBwYXRoICsgJ1wiKSdcclxuICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJCh0aGlzKS5jc3MoXHJcbiAgICAgICAgICAgICAgICBcImJhY2tncm91bmQtaW1hZ2VcIixcclxuICAgICAgICAgICAgICAgICd1cmwoXCIuL2ltZy9iYWNrZ3JvdW5kcy9kZXNrdG9wLycgKyBwYXRoICsgJ1wiKSdcclxuICAgICAgICAgICAgKTtcclxuICAgICAgICB9KTtcclxuICAgIH07XHJcbiAgICBcclxuICAgIFxyXG4gICAgdGhpcy5pbWdIb2xkZXJGdW5jID0gZnVuY3Rpb24gKGVsKSB7XHJcbiAgICAgICAgJChlbCkucmVtb3ZlQ2xhc3MoXCJndC13aWR0aFwiKTtcclxuICAgICAgICAkKGVsKS5yZW1vdmVDbGFzcyhcImd0LWhlaWdodFwiKTtcclxuICAgICAgICAkKGVsKS5yZW1vdmVDbGFzcyhcImd0LXZpc2libGVcIik7XHJcbiAgICAgICAgdmFyIGhvbGRlckNvbnN0ID0gZWwub3V0ZXJIZWlnaHQoKSAvIGVsLm91dGVyV2lkdGgoKSxcclxuICAgICAgICAgICAgaW1nID0gZWwuZmluZCgnaW1nJyksXHJcbiAgICAgICAgICAgIGltZ0NvbnN0ID0gaW1nLm91dGVySGVpZ2h0KCkgLyBpbWcub3V0ZXJXaWR0aCgpO1xyXG4gICAgXHJcbiAgICAgICAgaWYgKGltZ0NvbnN0ID4gaG9sZGVyQ29uc3QpIHtcclxuICAgICAgICAgICAgJChlbCkuYWRkQ2xhc3MoXCJndC13aWR0aFwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICQoZWwpLmFkZENsYXNzKFwiZ3QtaGVpZ2h0XCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAkKGVsKS5hZGRDbGFzcyhcImd0LXZpc2libGVcIik7XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICBcclxuICAgIGlmICgkKFwiZGl2XCIpLmlzKFwiLmd0LWltZy1ob2xkZXJcIikpIHtcclxuICAgICAgICBzZWxmLnNldEJhY2tncm91bmQoKTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLmNyZWF0ZVNsaWRlciA9IGZ1bmN0aW9uIChjdXJyU2xpZGVyLCBwb3NpdGlvbikge1xyXG4gICAgICAgIHZhciBzbGlkZXJUaW1lT3V0LFxyXG4gICAgICAgICAgICBzY3JlZW5Db25zdCA9IDEsXHJcbiAgICAgICAgICAgIGJhc2VXaWR0aCxcclxuICAgICAgICAgICAgYXJyb3dzUmVhZHkgPSBmYWxzZSxcclxuICAgICAgICAgICAgaW5uZXIgPSBjdXJyU2xpZGVyLmZpbmQoXCIuZ3Qtc2xpZGVyLWlubmVyXCIpLFxyXG4gICAgICAgICAgICBjb250YWluZXIgPSBjdXJyU2xpZGVyLmZpbmQoXCIuZ3Qtc2xpZGVyLWNvbnRhaW5lclwiKSxcclxuICAgICAgICAgICAgaW5uZXJDb3VudCA9IGlubmVyLmxlbmd0aCxcclxuICAgICAgICAgICAgY3VyclBvc2l0aW9uID0gcG9zaXRpb24gfHwgMCxcclxuICAgICAgICAgICAgYXJyb3cgPSBjdXJyU2xpZGVyLmhhc0NsYXNzKFwiZ3Qtc2xpZGVyLWhhcy1hcnJvd1wiKSxcclxuICAgICAgICAgICAgZG90cyA9IGN1cnJTbGlkZXIuaGFzQ2xhc3MoXCJndC1zbGlkZXItaGFzLWRvdHNcIiksXHJcbiAgICAgICAgICAgIG51bVBhbmVsID0gY3VyclNsaWRlci5oYXNDbGFzcyhcImd0LXNsaWRlci1udW1cIiksXHJcbiAgICAgICAgICAgIHRyYW0gPSBjdXJyU2xpZGVyLmhhc0NsYXNzKFwiZ3Qtc2xpZGVyLXRyYW1cIiksXHJcbiAgICAgICAgICAgIHRyYW1BbmltYXRpb24gPSBjdXJyU2xpZGVyLmF0dHIoJ2RhdGEtZHVyYXRpb24nKSB8fCAzMDAsXHJcbiAgICAgICAgICAgIGZhZGUgPSBjdXJyU2xpZGVyLmhhc0NsYXNzKFwiZ3Qtc2xpZGVyLWZhZGVcIiksXHJcbiAgICAgICAgICAgIGhhc0Nsb25lID0gY3VyclNsaWRlci5oYXNDbGFzcyhcImd0LXNsaWRlci1oYXMtY2xvbmVcIik7XHJcbiAgICAgICAgaWYgKGZhZGUpIHtcclxuICAgICAgICAgICAgZmFkZVNsaWRlck1vdmUocG9zaXRpb24pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodHJhbSkge1xyXG4gICAgICAgICAgICBmaW5kU2NyZWVuQ29uc3QoKTtcclxuICAgICAgICAgICAgc2V0QmFzZVdpZHRoKCk7XHJcbiAgICAgICAgICAgIHRyYW1TbGlkZXJNb3ZlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChhcnJvdykge1xyXG4gICAgICAgICAgICBjdXJyU2xpZGVyLmFwcGVuZCgnPGRpdiBjbGFzcz1cImd0LXNsaWRlci1hcnJvdy1ob2xkZXJcIj48L2Rpdj4nKTtcclxuICAgICAgICAgICAgY3JlYXRlQXJyb3dzKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChkb3RzKSB7XHJcbiAgICAgICAgICAgIGNyZWF0ZURvdHMoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGlubmVyQ291bnQgPiBzY3JlZW5Db25zdCkge1xyXG4gICAgICAgICAgICBjcmVhdGVUb3VjaCgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoaGFzQ2xvbmUpIHtcclxuICAgICAgICAgICAgY3JlYXRlQ2xvbmVMaXN0ZW5lcnMoKTtcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICBmdW5jdGlvbiBjcmVhdGVDbG9uZUxpc3RlbmVycygpIHtcclxuICAgICAgICAgICAgY3VyclNsaWRlci5maW5kKCcuZ3Qtc2xpZGVyLWlubmVyLWNvdmVyJykuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAkKHRoaXMpLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICBjcmVhdGVDbG9uZVNsaWRlcigkKHRoaXMpLnBhcmVudCgpLmluZGV4KCkpXHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgIGZ1bmN0aW9uIGNyZWF0ZUFycm93cygpIHtcclxuICAgICAgICAgICAgaWYgKGlubmVyQ291bnQgPiBzY3JlZW5Db25zdCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIG51bUlubmVyID0gJyc7XHJcbiAgICAgICAgICAgICAgICBpZiAobnVtUGFuZWwpIHtcclxuICAgICAgICAgICAgICAgICAgICBudW1Jbm5lciA9ICc8ZGl2IGNsYXNzPVwiZ3Qtc2xpZGVyLWFycm93LW51bVwiPjxpIGNsYXNzPVwiZ3Qtc2xpZGVyLW51bS1jdXJyXCI+PC9pPjxpPtC40Lc8L2k+PGkgY2xhc3M9XCJndC1zbGlkZXItbnVtLW1heFwiPjwvaT48L2Rpdj4nXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBjdXJyU2xpZGVyLmZpbmQoXCIuZ3Qtc2xpZGVyLWFycm93LWhvbGRlclwiKS5odG1sKFxyXG4gICAgICAgICAgICAgICAgICAgICc8c3BhbiBjbGFzcyA9IFwiZ3Qtc2xpZGVyLWFycm93IGxlZnRcIj4nICtcclxuICAgICAgICAgICAgICAgICAgICBcIjwvc3Bhbj5cIiArIG51bUlubmVyICtcclxuICAgICAgICAgICAgICAgICAgICAnPHNwYW4gY2xhc3MgPSBcImd0LXNsaWRlci1hcnJvdyByaWdodFwiPicgK1xyXG4gICAgICAgICAgICAgICAgICAgIFwiPC9zcGFuPlwiXHJcbiAgICAgICAgICAgICAgICApO1xyXG4gICAgICAgICAgICAgICAgY3JlYXRlQXJyb3dzTGlzdGVuZXJzKCk7XHJcbiAgICAgICAgICAgICAgICBzaG93TnVtKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYXJyb3dzUmVhZHkgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgIGZ1bmN0aW9uIGRlc3Ryb3lBcnJvd3MoY2xvbmUpIHtcclxuICAgICAgICAgICAgdmFyIGVsID0gY2xvbmUgfHwgY3VyclNsaWRlcjtcclxuICAgICAgICAgICAgZWwuZmluZChcIi5sZWZ0XCIpLm9mZigpO1xyXG4gICAgICAgICAgICBlbC5maW5kKFwiLnJpZ2h0XCIpLm9mZigpO1xyXG4gICAgICAgICAgICBlbC5maW5kKFwiLmd0LXNsaWRlci1hcnJvdy1ob2xkZXJcIikuaHRtbChcIlwiKTtcclxuICAgICAgICAgICAgYXJyb3dzUmVhZHkgPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICBmdW5jdGlvbiBjcmVhdGVBcnJvd3NMaXN0ZW5lcnMoKSB7XHJcbiAgICAgICAgICAgIGN1cnJTbGlkZXIuZmluZChcIi5sZWZ0XCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgb25lTW92ZUZ1bmN0aW9uKGZhbHNlKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGN1cnJTbGlkZXIuZmluZChcIi5yaWdodFwiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIG9uZU1vdmVGdW5jdGlvbih0cnVlKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGlmIChudW1QYW5lbCkgc2hvd051bSgpXHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgZnVuY3Rpb24gY3JlYXRlRG90cygpIHtcclxuICAgICAgICAgICAgY3VyclNsaWRlci5hcHBlbmQoJzxkaXYgY2xhc3M9XCJndC1zbGlkZXItbmF2XCI+PC9kaXY+Jyk7XHJcbiAgICAgICAgICAgIHZhciBuYXYgPSBjdXJyU2xpZGVyLmZpbmQoXCIuZ3Qtc2xpZGVyLW5hdlwiKSxcclxuICAgICAgICAgICAgICAgIHNwYW5zID0gXCJcIjtcclxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBpbm5lckNvdW50OyBpKyspIHtcclxuICAgICAgICAgICAgICAgIHNwYW5zICs9IFwiPHNwYW4gZGF0YS1udW0gPSBcIiArIGkgKyBcIj48L3NwYW4+XCI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgbmF2Lmh0bWwoc3BhbnMpO1xyXG4gICAgICAgICAgICBuYXYuZmluZChcInNwYW5cIikuZmlyc3QoKS5hZGRDbGFzcyhcImd0LWFjdGl2ZVwiKTtcclxuICAgICAgICAgICAgY3VyclNsaWRlci5maW5kKFwiLmd0LXNsaWRlci1uYXYgc3BhblwiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIG9uZU1vdmVGdW5jdGlvbih0cnVlLCArJCh0aGlzKS5hdHRyKFwiZGF0YS1udW1cIikpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICBmdW5jdGlvbiBvbmVNb3ZlRnVuY3Rpb24oYnVsLCBudW0pIHtcclxuICAgICAgICAgICAgaWYgKG51bSB8fCBudW0gPT09IDApIHtcclxuICAgICAgICAgICAgICAgIGN1cnJQb3NpdGlvbiA9IG51bTtcclxuICAgICAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgICAgIGVsc2UgaWYgKGJ1bCkge1xyXG4gICAgICAgICAgICAgICAgY3VyclBvc2l0aW9uKys7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjdXJyUG9zaXRpb24tLTtcclxuICAgICAgICAgICAgfVxyXG4gICAgXHJcbiAgICBcclxuICAgICAgICAgICAgaWYgKGZhZGUpIHtcclxuICAgICAgICAgICAgICAgIGlmIChjdXJyUG9zaXRpb24gPiBpbm5lckNvdW50IC0gc2NyZWVuQ29uc3QpIHtcclxuICAgICAgICAgICAgICAgICAgICBjdXJyUG9zaXRpb24gPSAwO1xyXG4gICAgXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZiAoY3VyclBvc2l0aW9uIDwgMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGN1cnJQb3NpdGlvbiA9IGlubmVyQ291bnQgLSBzY3JlZW5Db25zdDtcclxuICAgIFxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZmFkZVNsaWRlck1vdmUoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgICAgIGlmICh0cmFtKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnc3RhcnQnLCBjdXJyUG9zaXRpb24pO1xyXG4gICAgICAgICAgICAgICAgaWYgKGN1cnJQb3NpdGlvbiA+IGlubmVyQ291bnQgLSBzY3JlZW5Db25zdCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRhaW5lci5jc3MoJ2xlZnQnLCAoLShjdXJyUG9zaXRpb24gLSAyKSAqIGJhc2VXaWR0aCkgKyAncHgnKTtcclxuICAgICAgICAgICAgICAgICAgICBjb250YWluZXIuYXBwZW5kKGNvbnRhaW5lci5jaGlsZHJlbigpLmZpcnN0KCkuY2xvbmUoKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgY29udGFpbmVyLmNoaWxkcmVuKCkuZmlyc3QoKS5yZW1vdmUoKTtcclxuICAgICAgICAgICAgICAgICAgICBjdXJyUG9zaXRpb24tLTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmIChjdXJyUG9zaXRpb24gPCAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29udGFpbmVyLmNzcygnbGVmdCcsICgtKGN1cnJQb3NpdGlvbiArIDIpICogYmFzZVdpZHRoKSArICdweCcpO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRhaW5lci5wcmVwZW5kKGNvbnRhaW5lci5jaGlsZHJlbigpLmxhc3QoKS5jbG9uZSgpKTtcclxuICAgICAgICAgICAgICAgICAgICBjb250YWluZXIuY2hpbGRyZW4oKS5sYXN0KCkucmVtb3ZlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgY3VyclBvc2l0aW9uKys7XHJcbiAgICAgICAgICAgICAgICAgICAgdHJhbVNsaWRlck1vdmUoKTtcclxuICAgIFxyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICB0cmFtU2xpZGVyTW92ZSgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgXHJcbiAgICBcclxuICAgICAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgICAgIGlmIChudW1QYW5lbCkgc2hvd051bSgpO1xyXG4gICAgICAgICAgICBpZiAoZG90cykge1xyXG4gICAgICAgICAgICAgICAgdmFyIGFsbERvdHMgPSBjdXJyU2xpZGVyLmZpbmQoXCIuZ3Qtc2xpZGVyLW5hdiBzcGFuXCIpO1xyXG4gICAgICAgICAgICAgICAgYWxsRG90cy5yZW1vdmVDbGFzcyhcImd0LWFjdGl2ZVwiKTtcclxuICAgICAgICAgICAgICAgICQoYWxsRG90c1tjb250YWluZXIuZmluZCgnLmd0LW9wZW4nKS5hdHRyKCdkYXRhLWNvdW50JyldKS5hZGRDbGFzcyhcImd0LWFjdGl2ZVwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgIGZ1bmN0aW9uIHRyYW1TbGlkZXJNb3ZlKCkge1xyXG4gICAgICAgICAgICBjb250YWluZXIuY2hpbGRyZW4oKS5yZW1vdmVDbGFzcygnZ3Qtb3BlbicpO1xyXG4gICAgICAgICAgICBjb250YWluZXIuYW5pbWF0ZSh7bGVmdDogLWN1cnJQb3NpdGlvbiAqIGJhc2VXaWR0aH0sIHRyYW1BbmltYXRpb24pO1xyXG4gICAgICAgICAgICBjb250YWluZXIuY2hpbGRyZW4oKS5lcShjdXJyUG9zaXRpb24pLmFkZENsYXNzKCdndC1vcGVuJyk7XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICBcclxuICAgICAgICBmdW5jdGlvbiBmYWRlU2xpZGVyTW92ZShwb3NpdGlvbikge1xyXG4gICAgICAgICAgICB2YXIgaW5kZXggPSBwb3NpdGlvbiB8fCBjdXJyUG9zaXRpb247XHJcbiAgICAgICAgICAgICQoaW5uZXIpLnJlbW92ZUNsYXNzKCdndC1vcGVuJyk7XHJcbiAgICAgICAgICAgICQoaW5uZXJbaW5kZXhdKS5hZGRDbGFzcygnZ3Qtb3BlbicpO1xyXG4gICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgIGZ1bmN0aW9uIHNob3dOdW0oKSB7XHJcbiAgICAgICAgICAgIGN1cnJTbGlkZXIuZmluZCgnLmd0LXNsaWRlci1udW0tY3VycicpLnRleHQoKyhjb250YWluZXIuZmluZCgnLmd0LW9wZW4nKS5hdHRyKCdkYXRhLWNvdW50JykpICsgMSk7XHJcbiAgICAgICAgICAgIGN1cnJTbGlkZXIuZmluZCgnLmd0LXNsaWRlci1udW0tbWF4JykudGV4dChpbm5lckNvdW50KTtcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICBmdW5jdGlvbiBjcmVhdGVUb3VjaCgpIHtcclxuICAgICAgICAgICAgdmFyIGluaXRpYWxQb2ludCA9IDAsXHJcbiAgICAgICAgICAgICAgICBmaW5hbFBvaW50ID0gMDtcclxuICAgICAgICAgICAgY3VyclNsaWRlci5vbihcInRvdWNoc3RhcnRcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgZSA9IGV2ZW50Lm9yaWdpbmFsRXZlbnQ7XHJcbiAgICAgICAgICAgICAgICBpbml0aWFsUG9pbnQgPSBNYXRoLmFicyhlLnRvdWNoZXNbMF0ucGFnZVgpO1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJ0b3VjaHN0YXJ0XCIpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgY3VyclNsaWRlci5vbihcInRvdWNoZW5kXCIsIGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGUgPSBldmVudC5vcmlnaW5hbEV2ZW50O1xyXG4gICAgICAgICAgICAgICAgZmluYWxQb2ludCA9IE1hdGguYWJzKGUuY2hhbmdlZFRvdWNoZXNbMF0ucGFnZVgpO1xyXG4gICAgICAgICAgICAgICAgaWYgKE1hdGguYWJzKGluaXRpYWxQb2ludCAtIGZpbmFsUG9pbnQpID4gNTApIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoaW5pdGlhbFBvaW50ID4gZmluYWxQb2ludCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBvbmVNb3ZlRnVuY3Rpb24odHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgb25lTW92ZUZ1bmN0aW9uKGZhbHNlKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgIGZ1bmN0aW9uIGRlc3Ryb3lUb3VjaChjbG9uZSkge1xyXG4gICAgICAgICAgICB2YXIgZWwgPSBjbG9uZSB8fCBjdXJyU2xpZGVyO1xyXG4gICAgICAgICAgICBlbC5vZmYoKTtcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICBmdW5jdGlvbiBmaW5kU2NyZWVuQ29uc3QoKSB7XHJcbiAgICAgICAgICAgIGlmIChjdXJyU2xpZGVyLmF0dHIoXCJkYXRhLWNvdW50XCIpKSB7XHJcbiAgICAgICAgICAgICAgICBzY3JlZW5Db25zdCA9IHBhcnNlSW50KGN1cnJTbGlkZXIuYXR0cihcImRhdGEtY291bnRcIikpO1xyXG4gICAgICAgICAgICAgICAgaWYgKCQodG9rZW43NjgpLmlzKFwiOnZpc2libGVcIikpIHNjcmVlbkNvbnN0ID0gMztcclxuICAgICAgICAgICAgICAgIGlmICgkKHRva2VuNjY3KS5pcyhcIjp2aXNpYmxlXCIpKSBzY3JlZW5Db25zdCA9IDI7XHJcbiAgICAgICAgICAgICAgICBpZiAoJCh0b2tlbjM2MCkuaXMoXCI6dmlzaWJsZVwiKSkgc2NyZWVuQ29uc3QgPSAxO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgZnVuY3Rpb24gc2V0QmFzZVdpZHRoKCkge1xyXG4gICAgICAgICAgICBiYXNlV2lkdGggPSBjdXJyU2xpZGVyLm91dGVyV2lkdGgoKSAvIHNjcmVlbkNvbnN0O1xyXG4gICAgICAgICAgICBjdXJyU2xpZGVyLmZpbmQoXCIuZ3Qtc2xpZGVyLWNvbnRhaW5lclwiKS5vdXRlcldpZHRoKChpbm5lckNvdW50ICsgMSkgKiBiYXNlV2lkdGgpO1xyXG4gICAgICAgICAgICBpbm5lci5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICQodGhpcykub3V0ZXJXaWR0aChiYXNlV2lkdGgpO1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5hdHRyKCdkYXRhLWNvdW50JywgJCh0aGlzKS5pbmRleCgpKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgZnVuY3Rpb24gY3JlYXRlQ2xvbmVTbGlkZXIoY2xpY2tQb3NpdGlvbikge1xyXG4gICAgICAgICAgICBpZiAoJChcImRpdlwiKS5pcyhcIiNndC1jbG9uZVwiKSkgcmV0dXJuO1xyXG4gICAgICAgICAgICBzZWxmLmZpeEJvZHkoKTtcclxuICAgICAgICAgICAgdmFyIGJvZHlXcmFwcGVyID0gJChcIiNndC1ib2R5LXdyYXBwZXJcIik7XHJcbiAgICAgICAgICAgIGJvZHlXcmFwcGVyLmFwcGVuZCgnPGRpdiBpZCA9IFwiZ3QtY2xvbmUtd3JhcHBlclwiICAgY2xhc3M9XCJjb250YWluZXJcIj48ZGl2IGlkID0gXCJndC1jbG9uZVwiIGNsYXNzPVwiZ3Qtc2xpZGVyIGd0LXNsaWRlci1jbG9uZSBndC1zbGlkZXItZmFkZSBndC1zbGlkZXItbnVtICBndC1zbGlkZXItaGFzLWFycm93XCI+PGRpdiBpZCA9IFwiZ3QtY2xvbmUtY2xvc2VcIiBjbGFzcyA9IFwiZ3Qtc2xpZGVyLWNsb25lLWNsb3NlXCI+PC9kaXY+PGRpdiAgaWQgPSBcImd0LWNsb25lLWNvbnRhaW5lclwiIGNsYXNzPVwiZ3Qtc2xpZGVyLWNvbnRhaW5lclwiPjwvZGl2PjwvZGl2PjwvZGl2PicpO1xyXG4gICAgICAgICAgICBib2R5V3JhcHBlci5zaG93KCk7XHJcbiAgICAgICAgICAgIHZhciBjbG9uZVNsaWRlciA9ICQoJyNndC1jbG9uZScpLFxyXG4gICAgICAgICAgICAgICAgaW5uZXJzID0gY3VyclNsaWRlci5maW5kKFwiLmd0LXNsaWRlci1pbm5lclwiKS5jbG9uZSh0cnVlKTtcclxuICAgICAgICAgICAgaW5uZXJzLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5vdXRlcldpZHRoKCcnKTtcclxuICAgICAgICAgICAgICAgICQoJyNndC1jbG9uZS1jb250YWluZXInKS5hcHBlbmQoJCh0aGlzKSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBzZWxmLmNyZWF0ZVNsaWRlcihjbG9uZVNsaWRlciwgY2xpY2tQb3NpdGlvbik7XHJcbiAgICAgICAgICAgICQoXCIjZ3QtY2xvbmUtY2xvc2VcIikub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBkZXN0cm95Q2xvbmVTbGlkZXIoY2xvbmVTbGlkZXIpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICBmdW5jdGlvbiBkZXN0cm95Q2xvbmVTbGlkZXIoY2xvbmVTbGlkZXIpIHtcclxuICAgICAgICAgICAgZGVzdHJveUFycm93cyhjbG9uZVNsaWRlcik7XHJcbiAgICAgICAgICAgIGRlc3Ryb3lUb3VjaChjbG9uZVNsaWRlcik7XHJcbiAgICAgICAgICAgICQoXCIjZ3QtY2xvbmUtY2xvc2VcIikub2ZmKCk7XHJcbiAgICAgICAgICAgICQoXCIjZ3QtY2xvbmUtd3JhcHBlclwiKS5yZW1vdmUoKTtcclxuICAgICAgICAgICAgJChcIiNndC1ib2R5LXdyYXBwZXJcIikuaGlkZSgpO1xyXG4gICAgICAgICAgICBzZWxmLnVuZml4Qm9keSgpO1xyXG4gICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgIC8vLy8vLy8vLy9yZXNpemVTbGlkZXJcclxuICAgICAgICBmdW5jdGlvbiByZXNpemVTbGlkZXIoKSB7XHJcbiAgICAgICAgICAgIGlmICghc2xpZGVyVGltZU91dCkge1xyXG4gICAgICAgICAgICAgICAgc2xpZGVyVGltZU91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHNsaWRlclRpbWVPdXQgPSBudWxsO1xyXG4gICAgICAgICAgICAgICAgICAgIHJlc2l6ZUZ1bmMoKTtcclxuICAgICAgICAgICAgICAgIH0sIDEzMik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICBkb2NXaW5kb3cucmVzaXplKHJlc2l6ZVNsaWRlcik7XHJcbiAgICBcclxuICAgICAgICBmdW5jdGlvbiByZXNpemVGdW5jKCkge1xyXG4gICAgICAgICAgICBkZXN0cm95VG91Y2goKTtcclxuICAgICAgICAgICAgaWYgKHRyYW0pIHtcclxuICAgICAgICAgICAgICAgIGZpbmRTY3JlZW5Db25zdCgpO1xyXG4gICAgICAgICAgICAgICAgc2V0QmFzZVdpZHRoKCk7XHJcbiAgICAgICAgICAgICAgICByZXNpemVNb3ZlKCk7XHJcbiAgICAgICAgICAgICAgICB0cmFtU2xpZGVyTW92ZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChhcnJvd3NSZWFkeSkge1xyXG4gICAgICAgICAgICAgICAgZGVzdHJveUFycm93cygpO1xyXG4gICAgICAgICAgICAgICAgY3JlYXRlQXJyb3dzKClcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoaW5uZXJDb3VudCA+IHNjcmVlbkNvbnN0KSB7XHJcbiAgICAgICAgICAgICAgICBjcmVhdGVUb3VjaCgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICBcclxuICAgIFxyXG4gICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgIGZ1bmN0aW9uIHJlc2l6ZU1vdmUoKSB7XHJcbiAgICAgICAgICAgIGlmIChjdXJyUG9zaXRpb24gPiBpbm5lckNvdW50IC0gc2NyZWVuQ29uc3QpXHJcbiAgICAgICAgICAgICAgICBjdXJyUG9zaXRpb24gPSBpbm5lckNvdW50IC0gc2NyZWVuQ29uc3Q7XHJcbiAgICAgICAgICAgIGlmIChpbm5lckNvdW50IDw9IHNjcmVlbkNvbnN0KSBjdXJyUG9zaXRpb24gPSAwO1xyXG4gICAgXHJcbiAgICBcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgIH07XHJcbiAgICBpZiAoJChcImRpdlwiKS5pcyhcIi5ndC1zbGlkZXJcIikpIHtcclxuICAgICAgICAkKFwiLmd0LXNsaWRlclwiKS5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgc2VsZi5jcmVhdGVTbGlkZXIoJCh0aGlzKSk7XHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuICAgIHRoaXMubWFuYWdlR3RBY3RpdmVVbE1lbnUgPSBmdW5jdGlvbiAoZWwpIHtcclxuICAgICAgICBpZiAoZWwudGFnTmFtZSAhPSBcImxpXCIpXHJcbiAgICAgICAgICAgIGVsID0gJChlbCkuY2xvc2VzdChcImxpXCIpO1xyXG4gICAgXHJcbiAgICAgICAgJChlbCkuY2xvc2VzdCgkKFwidWxcIikpLmZpbmQoXCJsaVwiKS5yZW1vdmVDbGFzcyhcImd0LWFjdGl2ZVwiKTtcclxuICAgICAgICAkKGVsKS5hZGRDbGFzcyhcImd0LWFjdGl2ZVwiKTtcclxuICAgIH07XHJcbiAgICBcclxuICAgIFxyXG4gICAgLy8gaWYgKCQoXCIqXCIpLmlzKFwiLmd0LWh1bmRyZXQtbWVudVwiKSkge1xyXG4gICAgLy8gICAgICQoXCIuZ3QtaHVuZHJldC1tZW51XCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAvLyAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAvLyAgICAgICAgIHNlbGYubWFuYWdlR3RBY3RpdmVVbE1lbnUoZXZlbnQudGFyZ2V0KTtcclxuICAgIC8vICAgICB9KTtcclxuICAgIC8vIH1cclxuICAgIFxyXG4gICAgXHJcbiAgICBpZiAoJChcIipcIikuaXMoXCIuZ3QtYnV0dG9uLW1lbnVcIikpIHtcclxuICAgICAgICAkKFwiLmd0LWJ1dHRvbi1tZW51XCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIHNlbGYubWFuYWdlR3RBY3RpdmVVbE1lbnUoZXZlbnQudGFyZ2V0KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgaWYgKCQoXCIqXCIpLmlzKFwiLmd0LW1lbnUtbmV3c1wiKSkge1xyXG4gICAgICAgICQoXCIuZ3QtbWVudS1uZXdzXCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIHNlbGYubWFuYWdlR3RBY3RpdmVVbE1lbnUoZXZlbnQudGFyZ2V0KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLnNldFBsYXllcnMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIHRhZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIik7XHJcbiAgICAgICAgdGFnLnR5cGUgPSBcInRleHQvamF2YXNjcmlwdFwiO1xyXG4gICAgICAgIHRhZy5zcmMgPSBcImh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3BsYXllcl9hcGlcIjtcclxuICAgICAgICB2YXIgbGFzdFNjcmlwdFRhZyA9ICQoXCJzY3JpcHRcIilbJChcInNjcmlwdFwiKS5sZW5ndGggLSAxXTtcclxuICAgICAgICBsYXN0U2NyaXB0VGFnLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRhZywgbGFzdFNjcmlwdFRhZyk7XHJcbiAgICAgICAgdmFyIGd0VmlkZW9zID0gJChcIi5ndC12aWRlb1wiKTtcclxuICAgICAgICBndFZpZGVvcy5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIGN1cnJlbnRQbGF5ZXIgPSAkKHRoaXMpO1xyXG4gICAgICAgICAgICBjdXJyZW50UGxheWVyLmZpbmQoXCIuZ3QtdmlkZW8tc3dpdGNoXCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5hZGRDbGFzcyhcImd0LW9wZW5cIik7XHJcbiAgICAgICAgICAgICAgICBjdXJyZW50UGxheWVyLmFkZENsYXNzKFwiZ3Qtb3BlblwiKTtcclxuICAgICAgICAgICAgICAgIHNlbGYuYWRkWW91VHViZShjdXJyZW50UGxheWVyKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICB0aGlzLmFkZFlvdVR1YmUgPSBmdW5jdGlvbiAoZWwpIHtcclxuICAgICAgICB2YXIgcGxheWVyLFxyXG4gICAgICAgICAgICBlbElkID0gXCJndC12aWRlby1cIiArIGVsLmluZGV4KCk7XHJcbiAgICBcclxuICAgICAgICBlbC5maW5kKFwiLmd0LXZpZGVvLXN3aXRjaFwiKS5oaWRlKCdzbG93Jyk7XHJcbiAgICBcclxuICAgICAgICBlbFxyXG4gICAgICAgICAgICAuZmluZChcIi5ndC12aWRlby1pbm5lclwiKVxyXG4gICAgICAgICAgICAuYXR0cihcImlkXCIsIGVsSWQpXHJcbiAgICAgICAgICAgIC5hZGRDbGFzcyhcImd0LXZpZGVvLWZvcmVncm91bmRcIik7XHJcbiAgICBcclxuICAgICAgICBmdW5jdGlvbiBvbllvdVR1YmVJZnJhbWVBUElSZWFkeSgpIHtcclxuICAgICAgICAgICAgcGxheWVyID0gbmV3IFlULlBsYXllcihlbElkLCB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNjAwLFxyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA0MDAsXHJcbiAgICAgICAgICAgICAgICB2aWRlb0lkOiBlbC5hdHRyKFwiZGF0YS15b3V0dWJlXCIpLFxyXG4gICAgICAgICAgICAgICAgcGxheWVyVmFyczoge1xyXG4gICAgICAgICAgICAgICAgICAgIHBsYXlsaXN0OiBlbC5hdHRyKFwiZGF0YS15b3V0dWJlXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiBcIndoaXRlXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgbG9vcDogMSxcclxuICAgICAgICAgICAgICAgICAgICBhdXRvcGxheTogMVxyXG4gICAgICAgICAgICAgICAgICAgIC8vIGRpc2FibGVrYjogMCxcclxuICAgICAgICAgICAgICAgICAgICAvLyBjb250cm9sczogMFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGV2ZW50czoge1xyXG4gICAgICAgICAgICAgICAgICAgIG9uUmVhZHk6IGluaXRpYWxpemVcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgb25Zb3VUdWJlSWZyYW1lQVBJUmVhZHkoKTtcclxuICAgIFxyXG4gICAgICAgIGZ1bmN0aW9uIGluaXRpYWxpemUoKSB7XHJcbiAgICAgICAgICAgIHBsYXllci5tdXRlKCk7XHJcbiAgICAgICAgICAgIHBsYXllci5wbGF5VmlkZW8oKTtcclxuICAgICAgICAgICAgZWwuYWRkQ2xhc3MoXCJndC12aWRlby1vblwiKTtcclxuICAgICAgICAgICAgZWwuZmluZChcIi5ndC12aWRlby11bmNvdmVyXCIpLm9uKCdjbGljaycsIHBsYXlGdWxsU2NyZWVuKTtcclxuICAgICAgICAgICAgZWwuZmluZChcIi5ndC12aWRlby1wYXVzZVwiKS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBwbGF5ZXIucGF1c2VWaWRlbygpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgZWwuZmluZChcIi5ndC12aWRlby1wbGF5XCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgcGxheWVyLnBsYXlWaWRlbygpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICBmdW5jdGlvbiBwbGF5RnVsbFNjcmVlbigpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ3BsYXlGdWxsU2NyZWVuJyk7XHJcbiAgICAgICAgICAgIHZhciBpZnJhbWUgPSBlbC5maW5kKCdpZnJhbWUnKVswXTtcclxuICAgICAgICAgICAgdmFyIHJlcXVlc3RGdWxsU2NyZWVuID0gaWZyYW1lLnJlcXVlc3RGdWxsU2NyZWVuIHx8IGlmcmFtZS5tb3pSZXF1ZXN0RnVsbFNjcmVlbiB8fCBpZnJhbWUud2Via2l0UmVxdWVzdEZ1bGxTY3JlZW47XHJcbiAgICAgICAgICAgIGlmIChyZXF1ZXN0RnVsbFNjcmVlbikge1xyXG4gICAgICAgICAgICAgICAgcmVxdWVzdEZ1bGxTY3JlZW4uYmluZChpZnJhbWUpKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICBcclxuICAgIH07XHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICBpZiAoJChcImRpdlwiKS5pcyhcIi5ndC12aWRlb1wiKSkge1xyXG4gICAgICAgIHNlbGYuc2V0UGxheWVycygpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5maXhBcnRpY2xlU2Nyb2xsVGFibGVQb3NpdGlvbiA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgdGFibGUgPSAkKFwiLmd0LWFydGljbGUtdGFibGUtd3JhcHBlclwiKSxcclxuICAgICAgICAgICAgdGFibGVQYXJlbnQgPSB0YWJsZS5wYXJlbnQoKSxcclxuICAgICAgICAgICAgdGFibGVQYXJlbnRUb3AgPSB0YWJsZVBhcmVudC5wb3NpdGlvbigpLnRvcCxcclxuICAgICAgICAgICAgdGFibGVQYXJlbnRCb3R0b20gPSB0YWJsZVBhcmVudFRvcCArIHRhYmxlUGFyZW50Lm91dGVySGVpZ2h0KCksXHJcbiAgICAgICAgICAgIHRhYmxlV2lkdGggPSB0YWJsZS5vdXRlcldpZHRoKCksXHJcbiAgICAgICAgICAgIHdpbmRvd1RvcCA9IGRvYy5zY3JvbGxUb3AoKSxcclxuICAgICAgICAgICAgd2lkb3dIZWlnaHQgPSBkb2NXaW5kb3cub3V0ZXJIZWlnaHQoKTtcclxuICAgIFxyXG4gICAgICAgIGNvbnNvbGUubG9nKHRhYmxlUGFyZW50VG9wKTtcclxuICAgICAgICBjb25zb2xlLmxvZyh3aW5kb3dUb3ApO1xyXG4gICAgXHJcbiAgICBcclxuICAgICAgICBpZiAodGFibGVQYXJlbnRUb3ArOTAgPiB3aW5kb3dUb3ApIHtcclxuICAgICAgICAgICAgaWYgKHRhYmxlLmhhc0NsYXNzKFwiZ3QtZml4ZWRcIikpIHtcclxuICAgICAgICAgICAgICAgIHRhYmxlLnJlbW92ZUNsYXNzKFwiZ3QtZml4ZWRcIik7XHJcbiAgICAgICAgICAgICAgICB0YWJsZS5jc3Moe1xyXG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6IFwiXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IFwiXCJcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgaWYgKHRhYmxlUGFyZW50VG9wIDwgd2luZG93VG9wICsgOTApIHtcclxuICAgICAgICAgICAgaWYgKCF0YWJsZS5oYXNDbGFzcyhcImd0LWZpeGVkXCIpKSB7XHJcbiAgICAgICAgICAgICAgICB0YWJsZS5jc3Moe1xyXG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6IHRhYmxlLm9mZnNldCgpLmxlZnQgKyBcInB4XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IHRhYmxlV2lkdGhcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgdGFibGUuYWRkQ2xhc3MoXCJndC1maXhlZFwiKTtcclxuICAgIFxyXG4gICAgXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHdpbmRvd1RvcCArIHdpZG93SGVpZ2h0ID4gdGFibGVQYXJlbnRCb3R0b20pIHtcclxuICAgICAgICAgICAgICAgIHRhYmxlLmFkZENsYXNzKFwiZ3QtZml4ZWQtYm90dG9tXCIpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGFibGUucmVtb3ZlQ2xhc3MoXCJndC1maXhlZC1ib3R0b21cIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICAoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAodGFibGUuaGFzQ2xhc3MoXCJndC1maXhlZFwiKSkge1xyXG4gICAgICAgICAgICAgICAgdGFibGUuY3NzKHtcclxuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6ICh3aWRvd0hlaWdodCAtIDEyMCkgKyAncHgnXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRhYmxlLmNzcyh7XHJcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAnJ1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KSgpO1xyXG4gICAgfTtcclxuICAgIFxyXG4gICAgXHJcbiAgICB0aGlzLmNyZWF0ZUFydGljdGVTY3JvbGxUYWJsZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAoISQoXCJkaXZcIikuaXMoXCIuZ3QtYXJ0aWNsZVwiKSkgcmV0dXJuO1xyXG4gICAgICAgIHZhciBhcnRpY2xlcyA9ICQoXCIuZ3QtYXJ0aWNsZVwiKSxcclxuICAgICAgICAgICAgaHRtbCA9IFwiXCI7XHJcbiAgICAgICAgYXJ0aWNsZXMuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGh0bWwgKz1cclxuICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzID0gXCJndC1hcnRpY2xlLXNjcm9sbFwiPjxkaXYgY2xhc3MgPSBcImd0LWFydGljbGUtc2Nyb2xsLXNoYWRvd1wiPjwvZGl2PjxwPicgK1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKVxyXG4gICAgICAgICAgICAgICAgICAgIC5maW5kKFwiaDJcIilcclxuICAgICAgICAgICAgICAgICAgICAudGV4dCgpICtcclxuICAgICAgICAgICAgICAgIFwiPC9wPjwvZGl2PlwiO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgICQoXCIjZ3QtYXJ0aWNsZS1zY3JvbGwtdGFibGVcIikuaHRtbChodG1sKTtcclxuICAgIH07XHJcbiAgICBcclxuICAgIHRoaXMuc2hvd0FydGlkbGVTaGFkb3cgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgJChcIi5ndC1hcnRpY2xlXCIpLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZygkKHRoaXMpKTtcclxuICAgICAgICAgICAgdmFyIGN1cnJQb3NpdGlvbiA9ICQodGhpcykucG9zaXRpb24oKS50b3AsXHJcbiAgICAgICAgICAgICAgICBlbEhlaWdodCA9ICQodGhpcykub3V0ZXJIZWlnaHQoKSxcclxuICAgICAgICAgICAgICAgIHdpbmRvd1Bvc2l0aW9uID0gJChkb2N1bWVudCkuc2Nyb2xsVG9wKCksXHJcbiAgICAgICAgICAgICAgICB4ID0gMDtcclxuICAgICAgICAgICAgaWYgKGN1cnJQb3NpdGlvbiA+IHdpbmRvd1Bvc2l0aW9uKSB7XHJcbiAgICAgICAgICAgICAgICB4ID0gMDtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHggPSAod2luZG93UG9zaXRpb24gLSBjdXJyUG9zaXRpb24pIC8gZWxIZWlnaHQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHggPiAxKSB4ID0gMTtcclxuICAgICAgICAgICAgdmFyIGN1cnJTaGFkb3cgPSAkKFwiLmd0LWFydGljbGUtc2Nyb2xsXCIpWyQodGhpcykuaW5kZXgoKV07XHJcbiAgICAgICAgICAgICQoY3VyclNoYWRvdylcclxuICAgICAgICAgICAgICAgIC5maW5kKFwiLmd0LWFydGljbGUtc2Nyb2xsLXNoYWRvd1wiKVxyXG4gICAgICAgICAgICAgICAgLmNzcyhcIndpZHRoXCIsIHggKiAxMDAgKyBcIiVcIik7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICBcclxuICAgIGlmICgkKCdkaXYnKS5pcygnLmd0LWFydGljbGUtdGFibGUtd3JhcHBlcicpKSB7XHJcbiAgICAgICAgdmFyIHNoYWRvdyA9IGZhbHNlLFxyXG4gICAgICAgICAgICBzY3JvbGxUaW1lb3V0O1xyXG4gICAgICAgIGlmICgkKCdkaXYnKS5pcyhcIi5ndC1hcnRpY2xlLXNjcm9sbC10YWJsZVwiKSkge1xyXG4gICAgICAgICAgICBzaGFkb3cgPSB0cnVlO1xyXG4gICAgICAgICAgICBzZWxmLmNyZWF0ZUFydGljdGVTY3JvbGxUYWJsZSgpO1xyXG4gICAgICAgICAgICBzZWxmLnNob3dBcnRpZGxlU2hhZG93KCk7XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICBcclxuICAgICAgICBmdW5jdGlvbiBzY3JvbGxUaHJvdHRsZXIoKSB7XHJcbiAgICAgICAgICAgIGlmICghc2Nyb2xsVGltZW91dCkge1xyXG4gICAgICAgICAgICAgICAgc2Nyb2xsVGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHNjcm9sbFRpbWVvdXQgPSBudWxsO1xyXG4gICAgICAgICAgICAgICAgICAgIHNlbGYuZml4QXJ0aWNsZVNjcm9sbFRhYmxlUG9zaXRpb24oKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoc2hhZG93KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuc2hvd0FydGlkbGVTaGFkb3coKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgZG9jV2luZG93LnNjcm9sbChzY3JvbGxUaHJvdHRsZXIpO1xyXG4gICAgICAgIGRvY1dpbmRvdy5yZXNpemUoc2Nyb2xsVGhyb3R0bGVyKTtcclxuICAgIH1cclxuICAgIHRoaXMuc2V0Q3VyclRpbWUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgc2VsZi5jdXJyVGltZSgpO1xyXG4gICAgICAgIHZhciB0ID0gc2V0SW50ZXJ2YWwoc2VsZi5jdXJyVGltZSwgMzAwMDApO1xyXG4gICAgfTtcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgIHRoaXMuY3VyclRpbWUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgJChcIi5ndC1jdXJyLXRpbWVcIikuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciBkYXRlID0gbmV3IERhdGUoKTtcclxuICAgICAgICAgICAgaWYgKCQodGhpcykuYXR0cihcImRhdGEtZ210XCIpKSBkYXRlLnNldFVUQ0hvdXJzKCskKHRoaXMpLmF0dHIoXCJkYXRhLWdtdFwiKSk7XHJcbiAgICAgICAgICAgIHZhciBob3VycyA9IGRhdGUuZ2V0SG91cnMoKSxcclxuICAgICAgICAgICAgICAgIG1pbnV0ZXMgPSBkYXRlLmdldE1pbnV0ZXMoKSxcclxuICAgICAgICAgICAgICAgIHdlZWtkYXkgPSBkYXRlLmdldERheSgpLFxyXG4gICAgICAgICAgICAgICAgZGF5ID0gZGF0ZS5nZXREYXRlKCksXHJcbiAgICAgICAgICAgICAgICBtb250aCA9IGRhdGUuZ2V0TW9udGgoKSxcclxuICAgICAgICAgICAgICAgIHllYXIgPSBkYXRlLmdldEZ1bGxZZWFyKCksXHJcbiAgICAgICAgICAgICAgICB3ZWVrZGF5cyA9IFtcclxuICAgICAgICAgICAgICAgICAgICBcItCS0L7RgdC60YDQtdGB0LXQvdGM0LVcIixcclxuICAgICAgICAgICAgICAgICAgICBcItCf0L7QvdC10LTQtdC70YzQvdC40LpcIixcclxuICAgICAgICAgICAgICAgICAgICBcItCS0YLQvtGA0L3QuNC6XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCLQodGA0LXQtNCwXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCLQp9C10YLQstC10YDQs1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwi0J/Rj9GC0L3QuNGG0LBcIixcclxuICAgICAgICAgICAgICAgICAgICBcItCh0YPQsdCx0L7RgtCwXCJcclxuICAgICAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgICAgICBtb250aGVzID0gW1xyXG4gICAgICAgICAgICAgICAgICAgIFwi0Y/QvdCy0LDRgNGPXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCLRhNC10LLRgNCw0LvRj1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwi0LzQsNGA0YLQsFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwi0LDQv9GA0LXQu9GPXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCLQvNCw0Y9cIixcclxuICAgICAgICAgICAgICAgICAgICBcItC40Y7QvdGPXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCLQuNGO0LvRj1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwi0LDQstCz0YPRgdGC0LBcIixcclxuICAgICAgICAgICAgICAgICAgICBcItGB0LXQvdGC0Y/QsdGA0Y9cIixcclxuICAgICAgICAgICAgICAgICAgICBcItC+0LrRgtGP0LHRgNGPXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCLQvdC+0Y/QsdGA0Y9cIixcclxuICAgICAgICAgICAgICAgICAgICBcItC00LXQutCw0LHRgNGPXCJcclxuICAgICAgICAgICAgICAgIF07XHJcbiAgICAgICAgICAgIGlmIChob3VycyA8IDEwKSBob3VycyA9IFwiMFwiICsgaG91cnM7XHJcbiAgICAgICAgICAgIGlmIChtaW51dGVzIDwgMTApIG1pbnV0ZXMgPSBcIjBcIiArIG1pbnV0ZXM7XHJcbiAgICAgICAgICAgIHdlZWtkYXkgPSB3ZWVrZGF5c1t3ZWVrZGF5XTtcclxuICAgICAgICAgICAgbW9udGggPSBtb250aGVzW21vbnRoXTtcclxuICAgICAgICAgICAgaWYgKCQoXCIuZ3QtY3Vyci10aW1lLXRpbWVcIikpXHJcbiAgICAgICAgICAgICAgICAkKFwiLmd0LWN1cnItdGltZS10aW1lXCIpLmh0bWwoaG91cnMgKyBcIjpcIiArIG1pbnV0ZXMpO1xyXG4gICAgICAgICAgICBpZiAoJChcIi5ndC1jdXJyLXRpbWUtZGF0ZVwiKSlcclxuICAgICAgICAgICAgICAgICQoXCIuZ3QtY3Vyci10aW1lLWRhdGVcIikuaHRtbChcclxuICAgICAgICAgICAgICAgICAgICB3ZWVrZGF5ICsgXCIsIFwiICsgZGF5ICsgXCIgXCIgKyBtb250aCArIFwiIFwiICsgeWVhclxyXG4gICAgICAgICAgICAgICAgKTtcclxuICAgICAgICB9KTtcclxuICAgIH07XHJcbiAgICBcclxuICAgIFxyXG4gICAgaWYgKCQoXCJkaXZcIikuaXMoXCIuZ3QtY3Vyci10aW1lXCIpKSB7XHJcbiAgICAgICAgc2VsZi5zZXRDdXJyVGltZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICgkKFwiZGl2XCIpLmlzKFwiLmd0LWlubmVyLXNjcm9sbFwiKSkge1xyXG4gICAgICAgICQoJy5ndC1pbm5lci1zY3JvbGwnKS5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgIFxyXG4gICAgICAgICAgICAkKHRoaXMpLm5pY2VTY3JvbGwoe1xyXG4gICAgICAgICAgICAgICAgY3Vyc29yb3BhY2l0eW1pbjogJzEnLFxyXG4gICAgICAgICAgICAgICAgY3Vyc29yb3BhY2l0eW1heDogJzEnLFxyXG4gICAgICAgICAgICAgICAgY3Vyc29yd2lkdGg6ICcycHgnLFxyXG4gICAgICAgICAgICAgICAgY3Vyc29yYm9yZGVyOiAnbm9uZScsXHJcbiAgICAgICAgICAgICAgICBtb3VzZXNjcm9sbHN0ZXA6ICc2MCcsXHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBcIiNDRUNFQ0VcIixcclxuICAgICAgICAgICAgICAgIHJhaWxvZmZzZXQ6ICdsZWZ0JyxcclxuICAgICAgICAgICAgICAgIHppbmRleDogXCJhdXRvXCIsXHJcbiAgICAgICAgICAgICAgICBjdXJzb3Jjb2xvcjogXCIjQ0VDRUNFXCJcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuICAgIC8vIF9pbm5lcl9zY3JvbGwgIG11c3QgYmUgYmVmb3JlIF90YWJfc2xpZGVyIC0gIWltcG9ydGFudFxyXG5cclxuICAgIHRoaXMudGFiU2xpZGVyID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciB0YWJTbGlkZXJzID0gJChcIi5ndC10YWJzXCIpO1xyXG4gICAgICAgIHRhYlNsaWRlcnMuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciBjdXJyVGFicyA9ICQodGhpcyk7XHJcbiAgICAgICAgICAgIGN1cnJUYWJzLmZpbmQoXCIuZ3QtdGFicy1idXR0b25cIikuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAkKHRoaXMpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHNlbGYudGFiU2xpZGVyQWN0aW9uKGN1cnJUYWJzLCAkKHRoaXMpLmluZGV4KCkpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBzZWxmLnRhYlNsaWRlckFjdGlvbihjdXJyVGFicywwKTtcclxuICAgICAgICB9KTtcclxuICAgIH07XHJcbiAgICBcclxuICAgIHRoaXMudGFiU2xpZGVyQWN0aW9uID0gZnVuY3Rpb24gKGVsLCBudW0pIHtcclxuICAgICAgICB2YXIgYnV0dG9ucyA9ICQoZWwuZmluZChcIi5ndC10YWJzLWJ1dHRvblwiKSksXHJcbiAgICAgICAgICAgIG1haW4gPSAgJChlbC5maW5kKFwiLmd0LXRhYnMtbWFpblwiKSlcclxuICAgICAgICBlbC5maW5kKCcuZ3QtaW5uZXItc2Nyb2xsLXRhYicpLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAkKCcjJyArICQodGhpcykuYXR0cignZGF0YS1zY3JvbGwnKSkuaGlkZSgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGJ1dHRvbnMucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIik7XHJcbiAgICAgICAgbWFpbi5yZW1vdmVDbGFzcyhcImFjdGl2ZVwiKTtcclxuICAgICAgICAkKGJ1dHRvbnNbbnVtXSkuYWRkQ2xhc3MoXCJhY3RpdmVcIik7XHJcbiAgICAgICAgJChtYWluW251bV0pLmFkZENsYXNzKFwiYWN0aXZlXCIpO1xyXG4gICAgXHJcbiAgICAgICAgaWYoJCgnIycgKyAkKG1haW5bbnVtXSkuZmluZCgnLmd0LWlubmVyLXNjcm9sbC10YWInKS5hdHRyKCdkYXRhLXNjcm9sbCcpKS5maW5kKCcuZ3Qtc2Nyb2xsLWN1cnNvcicpLmhlaWdodCgpICE9IDApe1xyXG4gICAgICAgICAgICAkKCcjJyArICQobWFpbltudW1dKS5maW5kKCcuZ3QtaW5uZXItc2Nyb2xsLXRhYicpLmF0dHIoJ2RhdGEtc2Nyb2xsJykpLnNob3coKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICBpZiAoJChcImRpdlwiKS5pcyhcIi5ndC10YWJzXCIpKSB7XHJcbiAgICAgICAgc2VsZi50YWJTbGlkZXIoKTtcclxuICAgIH1cclxuXHJcblxyXG5cclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vZG9lcyBub3Qgd29ya1xyXG5cclxuICAgIFxyXG4gICAgXHJcbiAgICB0aGlzLmNyZWF0ZUljb25zSXRlbXNDbGljayA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkKFwiLmd0LXZpZXctY2FyZHMtaWNvbnMtaXRlbVwiKS5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKCQodGhpcykuaGFzQ2xhc3MoXCJndC12aWV3LWNhcmRzLWljb25zLXZpc2l0XCIpKSB7XHJcbiAgICAgICAgICAgICAgICBzZWxmLmNyZWF0ZVZpc2l0TGluaygkKHRoaXMpKTtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoJCh0aGlzKS5oYXNDbGFzcyhcImd0LXZpZXctY2FyZHMtaWNvbnMtYm9va21hcmtzXCIpKSB7XHJcbiAgICAgICAgICAgICAgICBzZWxmLmNyZWF0ZUJvb2ttYXJrc0xpbmsoJCh0aGlzKSk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKFxyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5oYXNDbGFzcyhcImd0LXZpZXctY2FyZHMtaWNvbnMtcGluXCIpIHx8XHJcbiAgICAgICAgICAgICAgICAkKHRoaXMpLmhhc0NsYXNzKFwiZ3Qtdmlldy1jYXJkcy1pY29ucy1zaGFyZVwiKVxyXG4gICAgICAgICAgICApIHtcclxuICAgICAgICAgICAgICAgIHNlbGYudG9nZ2xlR3RBY3RpdmUoJCh0aGlzKSk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKCQodGhpcykuaGFzQ2xhc3MoXCJndC12aWV3LWNhcmRzLWljb25zLXNoYXJlXCIpKSB7XHJcbiAgICAgICAgICAgICAgICBzZWxmLmNyZWF0ZVNoYXJlTGluaygkKHRoaXMpKTtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuICAgIFxyXG4gICAgdGhpcy5jcmVhdGVTaGFyZUxpbmsgPSBmdW5jdGlvbiAoZWwpIHtcclxuICAgICAgICBlbC5yZW1vdmVDbGFzcyhcImd0LWFjdGl2ZVwiKTtcclxuICAgICAgICBlbC5vbihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgZWwudG9nZ2xlQ2xhc3MoXCJndC1hY3RpdmVcIik7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICB0aGlzLnRvZ2dsZUd0QWN0aXZlID0gZnVuY3Rpb24gKGVsKSB7XHJcbiAgICAgICAgdmFyIGVsID0gJChlbCk7XHJcbiAgICAgICAgZWwucmVtb3ZlQ2xhc3MoXCJndC1hY3RpdmVcIik7XHJcbiAgICAgICAgZWwub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGVsLnRvZ2dsZUNsYXNzKFwiZ3QtYWN0aXZlXCIpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuICAgIFxyXG4gICAgXHJcbiAgICB0aGlzLmNyZWF0ZVZpc2l0TGluayA9IGZ1bmN0aW9uIChlbCkge1xyXG4gICAgICAgIGlmICghZWwuY2xvc2VzdChcIi5ndC12aWV3LWNhcmRzLWlubmVyXCIpLmF0dHIoXCJkYXRhLWhyZWZcIikpIHJldHVybjtcclxuICAgICAgICBlbC5vbihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgc2VsZi5hZGRWaXNpdGVkTGluayhlbCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICBcclxuICAgIHRoaXMuYWRkVmlzaXRlZExpbmsgPSBmdW5jdGlvbiAoZWwpIHtcclxuICAgICAgICBhbGVydChcclxuICAgICAgICAgICAgXCLQv9C+0YHQu9Cw0LvQuCDQtNCw0L3QvdGL0LUg0L3QsCDQsdC10LpcIixcclxuICAgICAgICAgICAgZWwuY2xvc2VzdChcIi5ndC12aWV3LWNhcmRzLWlubmVyXCIpLmF0dHIoXCJkYXRhLWhyZWZcIilcclxuICAgICAgICApO1xyXG4gICAgICAgIGVsLnRvZ2dsZUNsYXNzKFwiZ3QtYWN0aXZlXCIpO1xyXG4gICAgfTtcclxuICAgIFxyXG4gICAgXHJcbiAgICB0aGlzLmFkZEJvb2ttYXJrID0gZnVuY3Rpb24gKGEsIHVybCwgdGl0bGUpIHtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICB3aW5kb3cuZXh0ZXJuYWwuQWRkRmF2b3JpdGUodXJsLCB0aXRsZSk7XHJcbiAgICAgICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgd2luZG93LnNpZGViYXIuYWRkUGFuZWwodGl0bGUsIHVybCwgXCJcIik7XHJcbiAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2Ygb3BlcmEgPT0gXCJvYmplY3RcIikge1xyXG4gICAgICAgICAgICAgICAgICAgIGEudGl0bGUgPSB0aXRsZTtcclxuICAgICAgICAgICAgICAgICAgICBhLnVybCA9IHVybDtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYWxlcnQoXCLQndCw0LbQvNC40YLQtSBDdHJsLUQg0YfRgtC+0LHRiyDQtNC+0LHQsNCy0LjRgtGMINGB0YLRgNCw0L3QuNGG0YMg0LIg0LfQsNC60LvQsNC00LrQuFwiKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgdGhpcy5jcmVhdGVCb29rbWFya3NMaW5rID0gZnVuY3Rpb24gKGVsKSB7XHJcbiAgICAgICAgdmFyIGVsID0gJChlbCk7XHJcbiAgICAgICAgdmFyIHBhcmVudCA9IGVsLmNsb3Nlc3QoXCIuZ3Qtdmlldy1jYXJkcy1pbm5lclwiKTtcclxuICAgICAgICBwYXJlbnQgPSAkKHBhcmVudCk7XHJcbiAgICAgICAgaWYgKCFwYXJlbnQuYXR0cihcImRhdGEtaHJlZlwiKSlcclxuICAgICAgICAgICAgcGFyZW50LmF0dHIoXCJkYXRhLWhyZWZcIiwgd2luZG93LmxvY2F0aW9uLmhyZWYpO1xyXG4gICAgICAgIGlmICghcGFyZW50LmF0dHIoXCJkYXRhLWJvb2ttYXJrXCIpKSBwYXJlbnQuYXR0cihcImRhdGEtYm9va21hcmtcIiwgXCJHb1RvVHJpcFwiKTtcclxuICAgICAgICBlbC5hdHRyKFwiaHJlZlwiLCBwYXJlbnQuYXR0cihcImRhdGEtaHJlZlwiKSk7XHJcbiAgICAgICAgZWwuYXR0cihcInJlbFwiLCBcInNpZGViYXJcIik7XHJcbiAgICAgICAgZWwub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIHNlbGYuYWRkQm9va21hcmsoXHJcbiAgICAgICAgICAgICAgICBlbCxcclxuICAgICAgICAgICAgICAgIHBhcmVudC5hdHRyKFwiZGF0YS1ocmVmXCIpLFxyXG4gICAgICAgICAgICAgICAgcGFyZW50LmF0dHIoXCJkYXRhLWJvb2ttYXJrXCIpXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgIGlmICgkKFwiKlwiKS5pcyhcIi5ndC12aWV3LWNhcmRzLWljb25zLWJvb2ttYXJrc1wiKSkge1xyXG4gICAgICAgIHNlbGYuY3JlYXRlQm9va21hcmtzTGluaygpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBcclxuICAgIGlmICgkKFwiKlwiKS5pcyhcIi5ndC12aWV3LWNhcmRzLWljb25zLWl0ZW1cIikpIHtcclxuICAgICAgICBzZWxmLmNyZWF0ZUljb25zSXRlbXNDbGljaygpO1xyXG4gICAgfVxyXG4gICAgLy8g0L/RgNC+0LLQtdGA0LrQsCDQvdCwINC90LDQu9C40YfQuNC1IC0g0L7QsdGB0YPQtNC40YLRjCDRgSDQsdC10LrQvtC8INC/0L7QstC10LTQtdCz0YLQtVxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgJCgnI2d0LWVudGVyLWZvcm0tZmFjZWJvb2snKS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgc2VsZi5zb2NpYWxFbnRlcignZmFjZWJvb2snKVxyXG4gICAgfSk7XHJcbiAgICAkKCcjZ3QtZW50ZXItZm9ybS10d2l0dGVyJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHNlbGYuc29jaWFsRW50ZXIoJ3R3aXR0ZXInKVxyXG4gICAgfSk7XHJcbiAgICAkKCcjZ3QtZW50ZXItZm9ybS1nb29nbGUnKS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgc2VsZi5zb2NpYWxFbnRlcignZ29vZ2xlJylcclxuICAgIH0pO1xyXG4gICAgXHJcbiAgICAkKCcjZ3QtcmVnLWZvcm0tZmFjZWJvb2snKS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgc2VsZi5zb2NpYWxSZWdpc3RyYXRpb24oJ2ZhY2Vib29rJylcclxuICAgIH0pO1xyXG4gICAgJCgnI2d0LXJlZy1mb3JtLXR3aXR0ZXInKS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgc2VsZi5zb2NpYWxSZWdpc3RyYXRpb24oJ3R3aXR0ZXInKVxyXG4gICAgfSk7XHJcbiAgICAkKCcjZ3QtcmVnLWZvcm0tZ29vZ2xlJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHNlbGYuc29jaWFsUmVnaXN0cmF0aW9uKCdnb29nbGUnKVxyXG4gICAgfSk7XHJcbiAgICBcclxuICAgIHRoaXMuc29jaWFsUmVnaXN0cmF0aW9uID0gZnVuY3Rpb24gKHRva2VuKSB7XHJcbiAgICBcclxuICAgICAgICBhbGVydChcItCg0LXQs9C40YHRgtGA0LDRhtC40Y8g0YfQtdGA0LXQtyBcIiArIHRva2VuKVxyXG4gICAgXHJcbiAgICB9O1xyXG4gICAgdGhpcy5zb2NpYWxFbnRlciA9IGZ1bmN0aW9uICh0b2tlbikge1xyXG4gICAgXHJcbiAgICAgICAgYWxlcnQoXCLQktGF0L7QtCDRh9C10YDQtdC3IFwiICsgdG9rZW4pXHJcbiAgICBcclxuICAgIH07XHJcbiAgIHRoaXMuY3V0TmV3cyA9IGZ1bmN0aW9uIChlbCkge1xyXG4gICAgICAgdmFyIHBhcmVudCA9IGVsLnBhcmVudCgpLFxyXG4gICAgICAgICAgIG1heEhlaWdodCA9IHBhcmVudC5oZWlnaHQoKSxcclxuICAgICAgICAgICBjdXR0aW5nRWwgPSBlbC5maW5kKCdwJyksXHJcbiAgICAgICAgICAgY3VyckhlaWdodCxcclxuICAgICAgICAgICBjdXR0aW5nTGVuZ2h0LFxyXG4gICAgICAgICAgIG5ld1RleHQ7XHJcbiAgICAgICBwYXJlbnQuY2hpbGRyZW4oKS5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICBtYXhIZWlnaHQgLT0gJCh0aGlzKS5vdXRlckhlaWdodCh0cnVlKTtcclxuICAgICAgIH0pO1xyXG4gICBcclxuICAgICAgIG1heEhlaWdodCA9IG1heEhlaWdodCArIGVsLmhlaWdodCgpIC0yMDtcclxuICAgXHJcbiAgIFxyXG4gICBcclxuICAgICAgIGN1dHRpbmdFbC5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICBjdXJySGVpZ2h0ID0gJCh0aGlzKS5vdXRlckhlaWdodCh0cnVlKTtcclxuICAgXHJcbiAgICAgICAgICAgaWYoIGN1cnJIZWlnaHQgPCBtYXhIZWlnaHQpe1xyXG4gICAgICAgICAgICAgICBtYXhIZWlnaHQgLT1jdXJySGVpZ2h0XHJcbiAgICAgICAgICAgfWVsc2Uge1xyXG4gICAgICAgICAgICAgICBpZighbWF4SGVpZ2h0KXtcclxuICAgICAgICAgICAgICAgICAgICQodGhpcykuY3NzKCdkaXNwbGF5Jywnbm9uZScpO1xyXG4gICAgICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgICAgIGN1dHRpbmdMZW5naHQgPSAgTWF0aC5mbG9vcigkKHRoaXMpLnRleHQoKS5sZW5ndGggKiBtYXhIZWlnaHQgLyBjdXJySGVpZ2h0KTtcclxuICAgICAgICAgICAgICAgICAgIG5ld1RleHQgPSAkKHRoaXMpLnRleHQoKS5zdWJzdHJpbmcoMCwgY3V0dGluZ0xlbmdodC01KTtcclxuICAgICAgICAgICAgICAgICAgIC8vIGN1dExhc3RTeW1ib2woKTtcclxuICAgICAgICAgICAgICAgICAgICQodGhpcykudGV4dCgobmV3VGV4dCkgKyAnLi4uJyk7XHJcbiAgICAgICAgICAgICAgICAgICBtYXhIZWlnaHQgPSAwO1xyXG4gICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgfVxyXG4gICAgICAgfSk7XHJcbiAgICAgICAvL1xyXG4gICAgICAgLy8gZnVuY3Rpb24gY3V0TGFzdFN5bWJvbCgpIHtcclxuICAgICAgIC8vICAgICB2YXIgc3RyTGVuZ3RoID0gbmV3VGV4dC5sZW5ndGg7XHJcbiAgICAgICAvLyAgICAgaWYobmV3VGV4dC5jaGFyQXQoc3RyTGVuZ3RoIC0gMSkgPT0gJyAnKXtcclxuICAgICAgIC8vICAgICAgICAgbmV3VGV4dD0gbmV3VGV4dC5zdWJzdHJpbmcoMCwgc3RyTGVuZ3RoIC0gMSk7XHJcbiAgICAgICAvLyAgICAgfWVsc2V7XHJcbiAgICAgICAvLyAgICAgICAgIG5ld1RleHQgPSBuZXdUZXh0LnN1YnN0cmluZygwLCBzdHJMZW5ndGggLSAxKTtcclxuICAgICAgIC8vICAgICAgICAgc2V0VGltZW91dChjdXRMYXN0U3ltYm9sKVxyXG4gICAgICAgLy8gICAgIH1cclxuICAgICAgIC8vIH1cclxuICAgXHJcbiAgIH07XHJcbiAgIFxyXG4gICBcclxuICAgXHJcbiAgIGlmICgkKFwiZGl2XCIpLmlzKFwiLmpzLW5ld3MtY3V0XCIpKSB7XHJcbiAgICAgICAkKFwiLmpzLW5ld3MtY3V0XCIpLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgIHNlbGYuY3V0TmV3cygkKHRoaXMpKTtcclxuICAgICAgIH0pO1xyXG4gICBcclxuICAgXHJcbiAgICAgICBkb2NXaW5kb3cucmVzaXplKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAkKFwiLmpzLW5ld3MtY3V0XCIpLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICBzZWxmLmN1dE5ld3MoJCh0aGlzKSk7XHJcbiAgICAgICAgICAgfSk7XHJcbiAgICAgICB9KTtcclxuICAgfVxyXG4gICBcclxuICAgXHJcbiAgIFxyXG4gICB0aGlzLmN1dFJlYWRNb3JlU2xpZGVyID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgdmFyIGN1dHRpbmdzID0gJChcIi5ndC1yZWFkLW1vcmUtc2xpZGVyLXRleHQtaW5uZXJcIik7XHJcbiAgICAgICBjdXR0aW5ncy5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICBzZWxmLmN1dHRpbmcoJCh0aGlzKSwgMTYwKTtcclxuICAgICAgIH0pO1xyXG4gICB9O1xyXG4gICBcclxuICAgdGhpcy5jdXR0aW5nID0gZnVuY3Rpb24gKGVsLCBudW0pIHtcclxuICAgICAgIHZhciBuZXdzVGV4dCA9IGVsLnRleHQoKTtcclxuICAgICAgIGlmIChuZXdzVGV4dC5sZW5ndGggPiBudW0pIHtcclxuICAgICAgICAgICBuZXdzVGV4dCA9IG5ld3NUZXh0LnNsaWNlKDAsIG51bSkgKyBcIi4uLlwiO1xyXG4gICAgICAgICAgIGVsLnRleHQobmV3c1RleHQpO1xyXG4gICAgICAgfVxyXG4gICB9O1xyXG4gICBcclxuICAgXHJcbiAgIFxyXG4gICBpZiAoJChcInBcIikuaXMoXCIuZ3QtcmVhZC1tb3JlLXNsaWRlci10ZXh0LWlubmVyXCIpKSB7XHJcbiAgICAgICBzZWxmLmN1dFJlYWRNb3JlU2xpZGVyKCk7XHJcbiAgIH1cclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuXHJcbiAgICBkb2MucmVhZHkoZnVuY3Rpb24gKCkge1xyXG4gICAgXHJcbiAgICAgICAgc2VsZi5mb290ZXJIZWlnaHQoKTsvL19mb290ZXJfaGVpZ2h0LmpzXHJcbiAgICAgICAgc2VsZi5kZXNrVG9wTWVudVNjcm9sbCgpOy8vX2Rlc2N0b3BfaGVhZGVyX2Z1bmMuanNcclxuICAgIFxyXG4gICAgXHJcbiAgICB9KTtcclxuICAgIHRoaXMucGFnZVVwID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQoJ2h0bWwsIGJvZHknKS5hbmltYXRlKHtzY3JvbGxUb3A6IDB9LCA4MDApO1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH07XHJcbiAgICBcclxuICAgIHRoaXMudXBQYWdlQnV0dG9uID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmICgkKGRvY3VtZW50KS5zY3JvbGxUb3AoKSA+IDMwKSB7XHJcbiAgICAgICAgICAgIHVwQnV0dG9uLmFkZENsYXNzKFwiZ3QtdmlzaWJsZVwiKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB1cEJ1dHRvbi5yZW1vdmVDbGFzcyhcImd0LXZpc2libGVcIik7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIFxyXG4gICAgXHJcbiAgICB1cEJ1dHRvbi5vbihcImNsaWNrXCIsIHNlbGYucGFnZVVwKTtcclxuICAgIFxyXG4gICAgZG9jV2luZG93LnNjcm9sbChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgc2VsZi51cFBhZ2VCdXR0b24oKTsvL191cF9idXR0b24uanNcclxuICAgICAgICBpZiAoJChcIi5ndC1oZWFkZXItbWVudVwiKS5pcyhcIjp2aXNpYmxlXCIpKSB7XHJcbiAgICAgICAgICAgIHNlbGYuZGVza1RvcE1lbnVTY3JvbGwoKTsvL19kZXNjdG9wX2hlYWRlcl9mdW5jLmpzXHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICBkb2NXaW5kb3cucmVzaXplKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBzZWxmLmRlc2tUb3BNZW51U2Nyb2xsKCk7XHJcbiAgICAgICAgc2VsZi5mb290ZXJIZWlnaHQoKTtcclxuICAgIFxyXG4gICAgICAgIGlmIChndEhlYWRlci5oYXNDbGFzcyhcImd0LW9wZW5cIikpIHNlbGYubW9iaWxlTWVudUNsb3NlKCk7XHJcbiAgICBcclxuICAgICAgICBpZiAoJChcImRpdlwiKS5pcyhcIi5ndC1pbWctaG9sZGVyLWFic1wiKSkge1xyXG4gICAgICAgICAgICAkKFwiLmd0LWltZy1ob2xkZXItYWJzXCIpLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5yZW1vdmVDbGFzcyhcImd0LXdpZHRoXCIpO1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5yZW1vdmVDbGFzcyhcImd0LWhlaWdodFwiKTtcclxuICAgICAgICAgICAgICAgIHNlbGYuaW1nSG9sZGVyRnVuYygkKHRoaXMpKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICAkKHdpbmRvdykub24oJ2xvYWQnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKCQoXCJkaXZcIikuaXMoXCIuZ3QtaW1nLWhvbGRlci1hYnNcIikpIHtcclxuICAgICAgICAgICAgJChcIi5ndC1pbWctaG9sZGVyLWFic1wiKS5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHNlbGYuaW1nSG9sZGVyRnVuYygkKHRoaXMpKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgYm9keS5vbignY2xpY2snLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICAvLyBjb25zb2xlLmxvZyhldmVudC50YXJnZXQpO1xyXG4gICAgXHJcbiAgICB9KTtcclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbn07XHJcbiQoZG9jdW1lbnQpLnJlYWR5KFxyXG5cclxuICAgIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgZ29Ub1RyaXAgPSBuZXcgR29Ub1RyaXAoKTtcclxuICAgIH1cclxuKTsiXX0=
