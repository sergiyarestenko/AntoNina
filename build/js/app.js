GoToTrip=function(){function t(){k||(k=setTimeout(function(){k=null,i.fixArticleScrollTablePosition(),w&&i.showArtidleShadow()},66))}var i=this,e=$(document.body),s=$(document),n=$(window),o={top:!1,left:!1},a=$("#gt-is-360"),r=($("#gt-is-480"),$("#gt-is-667")),c=$("#gt-is-768"),l=$("#gt-is-1024"),d=($("#gt-is-1231"),$("header")),g=$("footer"),u=$("#gt-wrapper"),h=$("#gt-up"),f=$("#gt-mobile-menu-switch"),v=$(".gt-enter"),m=$("#gt-header-enter-wrapper"),p=$("#gt-header-enter"),b=$("#gt-header-enter-chose"),C=$("#gt-header-enter-close");if(this.fixBody=function(){o.top||o.left||(o.top=s.scrollTop(),o.left=e.offset().left,e.css({position:"fixed",left:o.left+"px",top:-1*o.top+"px"}))},this.unfixBody=function(){e.css({position:"",left:"",top:""}),s.scrollTop(o.top),o.top=!1,o.left=!1},this.footerHeight=function(){g.outerHeight()>n.height()-50?(g.css("position","static"),u.css("margin-bottom",""),h.css("position","static")):(g.css("position",""),h.css("position",""),u.css("margin-bottom",g.outerHeight()+"px"))},this.deskTopMenuScroll=function(){n.scrollTop()>d.outerHeight()?d.addClass("gt-header-scrolled"):d.removeClass("gt-header-scrolled")},this.pageUp=function(){return $("body,html").animate({scrollTop:0},800),!1},this.upPageButton=function(){$(document).scrollTop()>30?h.addClass("gt-visible"):h.removeClass("gt-visible")},h.on("click",i.pageUp),this.mobileMenuClose=function(){i.unfixBody(),f.removeClass("gt-open"),d.removeClass("gt-open")},this.mobileMenuOpen=function(){i.fixBody(),d.addClass("gt-open"),f.addClass("gt-open")},f.on("click",function(){$(this).hasClass("gt-open")?i.mobileMenuClose():i.mobileMenuOpen()}),this.openEnterForm=function(){m.addClass("gt-open"),setTimeout(function(){p.addClass("gt-open"),C.addClass("gt-open")})},this.closeEnterForm=function(){C.removeClass("gt-open"),p.removeClass("gt-open"),setTimeout(function(){m.removeClass("gt-open")},750)},this.changeEnterRegistration=function(t){p.hasClass($(t.target).attr("class"))||p.removeClass("gt-chosen-enter").removeClass("gt-chosen-registration").addClass($(t.target).attr("class"))},v.each(function(){$(this).on("click",i.openEnterForm)}),C.on("click",i.closeEnterForm),b.on("click",function(t){i.changeEnterRegistration(t)}),this.setBackground=function(){$(".gt-img-holder").each(function(){if($(this).attr("data-bg")){var t=$(this).attr("data-bg");r.is(":visible")?$(this).css("background-image",'url("./img/backgrounds/phone/'+t+'")'):l.is(":visible")?$(this).css("background-image",'url("./img/backgrounds/tablet/'+t+'")'):$(this).css("background-image",'url("./img/backgrounds/desktop/'+t+'")')}})},this.imgHolderFunc=function(t){var i=t.outerHeight()/t.outerWidth(),e=t.find("img");e.outerHeight()/e.outerWidth()>i?$(t).addClass("gt-width"):$(t).addClass("gt-height"),$(t).addClass("gt-visible")},$("div").is(".gt-img-holder")&&i.setBackground(),this.createSlider=function(t,e){function s(){if(!(x<b)){var i="";M&&(i='<div class="gt-slider-arrow-num"><i class="gt-slider-num-curr"></i><i>из</i><i class="gt-slider-num-max"></i></div>'),t.find(".gt-slider-arrow-holder").html('<span class = "gt-slider-arrow left"><i class="fa fa-angle-left fa-2x"></i></span>'+i+'<span class = "gt-slider-arrow right"><i class="fa fa-angle-right fa-2x"></i></span>'),C=!0,t.find(".left").on("click",function(){o(!1)}),t.find(".right").on("click",function(){o(!0)}),l(),M&&u(),u()}}function o(t,i){i||0===i?T=i:t?T+=1:T-=1,T>x-b?T=x-b:T<0?T=0:(A?d():g(),S&&l(),M&&u())}function l(){var i=t.find(".left"),e=t.find(".right");e.removeClass("not-active"),i.removeClass("not-active"),0==T&&i.addClass("not-active"),T!=x-1&&T!=x-b||e.addClass("not-active")}function d(){if(y){var i=t.find(".gt-slider-nav span");i.removeClass("gt-active"),$(i[T]).addClass("gt-active")}w.css("margin-left",-1*p*T+"px")}function g(t){var i=t||T;$(k).removeClass("gt-open"),$(k[i]).addClass("gt-open")}function u(){t.find(".gt-slider-num-curr").text(T+1),t.find(".gt-slider-num-max").text(x)}function h(){var i=0,e=0;t.on("touchstart",function(t){var e=t.originalEvent;i=Math.abs(e.touches[0].pageX),console.log("touchstart")}),t.on("touchend",function(t){var s=t.originalEvent;e=Math.abs(s.changedTouches[0].pageX),Math.abs(i-e)>50&&o(i>e?!0:!1)})}function f(){t.attr("data-count")&&(b=parseInt(t.attr("data-count")),$(c).is(":visible")&&(b=3),$(r).is(":visible")&&(b=2),$(a).is(":visible")&&(b=1))}function v(){console.log(p),p=t.outerWidth()/b,t.find(".gt-slider-container").outerWidth((x+1)*p),k.each(function(){$(this).outerWidth(p)})}var m,p,b=1,C=!1,k=t.find(".gt-slider-inner"),w=t.find(".gt-slider-container"),x=k.length,T=e||0,S=t.hasClass("gt-slider-has-arrow"),y=t.hasClass("gt-slider-has-dots"),M=t.hasClass("gt-slider-num"),A=t.hasClass("gt-slider-tram"),H=t.hasClass("gt-slider-fade"),B=t.hasClass("gt-slider-has-clone");H&&g(e),A&&(f(),v(),d()),S&&(t.append('<div class="gt-slider-arrow-holder"></div>'),s()),y&&function(){t.append('<div class="gt-slider-nav"></div>');for(var i=t.find(".gt-slider-nav"),e="",s=0;s<x;s++)e+="<span data-num = "+s+"></span>";i.html(e),i.find("span").first().addClass("gt-active"),t.find(".gt-slider-nav span").on("click",function(){o(!0,+$(this).attr("data-num"))})}(),x>b&&h(),B&&t.find(".gt-slider-inner-cover").each(function(){$(this).on("click",function(){!function(e){$("div").is("#gt-clone-close")||(i.fixBody(),$("#gt-body-wrapper").show().append('<div   class="container"><div id = "gt-clone-close" class = "gt-slider-clone-close"></div><div id = "gt-clone" class="gt-slider gt-slider-clone gt-slider-fade gt-slider-has-arrow"><div  id = "gt-clone-container" class="gt-slider-container"></div></div></div>'),t.find(".gt-slider-inner").clone(!0).each(function(){$("#gt-clone-container").append($(this))}),i.createSlider($("#gt-clone"),e))}($(this).parent().index())})}),n.resize(function(){m||(m=setTimeout(function(){m=null,t.off(),A&&(f(),v(),d()),C&&(t.find(".left").off(),t.find(".right").off(),t.find(".gt-slider-arrow-holder").html(""),C=!1,s()),x>b&&h(),console.log(T,S,y,M,A)},132))})},$("div").is(".gt-slider")&&$(".gt-slider").each(function(){i.createSlider($(this))}),this.manageGtActiveUlMenu=function(t){"li"!=t.tagName&&(t=$(t).closest("li")),$(t).closest($("ul")).find("li").removeClass("gt-active"),$(t).addClass("gt-active")},$("*").is(".gt-hundret-menu")&&$(".gt-hundret-menu").on("click",function(t){t.preventDefault(),i.manageGtActiveUlMenu(t.target)}),$("*").is(".gt-button-menu")&&$(".gt-button-menu").on("click",function(t){t.preventDefault(),i.manageGtActiveUlMenu(t.target)}),$("*").is(".gt-menu-news")&&$(".gt-menu-news").on("click",function(t){t.preventDefault(),i.manageGtActiveUlMenu(t.target)}),this.tabSlider=function(){$(".gt-tabs").each(function(){var t=$(this);t.find(".gt-tabs-button").each(function(){$(this).on("click",function(){i.tabSliderAction(t,$(this).index())})}),i.tabSliderActivation(t)})},this.tabSliderActivation=function(t){$(t.find(".gt-tabs-button")).removeClass("active"),$(t.find(".gt-tabs-main")).removeClass("active"),$(t.find(".gt-tabs-main")).hide(),$(t.find(".gt-tabs-button")[0]).addClass("active"),$(t.find(".gt-tabs-main")[0]).show(),$(t.find(".gt-tabs-main")[0]).addClass("active")},this.tabSliderAction=function(t,i){$(t.find(".gt-tabs-button")).removeClass("active"),$(t.find(".gt-tabs-main")).removeClass("active"),$(t.find(".gt-tabs-main")).hide(),$(t.find(".gt-tabs-button")[i]).addClass("active"),$(t.find(".gt-tabs-main")[i]).show(),$(t.find(".gt-tabs-main")[i]).addClass("active")},$("div").is(".gt-tabs")&&i.tabSlider(),this.setPlayers=function(){var t=document.createElement("script");t.type="text/javascript",t.src="https://www.youtube.com/player_api";var e=$("script")[$("script").length-1];e.parentNode.insertBefore(t,e);$(".gt-video").each(function(){var t=$(this);t.find(".gt-video-switch").on("click",function(){$(this).addClass("gt-open"),t.addClass("gt-open"),i.addYouTube(t)})})},this.addYouTube=function(t){function i(){s.mute(),s.playVideo(),t.addClass("gt-video-on"),t.find(".gt-video-uncover").on("click",e),t.find(".gt-video-pause").on("click",function(){s.pauseVideo()}),t.find(".gt-video-play").on("click",function(){s.playVideo()})}function e(){console.log("playFullScreen");var i=t.find("iframe")[0],e=i.requestFullScreen||i.mozRequestFullScreen||i.webkitRequestFullScreen;e&&e.bind(i)()}var s,n="gt-video-"+t.index();t.find(".gt-video-switch").hide("slow"),t.find(".gt-video-inner").attr("id",n).addClass("gt-video-foreground"),s=new YT.Player(n,{width:600,height:400,videoId:t.attr("data-youtube"),playerVars:{playlist:t.attr("data-youtube"),color:"white",loop:1,autoplay:1},events:{onReady:i}})},$("div").is(".gt-video")&&i.setPlayers(),this.fixArticleScrollTablePosition=function(){var t=$(".gt-article-table-wrapper"),i=t.parent(),e=i.position().top,o=e+i.outerHeight(),a=t.outerWidth(),r=s.scrollTop(),c=n.outerHeight();e>r&&t.hasClass("gt-fixed")&&(t.removeClass("gt-fixed"),t.css({left:"",width:""})),e<r+90&&(t.hasClass("gt-fixed")||(t.css({left:t.offset().left+"px",width:a}),t.addClass("gt-fixed")),r+c>o?t.addClass("gt-fixed-bottom"):t.removeClass("gt-fixed-bottom")),t.hasClass("gt-fixed")?t.css({height:c-120+"px"}):t.css({height:""})},this.createArticteScrollTable=function(){if($("div").is(".gt-article")){var t="";$(".gt-article").each(function(){t+='<div class = "gt-article-scroll"><div class = "gt-article-scroll-shadow"></div><p>'+$(this).find("h2").text()+"</p></div>"}),$("#gt-article-scroll-table").html(t)}},this.showArtidleShadow=function(){$(".gt-article").each(function(){var t=$(this).position().top,i=$(this).outerHeight(),e=$(document).scrollTop(),s=0;(s=t>e?0:(e-t)/i)>1&&(s=1);var n=$(".gt-article-scroll")[$(this).index()];$(n).find(".gt-article-scroll-shadow").css("width",100*s+"%")})},$("div").is(".gt-article-table-wrapper")){var k,w=!1;$("div").is(".gt-article-scroll-table")&&(w=!0,i.createArticteScrollTable(),i.showArtidleShadow()),n.scroll(t),n.resize(t)}this.setCurrTime=function(){i.currTime();setInterval(i.currTime,3e4)},this.currTime=function(){$(".gt-curr-time").each(function(){var t=new Date;$(this).attr("data-gmt")&&t.setUTCHours(+$(this).attr("data-gmt"));var i=t.getHours(),e=t.getMinutes(),s=t.getDay(),n=t.getDate(),o=t.getMonth(),a=t.getFullYear();i<10&&(i="0"+i),e<10&&(e="0"+e),s=["Воскресенье","Понедельник","Вторник","Среда","Четверг","Пятница","Суббота"][s],o=["января","февраля","марта","апреля","мая","июня","июля","августа","сентября","октября","ноября","декабря"][o],$(".gt-curr-time-time")&&$(".gt-curr-time-time").html(i+":"+e),$(".gt-curr-time-date")&&$(".gt-curr-time-date").html(s+", "+n+" "+o+" "+a)})},$("div").is(".gt-curr-time")&&i.setCurrTime(),this.innerScroll=function(t){t.find(".overview").height()>t.height()&&(t.addClass("isScrolled"),t.tinyscrollbar({thumbSize:40,wheelSpeed:10}))},$("div").is(".gt-inner-scroll")&&$(".gt-inner-scroll").each(function(){i.innerScroll($(this))}),this.createIconsItemsClick=function(){$(".gt-view-cards-icons-item").each(function(){$(this).hasClass("gt-view-cards-icons-visit")?i.createVisitLink($(this)):$(this).hasClass("gt-view-cards-icons-bookmarks")?i.createBookmarksLink($(this)):$(this).hasClass("gt-view-cards-icons-pin")||$(this).hasClass("gt-view-cards-icons-share")?i.toggleGtActive($(this)):$(this).hasClass("gt-view-cards-icons-share")&&i.createShareLink($(this))})},this.createShareLink=function(t){t.removeClass("gt-active"),t.on("click",function(){t.toggleClass("gt-active")})},this.toggleGtActive=function(t){(t=$(t)).removeClass("gt-active"),t.on("click",function(){t.toggleClass("gt-active")})},this.createVisitLink=function(t){t.closest(".gt-view-cards-inner").attr("data-href")&&t.on("click",function(){i.addVisitedLink(t)})},this.addVisitedLink=function(t){alert("послали данные на бек",t.closest(".gt-view-cards-inner").attr("data-href")),t.toggleClass("gt-active")},this.addBookmark=function(t,i,e){try{window.external.AddFavorite(i,e)}catch(s){try{window.sidebar.addPanel(e,i,"")}catch(s){if("object"==typeof opera)return t.title=e,t.url=i,!0;alert("Нажмите Ctrl-D чтобы добавить страницу в закладки")}}return!1},this.createBookmarksLink=function(t){var e=(t=$(t)).closest(".gt-view-cards-inner");(e=$(e)).attr("data-href")||e.attr("data-href",window.location.href),e.attr("data-bookmark")||e.attr("data-bookmark","GoToTrip"),t.attr("href",e.attr("data-href")),t.attr("rel","sidebar"),t.on("click",function(s){s.preventDefault(),i.addBookmark(t,e.attr("data-href"),e.attr("data-bookmark"))})},$("*").is(".gt-view-cards-icons-bookmarks")&&i.createBookmarksLink(),$("*").is(".gt-view-cards-icons-item")&&i.createIconsItemsClick(),$("#gt-enter-form-facebook").on("click",function(){i.socialEnter("facebook")}),$("#gt-enter-form-twitter").on("click",function(){i.socialEnter("twitter")}),$("#gt-enter-form-google").on("click",function(){i.socialEnter("google")}),$("#gt-reg-form-facebook").on("click",function(){i.socialRegistration("facebook")}),$("#gt-reg-form-twitter").on("click",function(){i.socialRegistration("twitter")}),$("#gt-reg-form-google").on("click",function(){i.socialRegistration("google")}),this.socialRegistration=function(t){alert("Регистрация через "+t)},this.socialEnter=function(t){alert("Вход через "+t)},this.cutNews=function(t){for(var i=t.height(),e=t.find("a"),s=0;s<e.length;s++)if($(e[s]).outerHeight(!0)<i)$(e[s]).addClass("gt-ready"),i-=$(e[s]).outerHeight(!0);else{var n=Math.floor(($(e[s]).text().length-30)*i/$(e[s]).height()),o=$(e[s]).text().substring(0,n-5);$(e[s]).text(o+"..."),$(e[s]).addClass("gt-ready")}},this.cutReadMoreSlider=function(){$(".gt-read-more-slider-text-inner").each(function(){i.cutting($(this),160)})},this.cutting=function(t,i){var e=t.text();e.length>i&&(e=e.slice(0,i)+"...",t.text(e))},$("div").is(".gt-news-cut")&&$(".gt-news-cut").each(function(){i.cutNews($(this))}),$("p").is(".gt-read-more-slider-text-inner")&&i.cutReadMoreSlider(),s.ready(function(){i.footerHeight(),i.deskTopMenuScroll()}),n.scroll(function(){i.upPageButton(),$(".gt-header-menu").is(":visible")&&i.deskTopMenuScroll()}),n.resize(function(){i.deskTopMenuScroll(),i.footerHeight(),d.hasClass("gt-open")&&i.mobileMenuClose(),$("div").is(".gt-img-holder-abs")&&$(".gt-img-holder-abs").each(function(){$(this).removeClass("gt-width"),$(this).removeClass("gt-height"),i.imgHolderFunc($(this))})}),$(window).on("load",function(){$("div").is(".gt-img-holder-abs")&&$(".gt-img-holder-abs").each(function(){i.imgHolderFunc($(this))})}),e.on("click",function(t){console.log(t.target)})};var goToTrip=new GoToTrip;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJHb1RvVHJpcCIsInNjcm9sbFRocm90dGxlciIsInNjcm9sbFRpbWVvdXQiLCJzZXRUaW1lb3V0Iiwic2VsZiIsImZpeEFydGljbGVTY3JvbGxUYWJsZVBvc2l0aW9uIiwic2hhZG93Iiwic2hvd0FydGlkbGVTaGFkb3ciLCJ0aGlzIiwiYm9keSIsIiQiLCJkb2N1bWVudCIsImRvYyIsImRvY1dpbmRvdyIsIndpbmRvdyIsImJvZHlQb3NpdGlvbiIsInRvcCIsImxlZnQiLCJ0b2tlbjM2MCIsInRva2VuNjY3IiwidG9rZW43NjgiLCJ0b2tlbjEwMjQiLCJndEhlYWRlciIsImd0Rm9vdGVyIiwiZ3RXcmFwcGVyIiwidXBCdXR0b24iLCJtb2JpbGVNZW51U3dpdGNoIiwiZW50ZXJCdXR0b24iLCJlbnRlcldyYXBwZXIiLCJlbnRlckZvcm0iLCJlbnRlckNob3NlIiwiZW50ZXJDbG9zZSIsImZpeEJvZHkiLCJzY3JvbGxUb3AiLCJvZmZzZXQiLCJjc3MiLCJwb3NpdGlvbiIsInVuZml4Qm9keSIsImZvb3RlckhlaWdodCIsIm91dGVySGVpZ2h0IiwiaGVpZ2h0IiwiZGVza1RvcE1lbnVTY3JvbGwiLCJhZGRDbGFzcyIsInJlbW92ZUNsYXNzIiwicGFnZVVwIiwiYW5pbWF0ZSIsInVwUGFnZUJ1dHRvbiIsIm9uIiwibW9iaWxlTWVudUNsb3NlIiwibW9iaWxlTWVudU9wZW4iLCJoYXNDbGFzcyIsIm9wZW5FbnRlckZvcm0iLCJjbG9zZUVudGVyRm9ybSIsImNoYW5nZUVudGVyUmVnaXN0cmF0aW9uIiwiZXZlbnQiLCJ0YXJnZXQiLCJhdHRyIiwiZWFjaCIsInNldEJhY2tncm91bmQiLCJwYXRoIiwiaXMiLCJpbWdIb2xkZXJGdW5jIiwiZWwiLCJob2xkZXJDb25zdCIsIm91dGVyV2lkdGgiLCJpbWciLCJmaW5kIiwiY3JlYXRlU2xpZGVyIiwiY3VyclNsaWRlciIsImNyZWF0ZUFycm93cyIsImlubmVyQ291bnQiLCJzY3JlZW5Db25zdCIsIm51bUlubmVyIiwibnVtUGFuZWwiLCJodG1sIiwiYXJyb3dzUmVhZHkiLCJvbmVNb3ZlRnVuY3Rpb24iLCJjaGVja1Bvc2l0aW9uIiwic2hvd051bSIsImJ1bCIsIm51bSIsImN1cnJQb3NpdGlvbiIsInRyYW0iLCJ0cmFtU2xpZGVyTW92ZSIsImZhZGVTbGlkZXJNb3ZlIiwiYXJyb3ciLCJyaWdodCIsImRvdHMiLCJhbGxEb3RzIiwiY29udGFpbmVyIiwiYmFzZVdpZHRoIiwiaW5kZXgiLCJpbm5lciIsInRleHQiLCJjcmVhdGVUb3VjaCIsImluaXRpYWxQb2ludCIsImZpbmFsUG9pbnQiLCJlIiwib3JpZ2luYWxFdmVudCIsIk1hdGgiLCJhYnMiLCJ0b3VjaGVzIiwicGFnZVgiLCJjb25zb2xlIiwibG9nIiwiY2hhbmdlZFRvdWNoZXMiLCJmaW5kU2NyZWVuQ29uc3QiLCJwYXJzZUludCIsInNldEJhc2VXaWR0aCIsInNsaWRlclRpbWVPdXQiLCJsZW5ndGgiLCJmYWRlIiwiaGFzQ2xvbmUiLCJhcHBlbmQiLCJuYXYiLCJzcGFucyIsImkiLCJmaXJzdCIsImNyZWF0ZURvdHMiLCJjbGlja1Bvc2l0aW9uIiwic2hvdyIsImNsb25lIiwiY3JlYXRlQ2xvbmVTbGlkZXIiLCJwYXJlbnQiLCJyZXNpemUiLCJvZmYiLCJtYW5hZ2VHdEFjdGl2ZVVsTWVudSIsInRhZ05hbWUiLCJjbG9zZXN0IiwicHJldmVudERlZmF1bHQiLCJ0YWJTbGlkZXIiLCJjdXJyVGFicyIsInRhYlNsaWRlckFjdGlvbiIsInRhYlNsaWRlckFjdGl2YXRpb24iLCJoaWRlIiwic2V0UGxheWVycyIsInRhZyIsImNyZWF0ZUVsZW1lbnQiLCJ0eXBlIiwic3JjIiwibGFzdFNjcmlwdFRhZyIsInBhcmVudE5vZGUiLCJpbnNlcnRCZWZvcmUiLCJjdXJyZW50UGxheWVyIiwiYWRkWW91VHViZSIsImluaXRpYWxpemUiLCJwbGF5ZXIiLCJtdXRlIiwicGxheVZpZGVvIiwicGxheUZ1bGxTY3JlZW4iLCJwYXVzZVZpZGVvIiwiaWZyYW1lIiwicmVxdWVzdEZ1bGxTY3JlZW4iLCJtb3pSZXF1ZXN0RnVsbFNjcmVlbiIsIndlYmtpdFJlcXVlc3RGdWxsU2NyZWVuIiwiYmluZCIsImVsSWQiLCJZVCIsIlBsYXllciIsIndpZHRoIiwidmlkZW9JZCIsInBsYXllclZhcnMiLCJwbGF5bGlzdCIsImNvbG9yIiwibG9vcCIsImF1dG9wbGF5IiwiZXZlbnRzIiwib25SZWFkeSIsInRhYmxlIiwidGFibGVQYXJlbnQiLCJ0YWJsZVBhcmVudFRvcCIsInRhYmxlUGFyZW50Qm90dG9tIiwidGFibGVXaWR0aCIsIndpbmRvd1RvcCIsIndpZG93SGVpZ2h0IiwiY3JlYXRlQXJ0aWN0ZVNjcm9sbFRhYmxlIiwiZWxIZWlnaHQiLCJ3aW5kb3dQb3NpdGlvbiIsIngiLCJjdXJyU2hhZG93Iiwic2Nyb2xsIiwic2V0Q3VyclRpbWUiLCJjdXJyVGltZSIsInNldEludGVydmFsIiwiZGF0ZSIsIkRhdGUiLCJzZXRVVENIb3VycyIsImhvdXJzIiwiZ2V0SG91cnMiLCJtaW51dGVzIiwiZ2V0TWludXRlcyIsIndlZWtkYXkiLCJnZXREYXkiLCJkYXkiLCJnZXREYXRlIiwibW9udGgiLCJnZXRNb250aCIsInllYXIiLCJnZXRGdWxsWWVhciIsImlubmVyU2Nyb2xsIiwidGlueXNjcm9sbGJhciIsInRodW1iU2l6ZSIsIndoZWVsU3BlZWQiLCJjcmVhdGVJY29uc0l0ZW1zQ2xpY2siLCJjcmVhdGVWaXNpdExpbmsiLCJjcmVhdGVCb29rbWFya3NMaW5rIiwidG9nZ2xlR3RBY3RpdmUiLCJjcmVhdGVTaGFyZUxpbmsiLCJ0b2dnbGVDbGFzcyIsImFkZFZpc2l0ZWRMaW5rIiwiYWxlcnQiLCJhZGRCb29rbWFyayIsImEiLCJ1cmwiLCJ0aXRsZSIsImV4dGVybmFsIiwiQWRkRmF2b3JpdGUiLCJzaWRlYmFyIiwiYWRkUGFuZWwiLCJvcGVyYSIsImxvY2F0aW9uIiwiaHJlZiIsInNvY2lhbEVudGVyIiwic29jaWFsUmVnaXN0cmF0aW9uIiwidG9rZW4iLCJjdXROZXdzIiwibWF4SGVpZ2h0IiwibGlua3MiLCJjdXR0aW5nTGVuZ3RoIiwiZmxvb3IiLCJjdXR0bmluZyIsInN1YnN0cmluZyIsImN1dFJlYWRNb3JlU2xpZGVyIiwiY3V0dGluZyIsIm5ld3NUZXh0Iiwic2xpY2UiLCJyZWFkeSIsImdvVG9UcmlwIl0sIm1hcHBpbmdzIjoiQUFLQUEsU0FBVyxXQTB1QkgsU0FBU0MsSUFDQUMsSUFDREEsRUFBZ0JDLFdBQVcsV0FDdkJELEVBQWdCLEtBQ2hCRSxFQUFLQyxnQ0FDREMsR0FDQUYsRUFBS0cscUJBR1YsS0FqdkJmLElBQUlILEVBQU9JLEtBQ1BDLEVBQU9DLEVBQUVDLFNBQVNGLE1BQ2xCRyxFQUFNRixFQUFFQyxVQUNSRSxFQUFZSCxFQUFFSSxRQUNkQyxHQUNJQyxLQUFLLEVBQ0xDLE1BQU0sR0FFVkMsRUFBV1IsRUFBRSxjQUViUyxHQURXVCxFQUFFLGNBQ0ZBLEVBQUUsZUFDYlUsRUFBV1YsRUFBRSxjQUNiVyxFQUFZWCxFQUFFLGVBRWRZLEdBRFlaLEVBQUUsZUFDSEEsRUFBRSxXQUNiYSxFQUFXYixFQUFFLFVBQ2JjLEVBQVlkLEVBQUUsZUFDZGUsRUFBV2YsRUFBRSxVQUNiZ0IsRUFBbUJoQixFQUFFLDBCQUNyQmlCLEVBQWNqQixFQUFFLGFBQ2hCa0IsRUFBZWxCLEVBQUUsNEJBQ2pCbUIsRUFBWW5CLEVBQUUsb0JBQ2RvQixFQUFhcEIsRUFBRSwwQkFDZnFCLEVBQWFyQixFQUFFLDBCQXNzQm5CLEdBcnNCQUYsS0FBS3dCLFFBQVUsV0FDUGpCLEVBQWFDLEtBQU9ELEVBQWFFLE9BQ3JDRixFQUFhQyxJQUFNSixFQUFJcUIsWUFDdkJsQixFQUFhRSxLQUFPUixFQUFLeUIsU0FBU2pCLEtBQ2xDUixFQUFLMEIsS0FDREMsU0FBVSxRQUNWbkIsS0FBTUYsRUFBYUUsS0FBTyxLQUMxQkQsS0FBTSxFQUFJRCxFQUFhQyxJQUFNLFNBSXJDUixLQUFLNkIsVUFBWSxXQUNiNUIsRUFBSzBCLEtBQ0RDLFNBQVUsR0FDVm5CLEtBQU0sR0FDTkQsSUFBSyxL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TixFQUFFRixTQUluQkUsRUFBRSxLQUFLa0QsR0FBRyxvQ0FDVnhELEVBQUtvTyxvQkFLUjVOLEVBQUlnTyxNQUFNLFdBRU54TyxFQUFLa0MsZUFDTGxDLEVBQUtxQyxzQkFJVDVCLEVBQVV1SyxPQUFPLFdBQ2JoTCxFQUFLMEMsZUFHRHBDLEVBQUUsbUJBQW1Ca0QsR0FBRyxhQUN4QnhELEVBQUtxQyxzQkFNYjVCLEVBQVUrRyxPQUFPLFdBQ2J4SCxFQUFLcUMsb0JBQ0xyQyxFQUFLa0MsZUFFRGhCLEVBQVM0QixTQUFTLFlBQVk5QyxFQUFLNEMsa0JBRW5DdEMsRUFBRSxPQUFPa0QsR0FBRyx1QkFDWmxELEVBQUUsc0JBQXNCK0MsS0FBSyxXQUN6Qi9DLEVBQUVGLE1BQU1tQyxZQUFZLFlBQ3BCakMsRUFBRUYsTUFBTW1DLFlBQVksYUFDcEJ2QyxFQUFLeUQsY0FBY25ELEVBQUVGLFdBSWpDRSxFQUFFSSxRQUFRaUMsR0FBRyxPQUFRLFdBQ2JyQyxFQUFFLE9BQU9rRCxHQUFHLHVCQUNabEQsRUFBRSxzQkFBc0IrQyxLQUFLLFdBQ3pCckQsRUFBS3lELGNBQWNuRCxFQUFFRixXQUtqQ0MsRUFBS3NDLEdBQUcsUUFBUyxTQUFVTyxHQUN2QmlELFFBQVFDLElBQUlsRCxFQUFNQyxXQU0xQixJQUFJc0wsU0FBVyxJQUFJN08iLCJmaWxlIjoiYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy/RhNGD0L3QutGG0LjRjywg0L7Qv9GA0LXQtNC10LvRj9GO0YnQsNGPINC30LDRgNC10LPQuNGB0YLQstC40YDQvtCy0LDQvdC90YvQuSDQv9C+0LvRjNC30L7QstCw0YLQtdC70Ywg0LjQu9C4INC90LXRglxyXG5cclxuLy8g0L/RgNC10LTRg9GB0LzQvtGC0YDQtdGC0Ywg0LLRi9GF0L7QtCDQuNC3INCw0LrQutCw0YPQvdGC0LBcclxuXHJcblxyXG5Hb1RvVHJpcCA9IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICB2YXIgc2VsZiA9IHRoaXMsXHJcbiAgICAgICAgYm9keSA9ICQoZG9jdW1lbnQuYm9keSksXHJcbiAgICAgICAgZG9jID0gJChkb2N1bWVudCksXHJcbiAgICAgICAgZG9jV2luZG93ID0gJCh3aW5kb3cpLFxyXG4gICAgICAgIGJvZHlQb3NpdGlvbiA9IHtcclxuICAgICAgICAgICAgdG9wOiBmYWxzZSxcclxuICAgICAgICAgICAgbGVmdDogZmFsc2VcclxuICAgICAgICB9LFxyXG4gICAgICAgIHRva2VuMzYwID0gJChcIiNndC1pcy0zNjBcIiksXHJcbiAgICAgICAgdG9rZW40ODAgPSAkKFwiI2d0LWlzLTQ4MFwiKSxcclxuICAgICAgICB0b2tlbjY2NyA9ICQoXCIjZ3QtaXMtNjY3XCIpLFxyXG4gICAgICAgIHRva2VuNzY4ID0gJChcIiNndC1pcy03NjhcIiksXHJcbiAgICAgICAgdG9rZW4xMDI0ID0gJChcIiNndC1pcy0xMDI0XCIpLFxyXG4gICAgICAgIHRva2VuMTIzMSA9ICQoXCIjZ3QtaXMtMTIzMVwiKSxcclxuICAgICAgICBndEhlYWRlciA9ICQoXCJoZWFkZXJcIiksXHJcbiAgICAgICAgZ3RGb290ZXIgPSAkKFwiZm9vdGVyXCIpLFxyXG4gICAgICAgIGd0V3JhcHBlciA9ICQoXCIjZ3Qtd3JhcHBlclwiKSxcclxuICAgICAgICB1cEJ1dHRvbiA9ICQoXCIjZ3QtdXBcIiksXHJcbiAgICAgICAgbW9iaWxlTWVudVN3aXRjaCA9ICQoXCIjZ3QtbW9iaWxlLW1lbnUtc3dpdGNoXCIpLFxyXG4gICAgICAgIGVudGVyQnV0dG9uID0gJCgnLmd0LWVudGVyJyksXHJcbiAgICAgICAgZW50ZXJXcmFwcGVyID0gJCgnI2d0LWhlYWRlci1lbnRlci13cmFwcGVyJyksXHJcbiAgICAgICAgZW50ZXJGb3JtID0gJCgnI2d0LWhlYWRlci1lbnRlcicpLFxyXG4gICAgICAgIGVudGVyQ2hvc2UgPSAkKCcjZ3QtaGVhZGVyLWVudGVyLWNob3NlJyksXHJcbiAgICAgICAgZW50ZXJDbG9zZSA9ICQoJyNndC1oZWFkZXItZW50ZXItY2xvc2UnKTtcclxuICAgIHRoaXMuZml4Qm9keSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAoYm9keVBvc2l0aW9uLnRvcCB8fCBib2R5UG9zaXRpb24ubGVmdCkgcmV0dXJuO1xyXG4gICAgICAgIGJvZHlQb3NpdGlvbi50b3AgPSBkb2Muc2Nyb2xsVG9wKCk7XHJcbiAgICAgICAgYm9keVBvc2l0aW9uLmxlZnQgPSBib2R5Lm9mZnNldCgpLmxlZnQ7XHJcbiAgICAgICAgYm9keS5jc3Moe1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogXCJmaXhlZFwiLFxyXG4gICAgICAgICAgICBsZWZ0OiBib2R5UG9zaXRpb24ubGVmdCArIFwicHhcIixcclxuICAgICAgICAgICAgdG9wOiAtMSAqIGJvZHlQb3NpdGlvbi50b3AgKyBcInB4XCJcclxuICAgICAgICB9KTtcclxuICAgIH07XHJcbiAgICBcclxuICAgIHRoaXMudW5maXhCb2R5ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGJvZHkuY3NzKHtcclxuICAgICAgICAgICAgcG9zaXRpb246IFwiXCIsXHJcbiAgICAgICAgICAgIGxlZnQ6IFwiXCIsXHJcbiAgICAgICAgICAgIHRvcDogXCJcIlxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGRvYy5zY3JvbGxUb3AoYm9keVBvc2l0aW9uLnRvcCk7XHJcbiAgICAgICAgYm9keVBvc2l0aW9uLnRvcCA9IGZhbHNlO1xyXG4gICAgICAgIGJvZHlQb3NpdGlvbi5sZWZ0ID0gZmFsc2U7XHJcbiAgICB9O1xyXG5cclxuICAgIHRoaXMuZm9vdGVySGVpZ2h0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBmb290ZXJIZWlnaHQgPSBndEZvb3Rlci5vdXRlckhlaWdodCgpO1xyXG4gICAgICAgIGlmIChmb290ZXJIZWlnaHQgPiBkb2NXaW5kb3cuaGVpZ2h0KCkgLSA1MCkge1xyXG4gICAgICAgICAgICBndEZvb3Rlci5jc3MoXCJwb3NpdGlvblwiLCBcInN0YXRpY1wiKTtcclxuICAgICAgICAgICAgZ3RXcmFwcGVyLmNzcyhcIm1hcmdpbi1ib3R0b21cIiwgXCJcIik7XHJcbiAgICAgICAgICAgIHVwQnV0dG9uLmNzcyhcInBvc2l0aW9uXCIsIFwic3RhdGljXCIpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGd0Rm9vdGVyLmNzcyhcInBvc2l0aW9uXCIsIFwiXCIpO1xyXG4gICAgICAgICAgICB1cEJ1dHRvbi5jc3MoXCJwb3NpdGlvblwiLCBcIlwiKTtcclxuICAgICAgICAgICAgZ3RXcmFwcGVyLmNzcyhcIm1hcmdpbi1ib3R0b21cIiwgZ3RGb290ZXIub3V0ZXJIZWlnaHQoKSArIFwicHhcIik7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIHRoaXMuZGVza1RvcE1lbnVTY3JvbGwgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKGRvY1dpbmRvdy5zY3JvbGxUb3AoKSA+IGd0SGVhZGVyLm91dGVySGVpZ2h0KCkpIHtcclxuICAgICAgICAgICAgZ3RIZWFkZXIuYWRkQ2xhc3MoXCJndC1oZWFkZXItc2Nyb2xsZWRcIik7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgZ3RIZWFkZXIucmVtb3ZlQ2xhc3MoXCJndC1oZWFkZXItc2Nyb2xsZWRcIik7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICB0aGlzLnBhZ2VVcCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkKFwiYm9keSxodG1sXCIpLmFuaW1hdGUoe3Njcm9sbFRvcDogMH0sODAwKTtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICB0aGlzLnVwUGFnZUJ1dHRvbiA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAoJChkb2N1bWVudCkuc2Nyb2xsVG9wKCkgPiAzMCkge1xyXG4gICAgICAgICAgICB1cEJ1dHRvbi5hZGRDbGFzcyhcImd0LXZpc2libGVcIik7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdXBCdXR0b24ucmVtb3ZlQ2xhc3MoXCJndC12aXNpYmxlXCIpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICB1cEJ1dHRvbi5vbihcImNsaWNrXCIsIHNlbGYucGFnZVVwKTtcclxuICAgIHRoaXMubW9iaWxlTWVudUNsb3NlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHNlbGYudW5maXhCb2R5KCk7XHJcbiAgICAgICAgbW9iaWxlTWVudVN3aXRjaC5yZW1vdmVDbGFzcyhcImd0LW9wZW5cIik7XHJcbiAgICAgICAgZ3RIZWFkZXIucmVtb3ZlQ2xhc3MoXCJndC1vcGVuXCIpO1xyXG4gICAgfTtcclxuICAgIFxyXG4gICAgdGhpcy5tb2JpbGVNZW51T3BlbiA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBzZWxmLmZpeEJvZHkoKTtcclxuICAgICAgICBndEhlYWRlci5hZGRDbGFzcyhcImd0LW9wZW5cIik7XHJcbiAgICAgICAgbW9iaWxlTWVudVN3aXRjaC5hZGRDbGFzcyhcImd0LW9wZW5cIik7XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgbW9iaWxlTWVudVN3aXRjaC5vbihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAoJCh0aGlzKS5oYXNDbGFzcyhcImd0LW9wZW5cIikpIHtcclxuICAgICAgICAgICAgc2VsZi5tb2JpbGVNZW51Q2xvc2UoKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBzZWxmLm1vYmlsZU1lbnVPcGVuKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICB0aGlzLm9wZW5FbnRlckZvcm0gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgZW50ZXJXcmFwcGVyLmFkZENsYXNzKCdndC1vcGVuJyk7XHJcbiAgICAgICAgc2V0VGltZW91dChzaG93KTtcclxuICAgIFxyXG4gICAgICAgIGZ1bmN0aW9uIHNob3coKSB7XHJcbiAgICAgICAgICAgIGVudGVyRm9ybS5hZGRDbGFzcygnZ3Qtb3BlbicpO1xyXG4gICAgICAgICAgICBlbnRlckNsb3NlLmFkZENsYXNzKCdndC1vcGVuJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIFxyXG4gICAgdGhpcy5jbG9zZUVudGVyRm9ybSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBlbnRlckNsb3NlLnJlbW92ZUNsYXNzKCdndC1vcGVuJyk7XHJcbiAgICAgICAgZW50ZXJGb3JtLnJlbW92ZUNsYXNzKCdndC1vcGVuJyk7XHJcbiAgICAgICAgc2V0VGltZW91dChoaWRlLCA3NTApO1xyXG4gICAgXHJcbiAgICAgICAgZnVuY3Rpb24gaGlkZSgpIHtcclxuICAgICAgICAgICAgZW50ZXJXcmFwcGVyLnJlbW92ZUNsYXNzKCdndC1vcGVuJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIFxyXG4gICAgdGhpcy5jaGFuZ2VFbnRlclJlZ2lzdHJhdGlvbiA9IGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgIGlmIChlbnRlckZvcm0uaGFzQ2xhc3MoJChldmVudC50YXJnZXQpLmF0dHIoXCJjbGFzc1wiKSkpXHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICBlbnRlckZvcm0ucmVtb3ZlQ2xhc3MoXCJndC1jaG9zZW4tZW50ZXJcIikucmVtb3ZlQ2xhc3MoXCJndC1jaG9zZW4tcmVnaXN0cmF0aW9uXCIpLmFkZENsYXNzKCQoZXZlbnQudGFyZ2V0KS5hdHRyKFwiY2xhc3NcIikpO1xyXG4gICAgfTtcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgZW50ZXJCdXR0b24uZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgJCh0aGlzKS5vbignY2xpY2snLCBzZWxmLm9wZW5FbnRlckZvcm0pXHJcbiAgICB9KTtcclxuICAgIFxyXG4gICAgZW50ZXJDbG9zZS5vbignY2xpY2snLCBzZWxmLmNsb3NlRW50ZXJGb3JtKTtcclxuICAgIFxyXG4gICAgZW50ZXJDaG9zZS5vbignY2xpY2snLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICBzZWxmLmNoYW5nZUVudGVyUmVnaXN0cmF0aW9uKGV2ZW50KTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMuc2V0QmFja2dyb3VuZCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgaW1nSG9sZGVycyA9ICQoXCIuZ3QtaW1nLWhvbGRlclwiKTtcclxuICAgICAgICBpbWdIb2xkZXJzLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAoISQodGhpcykuYXR0cihcImRhdGEtYmdcIikpIHJldHVybjtcclxuICAgICAgICAgICAgdmFyIHBhdGggPSAkKHRoaXMpLmF0dHIoXCJkYXRhLWJnXCIpO1xyXG4gICAgICAgICAgICBpZiAodG9rZW42NjcuaXMoXCI6dmlzaWJsZVwiKSkge1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5jc3MoXHJcbiAgICAgICAgICAgICAgICAgICAgXCJiYWNrZ3JvdW5kLWltYWdlXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgJ3VybChcIi4vaW1nL2JhY2tncm91bmRzL3Bob25lLycgKyBwYXRoICsgJ1wiKSdcclxuICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHRva2VuMTAyNC5pcyhcIjp2aXNpYmxlXCIpKSB7XHJcbiAgICAgICAgICAgICAgICAkKHRoaXMpLmNzcyhcclxuICAgICAgICAgICAgICAgICAgICBcImJhY2tncm91bmQtaW1hZ2VcIixcclxuICAgICAgICAgICAgICAgICAgICAndXJsKFwiLi9pbWcvYmFja2dyb3VuZHMvdGFibGV0LycgKyBwYXRoICsgJ1wiKSdcclxuICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJCh0aGlzKS5jc3MoXHJcbiAgICAgICAgICAgICAgICBcImJhY2tncm91bmQtaW1hZ2VcIixcclxuICAgICAgICAgICAgICAgICd1cmwoXCIuL2ltZy9iYWNrZ3JvdW5kcy9kZXNrdG9wLycgKyBwYXRoICsgJ1wiKSdcclxuICAgICAgICAgICAgKTtcclxuICAgICAgICB9KTtcclxuICAgIH07XHJcbiAgICBcclxuICAgIFxyXG4gICAgdGhpcy5pbWdIb2xkZXJGdW5jID0gZnVuY3Rpb24gKGVsKSB7XHJcbiAgICAgICAgdmFyIGhvbGRlckNvbnN0ID0gZWwub3V0ZXJIZWlnaHQoKSAvIGVsLm91dGVyV2lkdGgoKSxcclxuICAgICAgICAgICAgaW1nID0gZWwuZmluZCgnaW1nJyksXHJcbiAgICAgICAgICAgIGltZ0NvbnN0ID0gaW1nLm91dGVySGVpZ2h0KCkgLyBpbWcub3V0ZXJXaWR0aCgpO1xyXG4gICAgXHJcbiAgICAgICAgaWYgKGltZ0NvbnN0ID4gaG9sZGVyQ29uc3QpIHtcclxuICAgICAgICAgICAgJChlbCkuYWRkQ2xhc3MoXCJndC13aWR0aFwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICQoZWwpLmFkZENsYXNzKFwiZ3QtaGVpZ2h0XCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAkKGVsKS5hZGRDbGFzcyhcImd0LXZpc2libGVcIik7XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICBcclxuICAgIGlmICgkKFwiZGl2XCIpLmlzKFwiLmd0LWltZy1ob2xkZXJcIikpIHtcclxuICAgICAgICBzZWxmLnNldEJhY2tncm91bmQoKTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLmNyZWF0ZVNsaWRlciA9IGZ1bmN0aW9uIChjdXJyU2xpZGVyLCBwb3NpdGlvbikge1xyXG4gICAgICAgIHZhciBzbGlkZXJUaW1lT3V0LFxyXG4gICAgICAgICAgICBzY3JlZW5Db25zdCA9IDEsXHJcbiAgICAgICAgICAgIGJhc2VXaWR0aCxcclxuICAgICAgICAgICAgYXJyb3dzUmVhZHkgPSBmYWxzZSxcclxuICAgICAgICAgICAgaW5uZXIgPSBjdXJyU2xpZGVyLmZpbmQoXCIuZ3Qtc2xpZGVyLWlubmVyXCIpLFxyXG4gICAgICAgICAgICBjb250YWluZXIgPSBjdXJyU2xpZGVyLmZpbmQoXCIuZ3Qtc2xpZGVyLWNvbnRhaW5lclwiKSxcclxuICAgICAgICAgICAgaW5uZXJDb3VudCA9IGlubmVyLmxlbmd0aCxcclxuICAgICAgICAgICAgY3VyclBvc2l0aW9uID0gcG9zaXRpb24gfHwgMCxcclxuICAgICAgICAgICAgYXJyb3cgPSBjdXJyU2xpZGVyLmhhc0NsYXNzKFwiZ3Qtc2xpZGVyLWhhcy1hcnJvd1wiKSxcclxuICAgICAgICAgICAgZG90cyA9IGN1cnJTbGlkZXIuaGFzQ2xhc3MoXCJndC1zbGlkZXItaGFzLWRvdHNcIiksXHJcbiAgICAgICAgICAgIG51bVBhbmVsID0gY3VyclNsaWRlci5oYXNDbGFzcyhcImd0LXNsaWRlci1udW1cIiksXHJcbiAgICAgICAgICAgIHRyYW0gPSBjdXJyU2xpZGVyLmhhc0NsYXNzKFwiZ3Qtc2xpZGVyLXRyYW1cIiksXHJcbiAgICAgICAgICAgIGZhZGUgPSBjdXJyU2xpZGVyLmhhc0NsYXNzKFwiZ3Qtc2xpZGVyLWZhZGVcIiksXHJcbiAgICAgICAgICAgIGhhc0Nsb25lID0gY3VyclNsaWRlci5oYXNDbGFzcyhcImd0LXNsaWRlci1oYXMtY2xvbmVcIik7XHJcbiAgICBcclxuICAgIFxyXG4gICAgICAgIGlmIChmYWRlKSB7XHJcbiAgICAgICAgICAgIGZhZGVTbGlkZXJNb3ZlKHBvc2l0aW9uKTtcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICBpZiAodHJhbSkge1xyXG4gICAgICAgICAgICBmaW5kU2NyZWVuQ29uc3QoKTtcclxuICAgICAgICAgICAgc2V0QmFzZVdpZHRoKCk7XHJcbiAgICAgICAgICAgIHRyYW1TbGlkZXJNb3ZlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgaWYgKGFycm93KSB7XHJcbiAgICAgICAgICAgIGN1cnJTbGlkZXIuYXBwZW5kKCc8ZGl2IGNsYXNzPVwiZ3Qtc2xpZGVyLWFycm93LWhvbGRlclwiPjwvZGl2PicpO1xyXG4gICAgICAgICAgICBjcmVhdGVBcnJvd3MoKTtcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICBpZiAoZG90cykge1xyXG4gICAgICAgICAgICBjcmVhdGVEb3RzKCk7XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgaWYgKGlubmVyQ291bnQgPiBzY3JlZW5Db25zdCkge1xyXG4gICAgICAgICAgICBjcmVhdGVUb3VjaCgpO1xyXG4gICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgIGlmIChoYXNDbG9uZSkge1xyXG4gICAgICAgICAgICBjcmVhdGVDbG9uZUxpc3RlbmVycygpO1xyXG4gICAgICAgIH1cclxuICAgIFxyXG4gICAgXHJcbiAgICAgICAgZnVuY3Rpb24gY3JlYXRlQ2xvbmVMaXN0ZW5lcnMoKSB7XHJcbiAgICAgICAgICAgIGN1cnJTbGlkZXIuZmluZCgnLmd0LXNsaWRlci1pbm5lci1jb3ZlcicpLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY3JlYXRlQ2xvbmVTbGlkZXIoJCh0aGlzKS5wYXJlbnQoKS5pbmRleCgpKVxyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgfSlcclxuICAgIFxyXG4gICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgIGZ1bmN0aW9uIGNyZWF0ZUFycm93cygpIHtcclxuICAgICAgICAgICAgaWYgKGlubmVyQ291bnQgPCBzY3JlZW5Db25zdCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHZhciBudW1Jbm5lciA9ICcnO1xyXG4gICAgICAgICAgICBpZiAobnVtUGFuZWwpIHtcclxuICAgICAgICAgICAgICAgIG51bUlubmVyID0gJzxkaXYgY2xhc3M9XCJndC1zbGlkZXItYXJyb3ctbnVtXCI+PGkgY2xhc3M9XCJndC1zbGlkZXItbnVtLWN1cnJcIj48L2k+PGk+0LjQtzwvaT48aSBjbGFzcz1cImd0LXNsaWRlci1udW0tbWF4XCI+PC9pPjwvZGl2PidcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjdXJyU2xpZGVyLmZpbmQoXCIuZ3Qtc2xpZGVyLWFycm93LWhvbGRlclwiKS5odG1sKFxyXG4gICAgICAgICAgICAgICAgJzxzcGFuIGNsYXNzID0gXCJndC1zbGlkZXItYXJyb3cgbGVmdFwiPicgK1xyXG4gICAgICAgICAgICAgICAgJzxpIGNsYXNzPVwiZmEgZmEtYW5nbGUtbGVmdCBmYS0yeFwiPjwvaT4nICtcclxuICAgICAgICAgICAgICAgIFwiPC9zcGFuPlwiICsgbnVtSW5uZXIgK1xyXG4gICAgICAgICAgICAgICAgJzxzcGFuIGNsYXNzID0gXCJndC1zbGlkZXItYXJyb3cgcmlnaHRcIj4nICtcclxuICAgICAgICAgICAgICAgICc8aSBjbGFzcz1cImZhIGZhLWFuZ2xlLXJpZ2h0IGZhLTJ4XCI+PC9pPicgK1xyXG4gICAgICAgICAgICAgICAgXCI8L3NwYW4+XCJcclxuICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgYXJyb3dzUmVhZHkgPSB0cnVlO1xyXG4gICAgICAgICAgICBjcmVhdGVBcnJvd3NMaXN0ZW5lcnMoKTtcclxuICAgICAgICAgICAgc2hvd051bSgpO1xyXG4gICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgIGZ1bmN0aW9uIGRlc3Ryb3lBcnJvd3MoKSB7XHJcbiAgICAgICAgICAgIGN1cnJTbGlkZXIuZmluZChcIi5sZWZ0XCIpLm9mZigpO1xyXG4gICAgICAgICAgICBjdXJyU2xpZGVyLmZpbmQoXCIucmlnaHRcIikub2ZmKCk7XHJcbiAgICAgICAgICAgIGN1cnJTbGlkZXIuZmluZChcIi5ndC1zbGlkZXItYXJyb3ctaG9sZGVyXCIpLmh0bWwoXCJcIik7XHJcbiAgICAgICAgICAgIGFycm93c1JlYWR5ID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgZnVuY3Rpb24gY3JlYXRlQXJyb3dzTGlzdGVuZXJzKCkge1xyXG4gICAgICAgICAgICBjdXJyU2xpZGVyLmZpbmQoXCIubGVmdFwiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIG9uZU1vdmVGdW5jdGlvbihmYWxzZSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBjdXJyU2xpZGVyLmZpbmQoXCIucmlnaHRcIikub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBvbmVNb3ZlRnVuY3Rpb24odHJ1ZSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBjaGVja1Bvc2l0aW9uKCk7XHJcbiAgICAgICAgICAgIGlmIChudW1QYW5lbCkgc2hvd051bSgpXHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgZnVuY3Rpb24gY3JlYXRlRG90cygpIHtcclxuICAgICAgICAgICAgY3VyclNsaWRlci5hcHBlbmQoJzxkaXYgY2xhc3M9XCJndC1zbGlkZXItbmF2XCI+PC9kaXY+Jyk7XHJcbiAgICAgICAgICAgIHZhciBuYXYgPSBjdXJyU2xpZGVyLmZpbmQoXCIuZ3Qtc2xpZGVyLW5hdlwiKSxcclxuICAgICAgICAgICAgICAgIHNwYW5zID0gXCJcIjtcclxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBpbm5lckNvdW50OyBpKyspIHtcclxuICAgICAgICAgICAgICAgIHNwYW5zICs9IFwiPHNwYW4gZGF0YS1udW0gPSBcIiArIGkgKyBcIj48L3NwYW4+XCI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgbmF2Lmh0bWwoc3BhbnMpO1xyXG4gICAgXHJcbiAgICAgICAgICAgIG5hdi5maW5kKFwic3BhblwiKS5maXJzdCgpLmFkZENsYXNzKFwiZ3QtYWN0aXZlXCIpO1xyXG4gICAgICAgICAgICBjdXJyU2xpZGVyLmZpbmQoXCIuZ3Qtc2xpZGVyLW5hdiBzcGFuXCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgb25lTW92ZUZ1bmN0aW9uKHRydWUsICskKHRoaXMpLmF0dHIoXCJkYXRhLW51bVwiKSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgIGZ1bmN0aW9uIG9uZU1vdmVGdW5jdGlvbihidWwsIG51bSkge1xyXG4gICAgICAgICAgICBpZiAobnVtIHx8IG51bSA9PT0gMCkge1xyXG4gICAgICAgICAgICAgICAgY3VyclBvc2l0aW9uID0gbnVtO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKGJ1bCkge1xyXG4gICAgICAgICAgICAgICAgY3VyclBvc2l0aW9uICs9IDE7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjdXJyUG9zaXRpb24gLT0gMTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoY3VyclBvc2l0aW9uID4gaW5uZXJDb3VudCAtIHNjcmVlbkNvbnN0KSB7XHJcbiAgICAgICAgICAgICAgICBjdXJyUG9zaXRpb24gPSBpbm5lckNvdW50IC0gc2NyZWVuQ29uc3Q7XHJcbiAgICAgICAgICAgICAgICAvLyBzZWxmLnNsaWRlckVuZExlZnQoY3VyclNsaWRlcik7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKGN1cnJQb3NpdGlvbiA8IDApIHtcclxuICAgICAgICAgICAgICAgIGN1cnJQb3NpdGlvbiA9IDA7XHJcbiAgICAgICAgICAgICAgICAvLyBzZWxmLnNsaWRlckVuZFJpZ2h0KGN1cnJTbGlkZXIpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICAgICAgaWYgKHRyYW0pIHtcclxuICAgICAgICAgICAgICAgIHRyYW1TbGlkZXJNb3ZlKCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBmYWRlU2xpZGVyTW92ZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICBcclxuICAgIFxyXG4gICAgICAgICAgICBpZiAoYXJyb3cpIGNoZWNrUG9zaXRpb24oKTtcclxuICAgICAgICAgICAgaWYgKG51bVBhbmVsKSBzaG93TnVtKCk7XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgZnVuY3Rpb24gY2hlY2tQb3NpdGlvbigpIHtcclxuICAgICAgICAgICAgdmFyIGxlZnQgPSBjdXJyU2xpZGVyLmZpbmQoXCIubGVmdFwiKSxcclxuICAgICAgICAgICAgICAgIHJpZ2h0ID0gY3VyclNsaWRlci5maW5kKFwiLnJpZ2h0XCIpO1xyXG4gICAgICAgICAgICByaWdodC5yZW1vdmVDbGFzcyhcIm5vdC1hY3RpdmVcIik7XHJcbiAgICAgICAgICAgIGxlZnQucmVtb3ZlQ2xhc3MoXCJub3QtYWN0aXZlXCIpO1xyXG4gICAgICAgICAgICBpZiAoY3VyclBvc2l0aW9uID09IDApIHtcclxuICAgICAgICAgICAgICAgIGxlZnQuYWRkQ2xhc3MoXCJub3QtYWN0aXZlXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChjdXJyUG9zaXRpb24gPT0gaW5uZXJDb3VudCAtIDEgfHwgY3VyclBvc2l0aW9uID09IGlubmVyQ291bnQgLSBzY3JlZW5Db25zdCkge1xyXG4gICAgICAgICAgICAgICAgcmlnaHQuYWRkQ2xhc3MoXCJub3QtYWN0aXZlXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgZnVuY3Rpb24gdHJhbVNsaWRlck1vdmUoKSB7XHJcbiAgICAgICAgICAgIGlmIChkb3RzKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgYWxsRG90cyA9IGN1cnJTbGlkZXIuZmluZChcIi5ndC1zbGlkZXItbmF2IHNwYW5cIik7XHJcbiAgICAgICAgICAgICAgICBhbGxEb3RzLnJlbW92ZUNsYXNzKFwiZ3QtYWN0aXZlXCIpO1xyXG4gICAgICAgICAgICAgICAgJChhbGxEb3RzW2N1cnJQb3NpdGlvbl0pLmFkZENsYXNzKFwiZ3QtYWN0aXZlXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNvbnRhaW5lci5jc3MoXCJtYXJnaW4tbGVmdFwiLCBiYXNlV2lkdGggKiAtMSAqIGN1cnJQb3NpdGlvbiArIFwicHhcIik7XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgZnVuY3Rpb24gZmFkZVNsaWRlck1vdmUocG9zaXRpb24pIHtcclxuICAgICAgICAgICAgdmFyIGluZGV4ID0gcG9zaXRpb24gfHwgY3VyclBvc2l0aW9uO1xyXG4gICAgICAgICAgICAkKGlubmVyKS5yZW1vdmVDbGFzcygnZ3Qtb3BlbicpO1xyXG4gICAgICAgICAgICAkKGlubmVyW2luZGV4XSkuYWRkQ2xhc3MoJ2d0LW9wZW4nKTtcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICBmdW5jdGlvbiBzaG93TnVtKCkge1xyXG4gICAgICAgICAgICBjdXJyU2xpZGVyLmZpbmQoJy5ndC1zbGlkZXItbnVtLWN1cnInKS50ZXh0KGN1cnJQb3NpdGlvbiArIDEpO1xyXG4gICAgICAgICAgICBjdXJyU2xpZGVyLmZpbmQoJy5ndC1zbGlkZXItbnVtLW1heCcpLnRleHQoaW5uZXJDb3VudCk7XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgZnVuY3Rpb24gY3JlYXRlVG91Y2goKSB7XHJcbiAgICAgICAgICAgIHZhciBpbml0aWFsUG9pbnQgPSAwLFxyXG4gICAgICAgICAgICAgICAgZmluYWxQb2ludCA9IDA7XHJcbiAgICAgICAgICAgIGN1cnJTbGlkZXIub24oXCJ0b3VjaHN0YXJ0XCIsIGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGUgPSBldmVudC5vcmlnaW5hbEV2ZW50O1xyXG4gICAgICAgICAgICAgICAgaW5pdGlhbFBvaW50ID0gTWF0aC5hYnMoZS50b3VjaGVzWzBdLnBhZ2VYKTtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwidG91Y2hzdGFydFwiKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGN1cnJTbGlkZXIub24oXCJ0b3VjaGVuZFwiLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICAgICAgICAgIHZhciBlID0gZXZlbnQub3JpZ2luYWxFdmVudDtcclxuICAgICAgICAgICAgICAgIGZpbmFsUG9pbnQgPSBNYXRoLmFicyhlLmNoYW5nZWRUb3VjaGVzWzBdLnBhZ2VYKTtcclxuICAgICAgICAgICAgICAgIGlmIChNYXRoLmFicyhpbml0aWFsUG9pbnQgLSBmaW5hbFBvaW50KSA+IDUwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGluaXRpYWxQb2ludCA+IGZpbmFsUG9pbnQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgb25lTW92ZUZ1bmN0aW9uKHRydWUpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uZU1vdmVGdW5jdGlvbihmYWxzZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICBmdW5jdGlvbiBkZXN0cm95VG91Y2goKSB7XHJcbiAgICAgICAgICAgIGN1cnJTbGlkZXIub2ZmKCk7XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICBcclxuICAgICAgICBmdW5jdGlvbiBmaW5kU2NyZWVuQ29uc3QoKSB7XHJcbiAgICAgICAgICAgIGlmIChjdXJyU2xpZGVyLmF0dHIoXCJkYXRhLWNvdW50XCIpKSB7XHJcbiAgICAgICAgICAgICAgICBzY3JlZW5Db25zdCA9IHBhcnNlSW50KGN1cnJTbGlkZXIuYXR0cihcImRhdGEtY291bnRcIikpO1xyXG4gICAgICAgICAgICAgICAgaWYgKCQodG9rZW43NjgpLmlzKFwiOnZpc2libGVcIikpIHNjcmVlbkNvbnN0ID0gMztcclxuICAgICAgICAgICAgICAgIGlmICgkKHRva2VuNjY3KS5pcyhcIjp2aXNpYmxlXCIpKSBzY3JlZW5Db25zdCA9IDI7XHJcbiAgICAgICAgICAgICAgICBpZiAoJCh0b2tlbjM2MCkuaXMoXCI6dmlzaWJsZVwiKSkgc2NyZWVuQ29uc3QgPSAxO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgZnVuY3Rpb24gc2V0QmFzZVdpZHRoKCkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhiYXNlV2lkdGgpO1xyXG4gICAgXHJcbiAgICAgICAgICAgIGJhc2VXaWR0aCA9IGN1cnJTbGlkZXIub3V0ZXJXaWR0aCgpIC8gc2NyZWVuQ29uc3Q7XHJcbiAgICBcclxuICAgICAgICAgICAgY3VyclNsaWRlci5maW5kKFwiLmd0LXNsaWRlci1jb250YWluZXJcIikub3V0ZXJXaWR0aCgoaW5uZXJDb3VudCArIDEpICogYmFzZVdpZHRoKTtcclxuICAgICAgICAgICAgaW5uZXIuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAkKHRoaXMpLm91dGVyV2lkdGgoYmFzZVdpZHRoKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICBcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgIFxyXG4gICAgICAgIGZ1bmN0aW9uIGNyZWF0ZUNsb25lU2xpZGVyKGNsaWNrUG9zaXRpb24pIHtcclxuICAgICAgICAgICAgaWYgKCQoXCJkaXZcIikuaXMoXCIjZ3QtY2xvbmUtY2xvc2VcIikpIHJldHVybjtcclxuICAgIFxyXG4gICAgICAgICAgICBzZWxmLmZpeEJvZHkoKTtcclxuICAgIFxyXG4gICAgICAgICAgICAkKFwiI2d0LWJvZHktd3JhcHBlclwiKS5zaG93KCkuYXBwZW5kKFxyXG4gICAgICAgICAgICAgICAgJzxkaXYgICBjbGFzcz1cImNvbnRhaW5lclwiPicgK1xyXG4gICAgICAgICAgICAgICAgJzxkaXYgaWQgPSBcImd0LWNsb25lLWNsb3NlXCIgY2xhc3MgPSBcImd0LXNsaWRlci1jbG9uZS1jbG9zZVwiPjwvZGl2PicgK1xyXG4gICAgICAgICAgICAgICAgJzxkaXYgaWQgPSBcImd0LWNsb25lXCIgY2xhc3M9XCJndC1zbGlkZXIgZ3Qtc2xpZGVyLWNsb25lIGd0LXNsaWRlci1mYWRlIGd0LXNsaWRlci1oYXMtYXJyb3dcIj4nICtcclxuICAgICAgICAgICAgICAgICc8ZGl2ICBpZCA9IFwiZ3QtY2xvbmUtY29udGFpbmVyXCIgY2xhc3M9XCJndC1zbGlkZXItY29udGFpbmVyXCI+PC9kaXY+JyArXHJcbiAgICAgICAgICAgICAgICAnPC9kaXY+JyArXHJcbiAgICAgICAgICAgICAgICAnPC9kaXY+J1xyXG4gICAgICAgICAgICApO1xyXG4gICAgXHJcbiAgICAgICAgICAgIHZhciBpbm5lcnMgPSBjdXJyU2xpZGVyLmZpbmQoXCIuZ3Qtc2xpZGVyLWlubmVyXCIpLmNsb25lKHRydWUpO1xyXG4gICAgXHJcbiAgICAgICAgICAgIGlubmVycy5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICQoJyNndC1jbG9uZS1jb250YWluZXInKS5hcHBlbmQoJCh0aGlzKSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgXHJcbiAgICBcclxuICAgICAgICAgICAgc2VsZi5jcmVhdGVTbGlkZXIoJCgnI2d0LWNsb25lJyksIGNsaWNrUG9zaXRpb24pO1xyXG4gICAgXHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICBcclxuICAgICAgICAvLy8vLy8vLy8vcmVzaXplU2xpZGVyXHJcbiAgICBcclxuICAgICAgICBmdW5jdGlvbiByZXNpemVTbGlkZXIoKSB7XHJcbiAgICAgICAgICAgIGlmICghc2xpZGVyVGltZU91dCkge1xyXG4gICAgICAgICAgICAgICAgc2xpZGVyVGltZU91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHNsaWRlclRpbWVPdXQgPSBudWxsO1xyXG4gICAgICAgICAgICAgICAgICAgIHJlc2l6ZUZ1bmMoKTtcclxuICAgICAgICAgICAgICAgIH0sIDEzMik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICBkb2NXaW5kb3cucmVzaXplKHJlc2l6ZVNsaWRlcik7XHJcbiAgICBcclxuICAgIFxyXG4gICAgICAgIGZ1bmN0aW9uIHJlc2l6ZUZ1bmMoKSB7XHJcbiAgICAgICAgICAgIGRlc3Ryb3lUb3VjaCgpO1xyXG4gICAgICAgICAgICBpZiAodHJhbSkge1xyXG4gICAgICAgICAgICAgICAgZmluZFNjcmVlbkNvbnN0KCk7XHJcbiAgICAgICAgICAgICAgICBzZXRCYXNlV2lkdGgoKTtcclxuICAgICAgICAgICAgICAgIHRyYW1TbGlkZXJNb3ZlKCk7XHJcbiAgICBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoYXJyb3dzUmVhZHkpIHtcclxuICAgICAgICAgICAgICAgIGRlc3Ryb3lBcnJvd3MoKTtcclxuICAgICAgICAgICAgICAgIGNyZWF0ZUFycm93cygpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKGlubmVyQ291bnQgPiBzY3JlZW5Db25zdCkge1xyXG4gICAgICAgICAgICAgICAgY3JlYXRlVG91Y2goKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgXHJcbiAgICBcclxuICAgICAgICAgICAgY29uc29sZS5sb2coY3VyclBvc2l0aW9uLCBhcnJvdywgZG90cywgbnVtUGFuZWwsIHRyYW0pO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICBcclxuICAgIFxyXG4gICAgaWYgKCQoXCJkaXZcIikuaXMoXCIuZ3Qtc2xpZGVyXCIpKSB7XHJcbiAgICAgICAgJChcIi5ndC1zbGlkZXJcIikuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHNlbGYuY3JlYXRlU2xpZGVyKCQodGhpcykpO1xyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbiAgICB0aGlzLm1hbmFnZUd0QWN0aXZlVWxNZW51ID0gZnVuY3Rpb24gKGVsKSB7XHJcbiAgICAgICAgaWYgKGVsLnRhZ05hbWUgIT0gXCJsaVwiKVxyXG4gICAgICAgICAgICBlbCA9ICQoZWwpLmNsb3Nlc3QoXCJsaVwiKVxyXG4gICAgXHJcbiAgICAgICAgJChlbCkuY2xvc2VzdCgkKFwidWxcIikpLmZpbmQoXCJsaVwiKS5yZW1vdmVDbGFzcyhcImd0LWFjdGl2ZVwiKTtcclxuICAgICAgICAkKGVsKS5hZGRDbGFzcyhcImd0LWFjdGl2ZVwiKTtcclxuICAgIH07XHJcbiAgICBcclxuICAgIFxyXG4gICAgaWYgKCQoXCIqXCIpLmlzKFwiLmd0LWh1bmRyZXQtbWVudVwiKSkge1xyXG4gICAgICAgICQoXCIuZ3QtaHVuZHJldC1tZW51XCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIHNlbGYubWFuYWdlR3RBY3RpdmVVbE1lbnUoZXZlbnQudGFyZ2V0KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgXHJcbiAgICBpZiAoJChcIipcIikuaXMoXCIuZ3QtYnV0dG9uLW1lbnVcIikpIHtcclxuICAgICAgICAkKFwiLmd0LWJ1dHRvbi1tZW51XCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIHNlbGYubWFuYWdlR3RBY3RpdmVVbE1lbnUoZXZlbnQudGFyZ2V0KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgaWYgKCQoXCIqXCIpLmlzKFwiLmd0LW1lbnUtbmV3c1wiKSkge1xyXG4gICAgICAgICQoXCIuZ3QtbWVudS1uZXdzXCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIHNlbGYubWFuYWdlR3RBY3RpdmVVbE1lbnUoZXZlbnQudGFyZ2V0KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgdGhpcy50YWJTbGlkZXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIHRhYlNsaWRlcnMgPSAkKFwiLmd0LXRhYnNcIik7XHJcbiAgICAgICAgdGFiU2xpZGVycy5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIGN1cnJUYWJzID0gJCh0aGlzKTtcclxuICAgICAgICAgICAgY3VyclRhYnMuZmluZChcIi5ndC10YWJzLWJ1dHRvblwiKS5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICQodGhpcykub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZi50YWJTbGlkZXJBY3Rpb24oY3VyclRhYnMsICQodGhpcykuaW5kZXgoKSk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIHNlbGYudGFiU2xpZGVyQWN0aXZhdGlvbihjdXJyVGFicyk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICB0aGlzLnRhYlNsaWRlckFjdGl2YXRpb24gPSBmdW5jdGlvbiAoZWwpIHtcclxuICAgICAgICAkKGVsLmZpbmQoXCIuZ3QtdGFicy1idXR0b25cIikpLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpO1xyXG4gICAgICAgICQoZWwuZmluZChcIi5ndC10YWJzLW1haW5cIikpLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpO1xyXG4gICAgICAgICQoZWwuZmluZChcIi5ndC10YWJzLW1haW5cIikpLmhpZGUoKTtcclxuICAgICAgICAkKGVsLmZpbmQoXCIuZ3QtdGFicy1idXR0b25cIilbMF0pLmFkZENsYXNzKFwiYWN0aXZlXCIpO1xyXG4gICAgICAgICQoZWwuZmluZChcIi5ndC10YWJzLW1haW5cIilbMF0pLnNob3coKTtcclxuICAgICAgICAkKGVsLmZpbmQoXCIuZ3QtdGFicy1tYWluXCIpWzBdKS5hZGRDbGFzcyhcImFjdGl2ZVwiKTtcclxuICAgIH07XHJcbiAgICBcclxuICAgIHRoaXMudGFiU2xpZGVyQWN0aW9uID0gZnVuY3Rpb24gKGVsLCBudW0pIHtcclxuICAgICAgICAkKGVsLmZpbmQoXCIuZ3QtdGFicy1idXR0b25cIikpLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpO1xyXG4gICAgICAgICQoZWwuZmluZChcIi5ndC10YWJzLW1haW5cIikpLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpO1xyXG4gICAgICAgICQoZWwuZmluZChcIi5ndC10YWJzLW1haW5cIikpLmhpZGUoKTtcclxuICAgICAgICAkKGVsLmZpbmQoXCIuZ3QtdGFicy1idXR0b25cIilbbnVtXSkuYWRkQ2xhc3MoXCJhY3RpdmVcIik7XHJcbiAgICAgICAgJChlbC5maW5kKFwiLmd0LXRhYnMtbWFpblwiKVtudW1dKS5zaG93KCk7XHJcbiAgICAgICAgJChlbC5maW5kKFwiLmd0LXRhYnMtbWFpblwiKVtudW1dKS5hZGRDbGFzcyhcImFjdGl2ZVwiKTtcclxuICAgIH07XHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgaWYgKCQoXCJkaXZcIikuaXMoXCIuZ3QtdGFic1wiKSkge1xyXG4gICAgICAgIHNlbGYudGFiU2xpZGVyKCk7XHJcbiAgICB9XHJcbiAgICB0aGlzLnNldFBsYXllcnMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIHRhZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIik7XHJcbiAgICAgICAgdGFnLnR5cGUgPSBcInRleHQvamF2YXNjcmlwdFwiO1xyXG4gICAgICAgIHRhZy5zcmMgPSBcImh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3BsYXllcl9hcGlcIjtcclxuICAgICAgICB2YXIgbGFzdFNjcmlwdFRhZyA9ICQoXCJzY3JpcHRcIilbJChcInNjcmlwdFwiKS5sZW5ndGggLSAxXTtcclxuICAgICAgICBsYXN0U2NyaXB0VGFnLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRhZywgbGFzdFNjcmlwdFRhZyk7XHJcbiAgICAgICAgdmFyIGd0VmlkZW9zID0gJChcIi5ndC12aWRlb1wiKTtcclxuICAgICAgICBndFZpZGVvcy5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIGN1cnJlbnRQbGF5ZXIgPSAkKHRoaXMpO1xyXG4gICAgICAgICAgICBjdXJyZW50UGxheWVyLmZpbmQoXCIuZ3QtdmlkZW8tc3dpdGNoXCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5hZGRDbGFzcyhcImd0LW9wZW5cIik7XHJcbiAgICAgICAgICAgICAgICBjdXJyZW50UGxheWVyLmFkZENsYXNzKFwiZ3Qtb3BlblwiKTtcclxuICAgICAgICAgICAgICAgIHNlbGYuYWRkWW91VHViZShjdXJyZW50UGxheWVyKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICB0aGlzLmFkZFlvdVR1YmUgPSBmdW5jdGlvbiAoZWwpIHtcclxuICAgICAgICB2YXIgcGxheWVyLFxyXG4gICAgICAgICAgICBlbElkID0gXCJndC12aWRlby1cIiArIGVsLmluZGV4KCk7XHJcbiAgICBcclxuICAgICAgICBlbC5maW5kKFwiLmd0LXZpZGVvLXN3aXRjaFwiKS5oaWRlKCdzbG93Jyk7XHJcbiAgICBcclxuICAgICAgICBlbFxyXG4gICAgICAgICAgICAuZmluZChcIi5ndC12aWRlby1pbm5lclwiKVxyXG4gICAgICAgICAgICAuYXR0cihcImlkXCIsIGVsSWQpXHJcbiAgICAgICAgICAgIC5hZGRDbGFzcyhcImd0LXZpZGVvLWZvcmVncm91bmRcIik7XHJcbiAgICBcclxuICAgICAgICBmdW5jdGlvbiBvbllvdVR1YmVJZnJhbWVBUElSZWFkeSgpIHtcclxuICAgICAgICAgICAgcGxheWVyID0gbmV3IFlULlBsYXllcihlbElkLCB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNjAwLFxyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA0MDAsXHJcbiAgICAgICAgICAgICAgICB2aWRlb0lkOiBlbC5hdHRyKFwiZGF0YS15b3V0dWJlXCIpLFxyXG4gICAgICAgICAgICAgICAgcGxheWVyVmFyczoge1xyXG4gICAgICAgICAgICAgICAgICAgIHBsYXlsaXN0OiBlbC5hdHRyKFwiZGF0YS15b3V0dWJlXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiBcIndoaXRlXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgbG9vcDogMSxcclxuICAgICAgICAgICAgICAgICAgICBhdXRvcGxheTogMVxyXG4gICAgICAgICAgICAgICAgICAgIC8vIGRpc2FibGVrYjogMCxcclxuICAgICAgICAgICAgICAgICAgICAvLyBjb250cm9sczogMFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGV2ZW50czoge1xyXG4gICAgICAgICAgICAgICAgICAgIG9uUmVhZHk6IGluaXRpYWxpemVcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgb25Zb3VUdWJlSWZyYW1lQVBJUmVhZHkoKTtcclxuICAgIFxyXG4gICAgICAgIGZ1bmN0aW9uIGluaXRpYWxpemUoKSB7XHJcbiAgICAgICAgICAgIHBsYXllci5tdXRlKCk7XHJcbiAgICAgICAgICAgIHBsYXllci5wbGF5VmlkZW8oKTtcclxuICAgICAgICAgICAgZWwuYWRkQ2xhc3MoXCJndC12aWRlby1vblwiKTtcclxuICAgICAgICAgICAgZWwuZmluZChcIi5ndC12aWRlby11bmNvdmVyXCIpLm9uKCdjbGljaycsIHBsYXlGdWxsU2NyZWVuKTtcclxuICAgICAgICAgICAgZWwuZmluZChcIi5ndC12aWRlby1wYXVzZVwiKS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBwbGF5ZXIucGF1c2VWaWRlbygpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgZWwuZmluZChcIi5ndC12aWRlby1wbGF5XCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgcGxheWVyLnBsYXlWaWRlbygpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICBmdW5jdGlvbiBwbGF5RnVsbFNjcmVlbigpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ3BsYXlGdWxsU2NyZWVuJyk7XHJcbiAgICAgICAgICAgIHZhciBpZnJhbWUgPSBlbC5maW5kKCdpZnJhbWUnKVswXTtcclxuICAgICAgICAgICAgdmFyIHJlcXVlc3RGdWxsU2NyZWVuID0gaWZyYW1lLnJlcXVlc3RGdWxsU2NyZWVuIHx8IGlmcmFtZS5tb3pSZXF1ZXN0RnVsbFNjcmVlbiB8fCBpZnJhbWUud2Via2l0UmVxdWVzdEZ1bGxTY3JlZW47XHJcbiAgICAgICAgICAgIGlmIChyZXF1ZXN0RnVsbFNjcmVlbikge1xyXG4gICAgICAgICAgICAgICAgcmVxdWVzdEZ1bGxTY3JlZW4uYmluZChpZnJhbWUpKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICBcclxuICAgIH07XHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICBpZiAoJChcImRpdlwiKS5pcyhcIi5ndC12aWRlb1wiKSkge1xyXG4gICAgICAgIHNlbGYuc2V0UGxheWVycygpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5maXhBcnRpY2xlU2Nyb2xsVGFibGVQb3NpdGlvbiA9IGZ1bmN0aW9uICgpIHtcclxuICAgIFxyXG4gICAgXHJcbiAgICAgICAgdmFyIHRhYmxlID0gJChcIi5ndC1hcnRpY2xlLXRhYmxlLXdyYXBwZXJcIiksXHJcbiAgICAgICAgICAgIHRhYmxlUGFyZW50ID0gdGFibGUucGFyZW50KCksXHJcbiAgICAgICAgICAgIHRhYmxlUGFyZW50VG9wID0gdGFibGVQYXJlbnQucG9zaXRpb24oKS50b3AsXHJcbiAgICAgICAgICAgIHRhYmxlUGFyZW50Qm90dG9tID0gdGFibGVQYXJlbnRUb3AgKyB0YWJsZVBhcmVudC5vdXRlckhlaWdodCgpLFxyXG4gICAgICAgICAgICB0YWJsZVdpZHRoID0gdGFibGUub3V0ZXJXaWR0aCgpLFxyXG4gICAgICAgICAgICB3aW5kb3dUb3AgPSBkb2Muc2Nyb2xsVG9wKCksXHJcbiAgICAgICAgICAgIHdpZG93SGVpZ2h0ID0gZG9jV2luZG93Lm91dGVySGVpZ2h0KCk7XHJcbiAgICBcclxuICAgIFxyXG4gICAgICAgIGlmICh0YWJsZVBhcmVudFRvcCA+IHdpbmRvd1RvcCkge1xyXG4gICAgICAgICAgICBpZiAodGFibGUuaGFzQ2xhc3MoXCJndC1maXhlZFwiKSkge1xyXG4gICAgICAgICAgICAgICAgdGFibGUucmVtb3ZlQ2xhc3MoXCJndC1maXhlZFwiKTtcclxuICAgIFxyXG4gICAgICAgICAgICAgICAgdGFibGUuY3NzKHtcclxuICAgICAgICAgICAgICAgICAgICBsZWZ0OiBcIlwiLFxyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiBcIlwiXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgIGlmICh0YWJsZVBhcmVudFRvcCA8IHdpbmRvd1RvcCArIDkwKSB7XHJcbiAgICAgICAgICAgIGlmICghdGFibGUuaGFzQ2xhc3MoXCJndC1maXhlZFwiKSkge1xyXG4gICAgICAgICAgICAgICAgdGFibGUuY3NzKHtcclxuICAgICAgICAgICAgICAgICAgICBsZWZ0OiB0YWJsZS5vZmZzZXQoKS5sZWZ0ICsgXCJweFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiB0YWJsZVdpZHRoXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIHRhYmxlLmFkZENsYXNzKFwiZ3QtZml4ZWRcIik7XHJcbiAgICBcclxuICAgIFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICh3aW5kb3dUb3AgKyB3aWRvd0hlaWdodCA+IHRhYmxlUGFyZW50Qm90dG9tKSB7XHJcbiAgICAgICAgICAgICAgICB0YWJsZS5hZGRDbGFzcyhcImd0LWZpeGVkLWJvdHRvbVwiKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRhYmxlLnJlbW92ZUNsYXNzKFwiZ3QtZml4ZWQtYm90dG9tXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKHRhYmxlLmhhc0NsYXNzKFwiZ3QtZml4ZWRcIikpIHtcclxuICAgICAgICAgICAgICAgIHRhYmxlLmNzcyh7XHJcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAod2lkb3dIZWlnaHQgLSAxMjApICsgJ3B4J1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0YWJsZS5jc3Moe1xyXG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogJydcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSkoKTtcclxuICAgIH07XHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICB0aGlzLmNyZWF0ZUFydGljdGVTY3JvbGxUYWJsZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAoISQoXCJkaXZcIikuaXMoXCIuZ3QtYXJ0aWNsZVwiKSkgcmV0dXJuO1xyXG4gICAgICAgIHZhciBhcnRpY2xlcyA9ICQoXCIuZ3QtYXJ0aWNsZVwiKSxcclxuICAgICAgICAgICAgaHRtbCA9IFwiXCI7XHJcbiAgICAgICAgYXJ0aWNsZXMuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGh0bWwgKz1cclxuICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzID0gXCJndC1hcnRpY2xlLXNjcm9sbFwiPjxkaXYgY2xhc3MgPSBcImd0LWFydGljbGUtc2Nyb2xsLXNoYWRvd1wiPjwvZGl2PjxwPicgK1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKVxyXG4gICAgICAgICAgICAgICAgICAgIC5maW5kKFwiaDJcIilcclxuICAgICAgICAgICAgICAgICAgICAudGV4dCgpICtcclxuICAgICAgICAgICAgICAgIFwiPC9wPjwvZGl2PlwiO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgICQoXCIjZ3QtYXJ0aWNsZS1zY3JvbGwtdGFibGVcIikuaHRtbChodG1sKTtcclxuICAgIH07XHJcbiAgICBcclxuICAgIHRoaXMuc2hvd0FydGlkbGVTaGFkb3cgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgJChcIi5ndC1hcnRpY2xlXCIpLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZygkKHRoaXMpKTtcclxuICAgICAgICAgICAgdmFyIGN1cnJQb3NpdGlvbiA9ICQodGhpcykucG9zaXRpb24oKS50b3AsXHJcbiAgICAgICAgICAgICAgICBlbEhlaWdodCA9ICQodGhpcykub3V0ZXJIZWlnaHQoKSxcclxuICAgICAgICAgICAgICAgIHdpbmRvd1Bvc2l0aW9uID0gJChkb2N1bWVudCkuc2Nyb2xsVG9wKCksXHJcbiAgICAgICAgICAgICAgICB4ID0gMDtcclxuICAgICAgICAgICAgaWYgKGN1cnJQb3NpdGlvbiA+IHdpbmRvd1Bvc2l0aW9uKSB7XHJcbiAgICAgICAgICAgICAgICB4ID0gMDtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHggPSAod2luZG93UG9zaXRpb24gLSBjdXJyUG9zaXRpb24pIC8gZWxIZWlnaHQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHggPiAxKSB4ID0gMTtcclxuICAgICAgICAgICAgdmFyIGN1cnJTaGFkb3cgPSAkKFwiLmd0LWFydGljbGUtc2Nyb2xsXCIpWyQodGhpcykuaW5kZXgoKV07XHJcbiAgICAgICAgICAgICQoY3VyclNoYWRvdylcclxuICAgICAgICAgICAgICAgIC5maW5kKFwiLmd0LWFydGljbGUtc2Nyb2xsLXNoYWRvd1wiKVxyXG4gICAgICAgICAgICAgICAgLmNzcyhcIndpZHRoXCIsIHggKiAxMDAgKyBcIiVcIik7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICBcclxuICAgIGlmICgkKCdkaXYnKS5pcygnLmd0LWFydGljbGUtdGFibGUtd3JhcHBlcicpKSB7XHJcbiAgICAgICAgdmFyIHNoYWRvdyA9IGZhbHNlLFxyXG4gICAgICAgICAgICBzY3JvbGxUaW1lb3V0O1xyXG4gICAgXHJcbiAgICAgICAgaWYgKCQoJ2RpdicpLmlzKFwiLmd0LWFydGljbGUtc2Nyb2xsLXRhYmxlXCIpKSB7XHJcbiAgICAgICAgICAgIHNoYWRvdyA9IHRydWU7XHJcbiAgICAgICAgICAgIHNlbGYuY3JlYXRlQXJ0aWN0ZVNjcm9sbFRhYmxlKCk7XHJcbiAgICAgICAgICAgIHNlbGYuc2hvd0FydGlkbGVTaGFkb3coKTtcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgIFxyXG4gICAgICAgIGZ1bmN0aW9uIHNjcm9sbFRocm90dGxlcigpIHtcclxuICAgICAgICAgICAgaWYgKCFzY3JvbGxUaW1lb3V0KSB7XHJcbiAgICAgICAgICAgICAgICBzY3JvbGxUaW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgc2Nyb2xsVGltZW91dCA9IG51bGw7XHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5maXhBcnRpY2xlU2Nyb2xsVGFibGVQb3NpdGlvbigpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChzaGFkb3cpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5zaG93QXJ0aWRsZVNoYWRvdygpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgICAgICAgICAgfSwgNjYpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICBcclxuICAgICAgICBkb2NXaW5kb3cuc2Nyb2xsKHNjcm9sbFRocm90dGxlcik7XHJcbiAgICAgICAgZG9jV2luZG93LnJlc2l6ZShzY3JvbGxUaHJvdHRsZXIpO1xyXG4gICAgXHJcbiAgICBcclxuICAgIH1cclxuICAgIHRoaXMuc2V0Q3VyclRpbWUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgc2VsZi5jdXJyVGltZSgpO1xyXG4gICAgICAgIHZhciB0ID0gc2V0SW50ZXJ2YWwoc2VsZi5jdXJyVGltZSwgMzAwMDApO1xyXG4gICAgfTtcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgIHRoaXMuY3VyclRpbWUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgJChcIi5ndC1jdXJyLXRpbWVcIikuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciBkYXRlID0gbmV3IERhdGUoKTtcclxuICAgICAgICAgICAgaWYgKCQodGhpcykuYXR0cihcImRhdGEtZ210XCIpKSBkYXRlLnNldFVUQ0hvdXJzKCskKHRoaXMpLmF0dHIoXCJkYXRhLWdtdFwiKSk7XHJcbiAgICAgICAgICAgIHZhciBob3VycyA9IGRhdGUuZ2V0SG91cnMoKSxcclxuICAgICAgICAgICAgICAgIG1pbnV0ZXMgPSBkYXRlLmdldE1pbnV0ZXMoKSxcclxuICAgICAgICAgICAgICAgIHdlZWtkYXkgPSBkYXRlLmdldERheSgpLFxyXG4gICAgICAgICAgICAgICAgZGF5ID0gZGF0ZS5nZXREYXRlKCksXHJcbiAgICAgICAgICAgICAgICBtb250aCA9IGRhdGUuZ2V0TW9udGgoKSxcclxuICAgICAgICAgICAgICAgIHllYXIgPSBkYXRlLmdldEZ1bGxZZWFyKCksXHJcbiAgICAgICAgICAgICAgICB3ZWVrZGF5cyA9IFtcclxuICAgICAgICAgICAgICAgICAgICBcItCS0L7RgdC60YDQtdGB0LXQvdGM0LVcIixcclxuICAgICAgICAgICAgICAgICAgICBcItCf0L7QvdC10LTQtdC70YzQvdC40LpcIixcclxuICAgICAgICAgICAgICAgICAgICBcItCS0YLQvtGA0L3QuNC6XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCLQodGA0LXQtNCwXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCLQp9C10YLQstC10YDQs1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwi0J/Rj9GC0L3QuNGG0LBcIixcclxuICAgICAgICAgICAgICAgICAgICBcItCh0YPQsdCx0L7RgtCwXCJcclxuICAgICAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgICAgICBtb250aGVzID0gW1xyXG4gICAgICAgICAgICAgICAgICAgIFwi0Y/QvdCy0LDRgNGPXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCLRhNC10LLRgNCw0LvRj1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwi0LzQsNGA0YLQsFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwi0LDQv9GA0LXQu9GPXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCLQvNCw0Y9cIixcclxuICAgICAgICAgICAgICAgICAgICBcItC40Y7QvdGPXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCLQuNGO0LvRj1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwi0LDQstCz0YPRgdGC0LBcIixcclxuICAgICAgICAgICAgICAgICAgICBcItGB0LXQvdGC0Y/QsdGA0Y9cIixcclxuICAgICAgICAgICAgICAgICAgICBcItC+0LrRgtGP0LHRgNGPXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCLQvdC+0Y/QsdGA0Y9cIixcclxuICAgICAgICAgICAgICAgICAgICBcItC00LXQutCw0LHRgNGPXCJcclxuICAgICAgICAgICAgICAgIF07XHJcbiAgICAgICAgICAgIGlmIChob3VycyA8IDEwKSBob3VycyA9IFwiMFwiICsgaG91cnM7XHJcbiAgICAgICAgICAgIGlmIChtaW51dGVzIDwgMTApIG1pbnV0ZXMgPSBcIjBcIiArIG1pbnV0ZXM7XHJcbiAgICAgICAgICAgIHdlZWtkYXkgPSB3ZWVrZGF5c1t3ZWVrZGF5XTtcclxuICAgICAgICAgICAgbW9udGggPSBtb250aGVzW21vbnRoXTtcclxuICAgICAgICAgICAgaWYgKCQoXCIuZ3QtY3Vyci10aW1lLXRpbWVcIikpXHJcbiAgICAgICAgICAgICAgICAkKFwiLmd0LWN1cnItdGltZS10aW1lXCIpLmh0bWwoaG91cnMgKyBcIjpcIiArIG1pbnV0ZXMpO1xyXG4gICAgICAgICAgICBpZiAoJChcIi5ndC1jdXJyLXRpbWUtZGF0ZVwiKSlcclxuICAgICAgICAgICAgICAgICQoXCIuZ3QtY3Vyci10aW1lLWRhdGVcIikuaHRtbChcclxuICAgICAgICAgICAgICAgICAgICB3ZWVrZGF5ICsgXCIsIFwiICsgZGF5ICsgXCIgXCIgKyBtb250aCArIFwiIFwiICsgeWVhclxyXG4gICAgICAgICAgICAgICAgKTtcclxuICAgICAgICB9KTtcclxuICAgIH07XHJcbiAgICBcclxuICAgIFxyXG4gICAgaWYgKCQoXCJkaXZcIikuaXMoXCIuZ3QtY3Vyci10aW1lXCIpKSB7XHJcbiAgICAgICAgc2VsZi5zZXRDdXJyVGltZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuaW5uZXJTY3JvbGwgPSBmdW5jdGlvbiAoZWwpIHtcclxuICAgICAgICBpZiAoZWwuZmluZChcIi5vdmVydmlld1wiKS5oZWlnaHQoKSA+IGVsLmhlaWdodCgpXHJcbiAgICAgICAgKSB7XHJcbiAgICAgICAgICAgIGVsLmFkZENsYXNzKFwiaXNTY3JvbGxlZFwiKTtcclxuICAgICAgICAgICAgZWwudGlueXNjcm9sbGJhcih7XHJcbiAgICAgICAgICAgICAgICB0aHVtYlNpemU6IDQwLFxyXG4gICAgICAgICAgICAgICAgd2hlZWxTcGVlZDogMTBcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgICAgIGlmICgkKFwiZGl2XCIpLmlzKFwiLmd0LWlubmVyLXNjcm9sbFwiKSkge1xyXG4gICAgXHJcbiAgICAgICAgICAgICQoJy5ndC1pbm5lci1zY3JvbGwnKS5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHNlbGYuaW5uZXJTY3JvbGwoJCh0aGlzKSk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICBcclxuICAgIFxyXG4gICAgICAgIH1cclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vL2RvZXMgbm90IHdvcmtcclxuXHJcbiAgICBcclxuICAgIFxyXG4gICAgdGhpcy5jcmVhdGVJY29uc0l0ZW1zQ2xpY2sgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgJChcIi5ndC12aWV3LWNhcmRzLWljb25zLWl0ZW1cIikuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmICgkKHRoaXMpLmhhc0NsYXNzKFwiZ3Qtdmlldy1jYXJkcy1pY29ucy12aXNpdFwiKSkge1xyXG4gICAgICAgICAgICAgICAgc2VsZi5jcmVhdGVWaXNpdExpbmsoJCh0aGlzKSk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKCQodGhpcykuaGFzQ2xhc3MoXCJndC12aWV3LWNhcmRzLWljb25zLWJvb2ttYXJrc1wiKSkge1xyXG4gICAgICAgICAgICAgICAgc2VsZi5jcmVhdGVCb29rbWFya3NMaW5rKCQodGhpcykpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChcclxuICAgICAgICAgICAgICAgICQodGhpcykuaGFzQ2xhc3MoXCJndC12aWV3LWNhcmRzLWljb25zLXBpblwiKSB8fFxyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5oYXNDbGFzcyhcImd0LXZpZXctY2FyZHMtaWNvbnMtc2hhcmVcIilcclxuICAgICAgICAgICAgKSB7XHJcbiAgICAgICAgICAgICAgICBzZWxmLnRvZ2dsZUd0QWN0aXZlKCQodGhpcykpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICgkKHRoaXMpLmhhc0NsYXNzKFwiZ3Qtdmlldy1jYXJkcy1pY29ucy1zaGFyZVwiKSkge1xyXG4gICAgICAgICAgICAgICAgc2VsZi5jcmVhdGVTaGFyZUxpbmsoJCh0aGlzKSk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH07XHJcbiAgICBcclxuICAgIHRoaXMuY3JlYXRlU2hhcmVMaW5rID0gZnVuY3Rpb24gKGVsKSB7XHJcbiAgICAgICAgZWwucmVtb3ZlQ2xhc3MoXCJndC1hY3RpdmVcIik7XHJcbiAgICAgICAgZWwub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGVsLnRvZ2dsZUNsYXNzKFwiZ3QtYWN0aXZlXCIpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuICAgIFxyXG4gICAgdGhpcy50b2dnbGVHdEFjdGl2ZSA9IGZ1bmN0aW9uIChlbCkge1xyXG4gICAgICAgIHZhciBlbCA9ICQoZWwpO1xyXG4gICAgICAgIGVsLnJlbW92ZUNsYXNzKFwiZ3QtYWN0aXZlXCIpO1xyXG4gICAgICAgIGVsLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBlbC50b2dnbGVDbGFzcyhcImd0LWFjdGl2ZVwiKTtcclxuICAgICAgICB9KTtcclxuICAgIH07XHJcbiAgICBcclxuICAgIFxyXG4gICAgdGhpcy5jcmVhdGVWaXNpdExpbmsgPSBmdW5jdGlvbiAoZWwpIHtcclxuICAgICAgICBpZiAoIWVsLmNsb3Nlc3QoXCIuZ3Qtdmlldy1jYXJkcy1pbm5lclwiKS5hdHRyKFwiZGF0YS1ocmVmXCIpKSByZXR1cm47XHJcbiAgICAgICAgZWwub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHNlbGYuYWRkVmlzaXRlZExpbmsoZWwpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuICAgIFxyXG4gICAgXHJcbiAgICB0aGlzLmFkZFZpc2l0ZWRMaW5rID0gZnVuY3Rpb24gKGVsKSB7XHJcbiAgICAgICAgYWxlcnQoXHJcbiAgICAgICAgICAgIFwi0L/QvtGB0LvQsNC70Lgg0LTQsNC90L3Ri9C1INC90LAg0LHQtdC6XCIsXHJcbiAgICAgICAgICAgIGVsLmNsb3Nlc3QoXCIuZ3Qtdmlldy1jYXJkcy1pbm5lclwiKS5hdHRyKFwiZGF0YS1ocmVmXCIpXHJcbiAgICAgICAgKTtcclxuICAgICAgICBlbC50b2dnbGVDbGFzcyhcImd0LWFjdGl2ZVwiKTtcclxuICAgIH07XHJcbiAgICBcclxuICAgIFxyXG4gICAgdGhpcy5hZGRCb29rbWFyayA9IGZ1bmN0aW9uIChhLCB1cmwsIHRpdGxlKSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgd2luZG93LmV4dGVybmFsLkFkZEZhdm9yaXRlKHVybCwgdGl0bGUpO1xyXG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgIHdpbmRvdy5zaWRlYmFyLmFkZFBhbmVsKHRpdGxlLCB1cmwsIFwiXCIpO1xyXG4gICAgICAgICAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIG9wZXJhID09IFwib2JqZWN0XCIpIHtcclxuICAgICAgICAgICAgICAgICAgICBhLnRpdGxlID0gdGl0bGU7XHJcbiAgICAgICAgICAgICAgICAgICAgYS51cmwgPSB1cmw7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGFsZXJ0KFwi0J3QsNC20LzQuNGC0LUgQ3RybC1EINGH0YLQvtCx0Ysg0LTQvtCx0LDQstC40YLRjCDRgdGC0YDQsNC90LjRhtGDINCyINC30LDQutC70LDQtNC60LhcIik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfTtcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgIHRoaXMuY3JlYXRlQm9va21hcmtzTGluayA9IGZ1bmN0aW9uIChlbCkge1xyXG4gICAgICAgIHZhciBlbCA9ICQoZWwpO1xyXG4gICAgICAgIHZhciBwYXJlbnQgPSBlbC5jbG9zZXN0KFwiLmd0LXZpZXctY2FyZHMtaW5uZXJcIik7XHJcbiAgICAgICAgcGFyZW50ID0gJChwYXJlbnQpO1xyXG4gICAgICAgIGlmICghcGFyZW50LmF0dHIoXCJkYXRhLWhyZWZcIikpXHJcbiAgICAgICAgICAgIHBhcmVudC5hdHRyKFwiZGF0YS1ocmVmXCIsIHdpbmRvdy5sb2NhdGlvbi5ocmVmKTtcclxuICAgICAgICBpZiAoIXBhcmVudC5hdHRyKFwiZGF0YS1ib29rbWFya1wiKSkgcGFyZW50LmF0dHIoXCJkYXRhLWJvb2ttYXJrXCIsIFwiR29Ub1RyaXBcIik7XHJcbiAgICAgICAgZWwuYXR0cihcImhyZWZcIiwgcGFyZW50LmF0dHIoXCJkYXRhLWhyZWZcIikpO1xyXG4gICAgICAgIGVsLmF0dHIoXCJyZWxcIiwgXCJzaWRlYmFyXCIpO1xyXG4gICAgICAgIGVsLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICBzZWxmLmFkZEJvb2ttYXJrKFxyXG4gICAgICAgICAgICAgICAgZWwsXHJcbiAgICAgICAgICAgICAgICBwYXJlbnQuYXR0cihcImRhdGEtaHJlZlwiKSxcclxuICAgICAgICAgICAgICAgIHBhcmVudC5hdHRyKFwiZGF0YS1ib29rbWFya1wiKVxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICBpZiAoJChcIipcIikuaXMoXCIuZ3Qtdmlldy1jYXJkcy1pY29ucy1ib29rbWFya3NcIikpIHtcclxuICAgICAgICBzZWxmLmNyZWF0ZUJvb2ttYXJrc0xpbmsoKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgXHJcbiAgICBpZiAoJChcIipcIikuaXMoXCIuZ3Qtdmlldy1jYXJkcy1pY29ucy1pdGVtXCIpKSB7XHJcbiAgICAgICAgc2VsZi5jcmVhdGVJY29uc0l0ZW1zQ2xpY2soKTtcclxuICAgIH1cclxuICAgIC8vINC/0YDQvtCy0LXRgNC60LAg0L3QsCDQvdCw0LvQuNGH0LjQtSAtINC+0LHRgdGD0LTQuNGC0Ywg0YEg0LHQtdC60L7QvCDQv9C+0LLQtdC00LXQs9GC0LVcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgICQoJyNndC1lbnRlci1mb3JtLWZhY2Vib29rJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHNlbGYuc29jaWFsRW50ZXIoJ2ZhY2Vib29rJylcclxuICAgIH0pO1xyXG4gICAgJCgnI2d0LWVudGVyLWZvcm0tdHdpdHRlcicpLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBzZWxmLnNvY2lhbEVudGVyKCd0d2l0dGVyJylcclxuICAgIH0pO1xyXG4gICAgJCgnI2d0LWVudGVyLWZvcm0tZ29vZ2xlJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHNlbGYuc29jaWFsRW50ZXIoJ2dvb2dsZScpXHJcbiAgICB9KTtcclxuICAgIFxyXG4gICAgJCgnI2d0LXJlZy1mb3JtLWZhY2Vib29rJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHNlbGYuc29jaWFsUmVnaXN0cmF0aW9uKCdmYWNlYm9vaycpXHJcbiAgICB9KTtcclxuICAgICQoJyNndC1yZWctZm9ybS10d2l0dGVyJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHNlbGYuc29jaWFsUmVnaXN0cmF0aW9uKCd0d2l0dGVyJylcclxuICAgIH0pO1xyXG4gICAgJCgnI2d0LXJlZy1mb3JtLWdvb2dsZScpLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBzZWxmLnNvY2lhbFJlZ2lzdHJhdGlvbignZ29vZ2xlJylcclxuICAgIH0pO1xyXG4gICAgXHJcbiAgICB0aGlzLnNvY2lhbFJlZ2lzdHJhdGlvbiA9IGZ1bmN0aW9uICh0b2tlbikge1xyXG4gICAgXHJcbiAgICAgICAgYWxlcnQoXCLQoNC10LPQuNGB0YLRgNCw0YbQuNGPINGH0LXRgNC10LcgXCIgKyB0b2tlbilcclxuICAgIFxyXG4gICAgfTtcclxuICAgIHRoaXMuc29jaWFsRW50ZXIgPSBmdW5jdGlvbiAodG9rZW4pIHtcclxuICAgIFxyXG4gICAgICAgIGFsZXJ0KFwi0JLRhdC+0LQg0YfQtdGA0LXQtyBcIiArIHRva2VuKVxyXG4gICAgXHJcbiAgICB9O1xyXG4gICB0aGlzLmN1dE5ld3MgPSBmdW5jdGlvbiAoZWwpIHtcclxuICAgICAgIHZhciBtYXhIZWlnaHQgPSBlbC5oZWlnaHQoKSxcclxuICAgICAgICAgICBsaW5rcyA9IGVsLmZpbmQoJ2EnKTtcclxuICAgXHJcbiAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxpbmtzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgaWYgKCQobGlua3NbaV0pLm91dGVySGVpZ2h0KHRydWUpIDwgbWF4SGVpZ2h0KSB7XHJcbiAgICAgICAgICAgICAgICQobGlua3NbaV0pLmFkZENsYXNzKCdndC1yZWFkeScpO1xyXG4gICAgICAgICAgICAgICBtYXhIZWlnaHQgLT0gJChsaW5rc1tpXSkub3V0ZXJIZWlnaHQodHJ1ZSk7XHJcbiAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgdmFyIGN1dHRpbmdMZW5ndGggPSBNYXRoLmZsb29yKCgkKGxpbmtzW2ldKS50ZXh0KCkubGVuZ3RoIC0gMzApICogbWF4SGVpZ2h0IC8gJChsaW5rc1tpXSkuaGVpZ2h0KCkpO1xyXG4gICAgICAgICAgICAgICB2YXIgY3V0dG5pbmcgPSAkKGxpbmtzW2ldKS50ZXh0KCkuc3Vic3RyaW5nKDAsIGN1dHRpbmdMZW5ndGggLSA1KTtcclxuICAgICAgICAgICAgICAgJChsaW5rc1tpXSkudGV4dChjdXR0bmluZyArICcuLi4nKTtcclxuICAgICAgICAgICAgICAgJChsaW5rc1tpXSkuYWRkQ2xhc3MoJ2d0LXJlYWR5Jyk7XHJcbiAgICAgICAgICAgfVxyXG4gICAgICAgfVxyXG4gICB9O1xyXG4gICBcclxuICAgXHJcbiAgIHRoaXMuY3V0UmVhZE1vcmVTbGlkZXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICB2YXIgY3V0dGluZ3MgPSAkKFwiLmd0LXJlYWQtbW9yZS1zbGlkZXItdGV4dC1pbm5lclwiKTtcclxuICAgICAgIGN1dHRpbmdzLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgIHNlbGYuY3V0dGluZygkKHRoaXMpLCAxNjApO1xyXG4gICAgICAgfSk7XHJcbiAgIH07XHJcbiAgIFxyXG4gICB0aGlzLmN1dHRpbmcgPSBmdW5jdGlvbiAoZWwsIG51bSkge1xyXG4gICAgICAgdmFyIG5ld3NUZXh0ID0gZWwudGV4dCgpO1xyXG4gICAgICAgaWYgKG5ld3NUZXh0Lmxlbmd0aCA+IG51bSkge1xyXG4gICAgICAgICAgIG5ld3NUZXh0ID0gbmV3c1RleHQuc2xpY2UoMCwgbnVtKSArIFwiLi4uXCI7XHJcbiAgICAgICAgICAgZWwudGV4dChuZXdzVGV4dCk7XHJcbiAgICAgICB9XHJcbiAgIH07XHJcbiAgIFxyXG4gICBpZiAoJChcImRpdlwiKS5pcyhcIi5ndC1uZXdzLWN1dFwiKSkge1xyXG4gICAgICAgJChcIi5ndC1uZXdzLWN1dFwiKS5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICBzZWxmLmN1dE5ld3MoJCh0aGlzKSk7XHJcbiAgICAgICB9KVxyXG4gICB9XHJcbiAgIFxyXG4gICBpZiAoJChcInBcIikuaXMoXCIuZ3QtcmVhZC1tb3JlLXNsaWRlci10ZXh0LWlubmVyXCIpKSB7XHJcbiAgICAgICBzZWxmLmN1dFJlYWRNb3JlU2xpZGVyKCk7XHJcbiAgIH1cclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuXHJcbiAgICBkb2MucmVhZHkoZnVuY3Rpb24gKCkge1xyXG4gICAgXHJcbiAgICAgICAgc2VsZi5mb290ZXJIZWlnaHQoKTsvL19mb290ZXJfaGVpZ2h0LmpzXHJcbiAgICAgICAgc2VsZi5kZXNrVG9wTWVudVNjcm9sbCgpOy8vX2Rlc2N0b3BfaGVhZGVyX2Z1bmMuanNcclxuICAgIFxyXG4gICAgXHJcbiAgICB9KTtcclxuICAgIGRvY1dpbmRvdy5zY3JvbGwoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHNlbGYudXBQYWdlQnV0dG9uKCk7Ly9fdXBfYnV0dG9uLmpzXHJcbiAgICBcclxuICAgIFxyXG4gICAgICAgIGlmICgkKFwiLmd0LWhlYWRlci1tZW51XCIpLmlzKFwiOnZpc2libGVcIikpIHtcclxuICAgICAgICAgICAgc2VsZi5kZXNrVG9wTWVudVNjcm9sbCgpOy8vX2Rlc2N0b3BfaGVhZGVyX2Z1bmMuanNcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICB9KTtcclxuICAgIGRvY1dpbmRvdy5yZXNpemUoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHNlbGYuZGVza1RvcE1lbnVTY3JvbGwoKTtcclxuICAgICAgICBzZWxmLmZvb3RlckhlaWdodCgpO1xyXG4gICAgXHJcbiAgICAgICAgaWYgKGd0SGVhZGVyLmhhc0NsYXNzKFwiZ3Qtb3BlblwiKSkgc2VsZi5tb2JpbGVNZW51Q2xvc2UoKTtcclxuICAgIFxyXG4gICAgICAgIGlmICgkKFwiZGl2XCIpLmlzKFwiLmd0LWltZy1ob2xkZXItYWJzXCIpKSB7XHJcbiAgICAgICAgICAgICQoXCIuZ3QtaW1nLWhvbGRlci1hYnNcIikuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAkKHRoaXMpLnJlbW92ZUNsYXNzKFwiZ3Qtd2lkdGhcIik7XHJcbiAgICAgICAgICAgICAgICAkKHRoaXMpLnJlbW92ZUNsYXNzKFwiZ3QtaGVpZ2h0XCIpO1xyXG4gICAgICAgICAgICAgICAgc2VsZi5pbWdIb2xkZXJGdW5jKCQodGhpcykpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuICAgICQod2luZG93KS5vbignbG9hZCcsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAoJChcImRpdlwiKS5pcyhcIi5ndC1pbWctaG9sZGVyLWFic1wiKSkge1xyXG4gICAgICAgICAgICAkKFwiLmd0LWltZy1ob2xkZXItYWJzXCIpLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgc2VsZi5pbWdIb2xkZXJGdW5jKCQodGhpcykpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICBib2R5Lm9uKCdjbGljaycsIGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGV2ZW50LnRhcmdldCk7XHJcbiAgICBcclxuICAgIH0pO1xyXG5cclxufTtcclxuXHJcbnZhciBnb1RvVHJpcCA9IG5ldyBHb1RvVHJpcCgpOyJdfQ==
