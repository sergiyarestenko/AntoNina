GoToTrip=function(){function t(){b||(b=setTimeout(function(){b=null,e.fixArticleScrollTablePosition(),k&&e.showArtidleShadow()}))}var e=this,i=$(document.body),s=$(document),o=$(window),n={top:!1,left:!1},a=$("#gt-is-360"),r=($("#gt-is-480"),$("#gt-is-667")),c=$("#gt-is-768"),l=$("#gt-is-1024"),d=($("#gt-is-1231"),$("header")),g=$("footer"),u=$("#gt-wrapper"),f=$("#gt-up"),h=$("#gt-mobile-menu-switch"),v=$(".gt-enter"),p=$("#gt-header-enter-wrapper"),m=$("#gt-header-enter"),C=$("#gt-header-enter-chose"),w=$("#gt-header-enter-close");if($("html").niceScroll({cursorborder:"1px solid #6d6d6d",mousescrollstep:"60",bouncescroll:!0,cursorcolor:"#6d6d6d"}),this.fixBody=function(){n.top||n.left||(n.top=s.scrollTop(),n.left=i.offset().left,i.css({position:"fixed",left:n.left+"px",top:-1*n.top+"px"}))},this.unfixBody=function(){i.css({position:"",left:"",top:""}),s.scrollTop(n.top),n.top=!1,n.left=!1},this.footerHeight=function(){g.outerHeight()>o.height()-50?(g.css("position","static"),u.css("margin-bottom",""),f.css("position","static")):(g.css("position",""),f.css("position",""),u.css("margin-bottom",g.outerHeight()+"px"))},this.deskTopMenuScroll=function(){o.scrollTop()>d.outerHeight()?d.addClass("gt-header-scrolled"):d.removeClass("gt-header-scrolled")},this.mobileMenuClose=function(){e.unfixBody(),h.removeClass("gt-open"),d.removeClass("gt-open")},this.mobileMenuOpen=function(){e.fixBody(),d.addClass("gt-open"),h.addClass("gt-open")},h.on("click",function(){$(this).hasClass("gt-open")?e.mobileMenuClose():e.mobileMenuOpen()}),this.openEnterForm=function(){p.addClass("gt-open"),setTimeout(function(){$("#gt-header-registered").addClass("gt-open"),m.addClass("gt-open"),w.addClass("gt-open")})},this.closeEnterForm=function(){w.removeClass("gt-open"),m.removeClass("gt-open"),$("#gt-header-registered").removeClass("gt-open"),e.closeRestorePass(),setTimeout(function(){p.removeClass("gt-open")},750)},this.changeEnterRegistration=function(t){m.hasClass($(t.target).attr("class"))||m.removeClass("gt-chosen-enter").removeClass("gt-chosen-registration").addClass($(t.target).attr("class"))},this.openRestorePass=function(){$("#gt-enter-pass-restore-wrapper").addClass("gt-open")},this.closeRestorePass=function(){$("#gt-enter-pass-restore-wrapper").removeClass("gt-open")},v.each(function(){$(this).on("click",e.openEnterForm)}),w.on("click",e.closeEnterForm),C.on("click",function(t){e.changeEnterRegistration(t)}),$("#gt-enter-form-restore-pass").on("click",e.openRestorePass),$("#gt-enter-pass-restore-submit").on("click",e.closeRestorePass),this.setBackground=function(){$(".gt-img-holder").each(function(){if($(this).attr("data-bg")){var t=$(this).attr("data-bg");r.is(":visible")?$(this).css("background-image",'url("./img/backgrounds/phone/'+t+'")'):l.is(":visible")?$(this).css("background-image",'url("./img/backgrounds/tablet/'+t+'")'):$(this).css("background-image",'url("./img/backgrounds/desktop/'+t+'")')}})},this.imgHolderFunc=function(t){$(t).removeClass("gt-width"),$(t).removeClass("gt-height"),$(t).removeClass("gt-visible");var e=t.outerHeight()/t.outerWidth(),i=t.find("img");i.outerHeight()/i.outerWidth()>e?$(t).addClass("gt-width"):$(t).addClass("gt-height"),$(t).addClass("gt-visible")},$("div").is(".gt-img-holder")&&e.setBackground(),this.createSlider=function(t,i){function s(){if(S>w){var e="";M&&(e='<div class="gt-slider-arrow-num"><i class="gt-slider-num-curr"></i><i>из</i><i class="gt-slider-num-max"></i></div>'),t.find(".gt-slider-arrow-holder").html('<span class = "gt-slider-arrow left"></span>'+e+'<span class = "gt-slider-arrow right"></span>'),t.find(".left").on("click",function(){l(!1)}),t.find(".right").on("click",function(){l(!0)}),M&&u(),u()}b=!0}function n(e){var i=e||t;i.find(".left").off(),i.find(".right").off(),i.find(".gt-slider-arrow-holder").html(""),b=!1}function l(i,s){var o,n;if(s||0===s?y=s:i?y++:y--,P&&(y>S-w&&(y=0),y<0&&(y=S-w),g()),E&&(y>S-w&&(o=x.children().first().clone(),n=x.children().first(),t.hasClass("gt-view-cards-slider")&&(e.destroyViewCardListeners(n),e.createViewCardListeners(o)),x.css("left",-(y-2)*C+"px"),x.append(o),n.remove(),y--),y<0?(o=x.children().last(),n=x.children().last(),t.hasClass("gt-view-cards-slider")&&(e.destroyViewCardListeners(n),e.createViewCardListeners(o)),x.css("left",-(y+2)*C+"px"),x.prepend(o.clone()),n.remove(),y++,d()):d()),M&&u(),V){var a=t.find(".gt-slider-nav span");a.removeClass("gt-active"),$(a[x.find(".gt-open").attr("data-count")]).addClass("gt-active")}}function d(){x.children().removeClass("gt-open"),x.animate({left:-y*C},H),x.children().eq(y).addClass("gt-open")}function g(t){var e=t||y;$(k).removeClass("gt-open"),$(k[e]).addClass("gt-open")}function u(){t.find(".gt-slider-num-curr").text(+x.find(".gt-open").attr("data-count")+1),t.find(".gt-slider-num-max").text(S)}function f(){var e=0,i=0;t.on("touchstart",function(t){var i=t.originalEvent;e=Math.abs(i.touches[0].pageX),console.log("touchstart")}),t.on("touchend",function(t){var s=t.originalEvent;i=Math.abs(s.changedTouches[0].pageX),Math.abs(e-i)>50&&l(e>i?!0:!1)})}function h(e){(e||t).off()}function v(){t.attr("data-count")&&(w=parseInt(t.attr("data-count")),$(c).is(":visible")&&(w=3),$(r).is(":visible")&&(w=2),$(a).is(":visible")&&(w=1))}function p(){C=t.outerWidth()/w,t.find(".gt-slider-container").outerWidth((S+1)*C),k.each(function(){$(this).outerWidth(C),$(this).attr("data-count",$(this).index())})}var m,C,w=1,b=!1,k=t.find(".gt-slider-inner"),x=t.find(".gt-slider-container"),S=k.length,y=i||0,T=t.hasClass("gt-slider-has-arrow"),V=t.hasClass("gt-slider-has-dots"),M=t.hasClass("gt-slider-num"),E=t.hasClass("gt-slider-tram"),H=t.attr("data-duration")||300,P=t.hasClass("gt-slider-fade"),R=t.hasClass("gt-slider-has-clone");P&&g(i),E&&(v(),p(),d()),T&&(t.append('<div class="gt-slider-arrow-holder"></div>'),s()),V&&function(){t.append('<div class="gt-slider-nav"></div>');for(var e=t.find(".gt-slider-nav"),i="",s=0;s<S;s++)i+="<span data-num = "+s+"></span>";e.html(i),e.find("span").first().addClass("gt-active"),t.find(".gt-slider-nav span").on("click",function(){l(!0,+$(this).attr("data-num"))})}(),S>w&&f(),R&&t.find(".gt-slider-inner-cover").each(function(){$(this).on("click",function(){!function(i){if(!$("div").is("#gt-clone")){e.fixBody();var s=$("#gt-body-wrapper");s.append('<div id = "gt-clone-wrapper"   class="container"><div id = "gt-clone" class="gt-slider gt-slider-clone gt-slider-fade gt-slider-num  gt-slider-has-arrow"><div id = "gt-clone-close" class = "gt-slider-clone-close"></div><div  id = "gt-clone-container" class="gt-slider-container"></div></div></div>'),s.show();var o=$("#gt-clone");t.find(".gt-slider-inner").clone(!0).each(function(){$(this).outerWidth(""),$("#gt-clone-container").append($(this))}),e.createSlider(o,i),$("#gt-clone-close").on("click",function(){!function(t){n(t),h(t),$("#gt-clone-close").off(),$("#gt-clone-wrapper").remove(),$("#gt-body-wrapper").hide(),e.unfixBody()}(o)})}}($(this).parent().index())})}),o.resize(function(){m||(m=setTimeout(function(){m=null,h(),E&&(v(),p(),y>S-w&&(y=S-w),S<=w&&(y=0),d()),b&&(n(),s()),S>w&&f()},132))})},$("div").is(".gt-slider")&&$(".gt-slider").each(function(){e.createSlider($(this))}),this.manageGtActiveUlMenu=function(t){"li"!=t.tagName&&(t=$(t).closest("li")),$(t).closest($("ul")).find("li").removeClass("gt-active"),$(t).addClass("gt-active")},$("*").is(".gt-button-menu")&&$(".gt-button-menu").on("click",function(t){t.preventDefault(),e.manageGtActiveUlMenu(t.target)}),$("*").is(".gt-menu-news_items")&&$(".gt-menu-news_items").on("click",function(t){t.preventDefault(),e.manageGtActiveUlMenu(t.target)}),this.setPlayers=function(){var t=document.createElement("script");t.type="text/javascript",t.src="https://www.youtube.com/player_api";var i=$("script")[$("script").length-1];i.parentNode.insertBefore(t,i);$(".gt-video").each(function(){var t=$(this);t.find(".gt-video-switch").on("click",function(){$(this).addClass("gt-open"),t.addClass("gt-open"),e.addYouTube(t)})})},this.addYouTube=function(t){function e(){s.mute(),s.playVideo(),t.addClass("gt-video-on"),t.find(".gt-video-uncover").on("click",i),t.find(".gt-video-pause").on("click",function(){s.pauseVideo()}),t.find(".gt-video-play").on("click",function(){s.playVideo()})}function i(){console.log("playFullScreen");var e=t.find("iframe")[0],i=e.requestFullScreen||e.mozRequestFullScreen||e.webkitRequestFullScreen;i&&i.bind(e)()}var s,o="gt-video-"+t.index();t.find(".gt-video-switch").hide("slow"),t.find(".gt-video-inner").attr("id",o).addClass("gt-video-foreground"),s=new YT.Player(o,{width:600,height:400,videoId:t.attr("data-youtube"),playerVars:{playlist:t.attr("data-youtube"),color:"white",loop:1,autoplay:1},events:{onReady:e}})},$("div").is(".gt-video")&&e.setPlayers(),this.fixArticleScrollTablePosition=function(){var t=$(".gt-article-table-wrapper"),e=t.parent(),i=t.outerHeight(),o=e.position().top,n=o+e.outerHeight(),a=t.outerWidth(),r=s.scrollTop();o+90>r&&t.hasClass("gt-fixed")&&(t.removeClass("gt-fixed"),t.css({left:"",width:""})),o<r+90&&(t.hasClass("gt-fixed")||(t.css({left:t.offset().left+"px",width:a}),t.addClass("gt-fixed")),r-n+i+90>=0?t.addClass("gt-fixed-bottom"):t.removeClass("gt-fixed-bottom"))},this.createArticteScrollTable=function(){if($("div").is(".gt-article")){var t="";$(".gt-article").each(function(){t+='<div class = "gt-article-scroll"><div class = "gt-article-scroll-shadow"></div><p>'+$(this).find("h2").text()+"</p></div>"}),$("#gt-article-scroll-table").html(t)}},this.showArtidleShadow=function(){$(".gt-article").each(function(){var t=$(this).position().top,e=$(this).outerHeight(),i=$(document).scrollTop(),s=0;(s=t>i?0:(i-t)/e)>1&&(s=1);var o=$(".gt-article-scroll")[$(this).index()];$(o).find(".gt-article-scroll-shadow").css("width",100*s+"%")})},$("div").is(".gt-article-table-wrapper")){var b,k=!1;$("div").is(".gt-article-scroll-table")&&(k=!0,e.createArticteScrollTable(),e.showArtidleShadow()),o.scroll(t),o.resize(t)}this.setCurrTime=function(){e.currTime();setInterval(e.currTime,3e4)},this.currTime=function(){$(".gt-curr-time").each(function(){var t=new Date;$(this).attr("data-gmt")&&t.setUTCHours(+$(this).attr("data-gmt"));var e=t.getHours(),i=t.getMinutes(),s=t.getDay(),o=t.getDate(),n=t.getMonth(),a=t.getFullYear();e<10&&(e="0"+e),i<10&&(i="0"+i),s=["Воскресенье","Понедельник","Вторник","Среда","Четверг","Пятница","Суббота"][s],n=["января","февраля","марта","апреля","мая","июня","июля","августа","сентября","октября","ноября","декабря"][n],$(".gt-curr-time-time")&&$(".gt-curr-time-time").html(e+":"+i),$(".gt-curr-time-date")&&$(".gt-curr-time-date").html(s+", "+o+" "+n+" "+a)})},$("div").is(".gt-curr-time")&&e.setCurrTime(),$("div").is(".gt-inner-scroll")&&$(".gt-inner-scroll").each(function(){$(this).niceScroll({cursoropacitymin:"1",cursoropacitymax:"1",cursorwidth:"2px",cursorborder:"none",mousescrollstep:"60",background:"#CECECE",railoffset:"left",zindex:"auto",cursorcolor:"#CECECE"})}),this.tabSlider=function(){$(".gt-tabs").each(function(){var t=$(this);t.find(".gt-tabs-button").each(function(){$(this).on("click",function(){e.tabSliderAction(t,$(this).index())})}),e.tabSliderAction(t,0,!0)})},this.tabSliderAction=function(t,e,i){var s=$(t.find(".gt-tabs-button")),o=$(t.find(".gt-tabs-main"));t.find(".gt-inner-scroll-tab").each(function(){$("#"+$(this).attr("data-scroll")).hide()}),s.removeClass("active"),o.removeClass("active"),$(s[e]).addClass("active"),$(o[e]).addClass("active"),(0!=$("#"+$(o[e]).find(".gt-inner-scroll-tab").attr("data-scroll")).find(".gt-scroll-cursor").height()||i)&&$("#"+$(o[e]).find(".gt-inner-scroll-tab").attr("data-scroll")).show()},$("div").is(".gt-tabs")&&e.tabSlider(),this.createViewCardListeners=function(t){t.find(".gt-view-cards-icons-visit").on("click",function(i){e.closeShareViewCard(t),i.stopPropagation(),e.clickVisitViewCard(t)}),t.find(".gt-view-cards-icons-pin-plus").on("click",function(i){e.closeShareViewCard(t),i.stopPropagation(),e.clickSeenViewCard(t)}),t.find(".gt-view-cards-icons-bookmarks").on("click",function(i){e.closeShareViewCard(t),i.stopPropagation(),e.clickMarkViewCard(t)}),t.find(".gt-view-cards-icons-share").on("click",function(i){event.stopPropagation(),e.clickShareViewCard(t)}),t.find(".gt-view-cards-icons-share").find("a").on("click",function(t,i){t.preventDefault(),e.viewCardSocial(i)}),t.on("click  mouseleave",function(){$(t).find(".gt-view-cards-icons-share").parent().removeClass("gt-active"),e.closeShareViewCard(t)})},this.destroyViewCardListeners=function(t){t.find(".gt-view-cards-icons-visit").off(),t.find(".gt-view-cards-icons-pin-plus").off(),t.find(".gt-view-cards-icons-bookmarks").off(),t.find(".gt-view-cards-icons-share").off(),t.find(".gt-view-cards-icons-share").find("a").off(),t.off()},this.viewCardSocial=function(t){console.log("click social"),e.closeShareViewCard(t)},this.openShareViewCard=function(t){$(t).addClass("gt-active")},this.closeShareViewCard=function(t){$(t).removeClass("gt-active")},this.clickShareViewCard=function(t){var i=t.find(".gt-view-cards-icons-share").parent();i.hasClass("gt-active")?(i.removeClass("gt-active"),e.closeShareViewCard(t)):(i.addClass("gt-active"),e.openShareViewCard(t))},this.clickVisitViewCard=function(t){if(!t.hasClass("gt-active")){var e=t.find(".gt-view-cards-icons-visit").parent();e.hasClass("gt-active")?(e.removeClass("gt-active"),console.log("click not visited now")):(e.addClass("gt-active"),console.log("click visit"))}},this.clickSeenViewCard=function(t){if(!t.hasClass("gt-active")){var e=t.find(".gt-view-cards-icons-pin-plus").parent();e.hasClass("gt-active")?(e.removeClass("gt-active"),console.log("click not seen now")):(e.addClass("gt-active"),console.log("click seen"))}},this.clickMarkViewCard=function(t){if(!t.hasClass("gt-active")){var e=t.find(".gt-view-cards-icons-bookmarks").parent();e.hasClass("gt-active")?(e.removeClass("gt-active"),console.log("click delete bookmark")):(e.addClass("gt-active"),console.log("click add bookmark"))}},$("*").is(".gt-view-cards-inner")&&$(".gt-view-cards-inner").each(function(){e.createViewCardListeners($(this))}),$("#gt-enter-form-facebook").on("click",function(){e.socialEnter("facebook")}),$("#gt-enter-form-twitter").on("click",function(){e.socialEnter("twitter")}),$("#gt-enter-form-google").on("click",function(){e.socialEnter("google")}),$("#gt-reg-form-facebook").on("click",function(){e.socialRegistration("facebook")}),$("#gt-reg-form-twitter").on("click",function(){e.socialRegistration("twitter")}),$("#gt-reg-form-google").on("click",function(){e.socialRegistration("google")}),this.socialRegistration=function(t){alert("Регистрация через "+t)},this.socialEnter=function(t){alert("Вход через "+t)},this.cutNews=function(t){var e,i,s,o=t.parent(),n=o.height(),a=t.find("p");o.children().each(function(){n-=$(this).outerHeight(!0)}),n=n+t.height()-20,a.each(function(){(e=$(this).outerHeight(!0))<n?n-=e:n?(i=Math.floor($(this).text().length*n/e),s=$(this).text().substring(0,i-5),$(this).text(s+"..."),n=0):$(this).css("display","none")})},$("div").is(".js-news-cut")&&($(".js-news-cut").each(function(){e.cutNews($(this))}),o.resize(function(){$(".js-news-cut").each(function(){e.cutNews($(this))})})),this.cutReadMoreSlider=function(){$(".gt-read-more-slider-text-inner").each(function(){e.cutting($(this),160)})},this.cutting=function(t,e){var i=t.text();i.length>e&&(i=i.slice(0,e)+"...",t.text(i))},$("p").is(".gt-read-more-slider-text-inner")&&e.cutReadMoreSlider(),s.ready(function(){e.footerHeight(),e.deskTopMenuScroll()}),this.pageUp=function(){return $("html, body").animate({scrollTop:0},800),!1},this.upPageButton=function(){$(document).scrollTop()>30?f.addClass("gt-visible"):f.removeClass("gt-visible")},f.on("click",e.pageUp),o.scroll(function(){e.upPageButton(),$(".gt-header-menu").is(":visible")&&e.deskTopMenuScroll()}),o.resize(function(){e.deskTopMenuScroll(),e.footerHeight(),d.hasClass("gt-open")&&e.mobileMenuClose(),$("div").is(".gt-img-holder-abs")&&$(".gt-img-holder-abs").each(function(){$(this).removeClass("gt-width"),$(this).removeClass("gt-height"),e.imgHolderFunc($(this))})}),$(window).on("load",function(){$("div").is(".gt-img-holder-abs")&&$(".gt-img-holder-abs").each(function(){e.imgHolderFunc($(this))})}),i.on("click",function(t){}),$("*").is(".gt-menu-news")&&$(".gt-menu-news").find("a").on("click",function(t){t.preventDefault(),$(".gt-menu-news").find("li").removeClass("gt-active"),$(this).parent().addClass("gt-active"),console.log("temp func")})},$(document).ready(function(){new GoToTrip});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJHb1RvVHJpcCIsInNjcm9sbFRocm90dGxlciIsInNjcm9sbFRpbWVvdXQiLCJzZXRUaW1lb3V0Iiwic2VsZiIsImZpeEFydGljbGVTY3JvbGxUYWJsZVBvc2l0aW9uIiwic2hhZG93Iiwic2hvd0FydGlkbGVTaGFkb3ciLCJ0aGlzIiwiYm9keSIsIiQiLCJkb2N1bWVudCIsImRvYyIsImRvY1dpbmRvdyIsIndpbmRvdyIsImJvZHlQb3NpdGlvbiIsInRvcCIsImxlZnQiLCJ0b2tlbjM2MCIsInRva2VuNjY3IiwidG9rZW43NjgiLCJ0b2tlbjEwMjQiLCJndEhlYWRlciIsImd0Rm9vdGVyIiwiZ3RXcmFwcGVyIiwidXBCdXR0b24iLCJtb2JpbGVNZW51U3dpdGNoIiwiZW50ZXJCdXR0b24iLCJlbnRlcldyYXBwZXIiLCJlbnRlckZvcm0iLCJlbnRlckNob3NlIiwiZW50ZXJDbG9zZSIsIm5pY2VTY3JvbGwiLCJjdXJzb3Jib3JkZXIiLCJtb3VzZXNjcm9sbHN0ZXAiLCJib3VuY2VzY3JvbGwiLCJjdXJzb3Jjb2xvciIsImZpeEJvZHkiLCJzY3JvbGxUb3AiLCJvZmZzZXQiLCJjc3MiLCJwb3NpdGlvbiIsInVuZml4Qm9keSIsImZvb3RlckhlaWdodCIsIm91dGVySGVpZ2h0IiwiaGVpZ2h0IiwiZGVza1RvcE1lbnVTY3JvbGwiLCJhZGRDbGFzcyIsInJlbW92ZUNsYXNzIiwibW9iaWxlTWVudUNsb3NlIiwibW9iaWxlTWVudU9wZW4iLCJvbiIsImhhc0NsYXNzIiwib3BlbkVudGVyRm9ybSIsImNsb3NlRW50ZXJGb3JtIiwiY2xvc2VSZXN0b3JlUGFzcyIsImNoYW5nZUVudGVyUmVnaXN0cmF0aW9uIiwiZXZlbnQiLCJ0YXJnZXQiLCJhdHRyIiwib3BlblJlc3RvcmVQYXNzIiwiZWFjaCIsInNldEJhY2tncm91bmQiLCJwYXRoIiwiaXMiLCJpbWdIb2xkZXJGdW5jIiwiZWwiLCJob2xkZXJDb25zdCIsIm91dGVyV2lkdGgiLCJpbWciLCJmaW5kIiwiY3JlYXRlU2xpZGVyIiwiY3VyclNsaWRlciIsImNyZWF0ZUFycm93cyIsImlubmVyQ291bnQiLCJzY3JlZW5Db25zdCIsIm51bUlubmVyIiwibnVtUGFuZWwiLCJodG1sIiwib25lTW92ZUZ1bmN0aW9uIiwic2hvd051bSIsImFycm93c1JlYWR5IiwiZGVzdHJveUFycm93cyIsImNsb25lIiwib2ZmIiwiYnVsIiwibnVtIiwiZGVsZXRlZCIsImN1cnJQb3NpdGlvbiIsImZhZGUiLCJmYWRlU2xpZGVyTW92ZSIsInRyYW0iLCJjb250YWluZXIiLCJjaGlsZHJlbiIsImZpcnN0IiwiZGVzdHJveVZpZXdDYXJkTGlzdGVuZXJzIiwiY3JlYXRlVmlld0NhcmRMaXN0ZW5lcnMiLCJiYXNlV2lkdGgiLCJhcHBlbmQiLCJyZW1vdmUiLCJsYXN0IiwicHJlcGVuZCIsInRyYW1TbGlkZXJNb3ZlIiwiZG90cyIsImFsbERvdHMiLCJhbmltYXRlIiwidHJhbUFuaW1hdGlvbiIsImVxIiwiaW5kZXgiLCJpbm5lciIsInRleHQiLCJjcmVhdGVUb3VjaCIsImluaXRpYWxQb2ludCIsImZpbmFsUG9pbnQiLCJlIiwib3JpZ2luYWxFdmVudCIsIk1hdGgiLCJhYnMiLCJ0b3VjaGVzIiwicGFnZVgiLCJjb25zb2xlIiwibG9nIiwiY2hhbmdlZFRvdWNoZXMiLCJkZXN0cm95VG91Y2giLCJmaW5kU2NyZWVuQ29uc3QiLCJwYXJzZUludCIsInNldEJhc2VXaWR0aCIsInNsaWRlclRpbWVPdXQiLCJsZW5ndGgiLCJhcnJvdyIsImhhc0Nsb25lIiwibmF2Iiwic3BhbnMiLCJpIiwiY3JlYXRlRG90cyIsImNsaWNrUG9zaXRpb24iLCJib2R5V3JhcHBlciIsInNob3ciLCJjbG9uZVNsaWRlciIsImhpZGUiLCJkZXN0cm95Q2xvbmVTbGlkZXIiLCJjcmVhdGVDbG9uZVNsaWRlciIsInBhcmVudCIsInJlc2l6ZSIsIm1hbmFnZUd0QWN0aXZlVWxNZW51IiwidGFnTmFtZSIsImNsb3Nlc3QiLCJwcmV2ZW50RGVmYXVsdCIsInNldFBsYXllcnMiLCJ0YWciLCJjcmVhdGVFbGVtZW50IiwidHlwZSIsInNyYyIsImxhc3RTY3JpcHRUYWciLCJwYXJlbnROb2RlIiwiaW5zZXJ0QmVmb3JlIiwiY3VycmVudFBsYXllciIsImFkZFlvdVR1YmUiLCJpbml0aWFsaXplIiwicGxheWVyIiwibXV0ZSIsInBsYXlWaWRlbyIsInBsYXlGdWxsU2NyZWVuIiwicGF1c2VWaWRlbyIsImlmcmFtZSIsInJlcXVlc3RGdWxsU2NyZWVuIiwibW96UmVxdWVzdEZ1bGxTY3JlZW4iLCJ3ZWJraXRSZXF1ZXN0RnVsbFNjcmVlbiIsImJpbmQiLCJlbElkIiwiWVQiLCJQbGF5ZXIiLCJ3aWR0aCIsInZpZGVvSWQiLCJwbGF5ZXJWYXJzIiwicGxheWxpc3QiLCJjb2xvciIsImxvb3AiLCJhdXRvcGxheSIsImV2ZW50cyIsIm9uUmVhZHkiLCJ0YWJsZSIsInRhYmxlUGFyZW50IiwidGFibGVIZWlnaHQiLCJ0YWJsZVBhcmVudFRvcCIsInRhYmxlUGFyZW50Qm90dG9tIiwidGFibGVXaWR0aCIsIndpbmRvd1RvcCIsImNyZWF0ZUFydGljdGVTY3JvbGxUYWJsZSIsImVsSGVpZ2h0Iiwid2luZG93UG9zaXRpb24iLCJ4IiwiY3VyclNoYWRvdyIsInNjcm9sbCIsInNldEN1cnJUaW1lIiwiY3VyclRpbWUiLCJzZXRJbnRlcnZhbCIsImRhdGUiLCJEYXRlIiwic2V0VVRDSG91cnMiLCJob3VycyIsImdldEhvdXJzIiwibWludXRlcyIsImdldE1pbnV0ZXMiLCJ3ZWVrZGF5IiwiZ2V0RGF5IiwiZGF5IiwiZ2V0RGF0ZSIsIm1vbnRoIiwiZ2V0TW9udGgiLCJ5ZWFyIiwiZ2V0RnVsbFllYXIiLCJjdXJzb3JvcGFjaXR5bWluIiwiY3Vyc29yb3BhY2l0eW1heCIsImN1cnNvcndpZHRoIiwiYmFja2dyb3VuZCIsInJhaWxvZmZzZXQiLCJ6aW5kZXgiLCJ0YWJTbGlkZXIiLCJjdXJyVGFicyIsInRhYlNsaWRlckFjdGlvbiIsImluaXQiLCJidXR0b25zIiwibWFpbiIsImNsb3NlU2hhcmVWaWV3Q2FyZCIsInN0b3BQcm9wYWdhdGlvbiIsImNsaWNrVmlzaXRWaWV3Q2FyZCIsImNsaWNrU2VlblZpZXdDYXJkIiwiY2xpY2tNYXJrVmlld0NhcmQiLCJldmVudGciLCJjbGlja1NoYXJlVmlld0NhcmQiLCJ2aWV3Q2FyZFNvY2lhbCIsIm9wZW5TaGFyZVZpZXdDYXJkIiwiYnV0dG9uIiwic29jaWFsRW50ZXIiLCJzb2NpYWxSZWdpc3RyYXRpb24iLCJ0b2tlbiIsImFsZXJ0IiwiY3V0TmV3cyIsImN1cnJIZWlnaHQiLCJjdXR0aW5nTGVuZ2h0IiwibmV3VGV4dCIsIm1heEhlaWdodCIsImN1dHRpbmdFbCIsImZsb29yIiwic3Vic3RyaW5nIiwiY3V0UmVhZE1vcmVTbGlkZXIiLCJjdXR0aW5nIiwibmV3c1RleHQiLCJzbGljZSIsInJlYWR5IiwicGFnZVVwIiwidXBQYWdlQnV0dG9uIl0sIm1hcHBpbmdzIjoiQUFLQUEsU0FBVyxXQWd0QkgsU0FBU0MsSUFDQUMsSUFDREEsRUFBZ0JDLFdBQVcsV0FDdkJELEVBQWdCLEtBQ2hCRSxFQUFLQyxnQ0FDREMsR0FDQUYsRUFBS0csdUJBcHRCekIsSUFBSUgsRUFBT0ksS0FDUEMsRUFBT0MsRUFBRUMsU0FBU0YsTUFDbEJHLEVBQU1GLEVBQUVDLFVBQ1JFLEVBQVlILEVBQUVJLFFBQ2RDLEdBQ0lDLEtBQUssRUFDTEMsTUFBTSxHQUVWQyxFQUFXUixFQUFFLGNBRWJTLEdBRFdULEVBQUUsY0FDRkEsRUFBRSxlQUNiVSxFQUFXVixFQUFFLGNBQ2JXLEVBQVlYLEVBQUUsZUFFZFksR0FEWVosRUFBRSxlQUNIQSxFQUFFLFdBQ2JhLEVBQVdiLEVBQUUsVUFDYmMsRUFBWWQsRUFBRSxlQUNkZSxFQUFXZixFQUFFLFVBQ2JnQixFQUFtQmhCLEVBQUUsMEJBQ3JCaUIsRUFBY2pCLEVBQUUsYUFDaEJrQixFQUFlbEIsRUFBRSw0QkFDakJtQixFQUFZbkIsRUFBRSxvQkFDZG9CLEVBQWFwQixFQUFFLDBCQUNmcUIsRUFBYXJC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QVVvTCxPQUFPLFdBQ2I3TCxFQUFLd1AsZUFDRGxQLEVBQUUsbUJBQW1Cc0QsR0FBRyxhQUN4QjVELEVBQUswQyxzQkFHYmpDLEVBQVVrSSxPQUFPLFdBQ2IzSSxFQUFLMEMsb0JBQ0wxQyxFQUFLdUMsZUFFRHJCLEVBQVM4QixTQUFTLFlBQVloRCxFQUFLNkMsa0JBRW5DdkMsRUFBRSxPQUFPc0QsR0FBRyx1QkFDWnRELEVBQUUsc0JBQXNCbUQsS0FBSyxXQUN6Qm5ELEVBQUVGLE1BQU13QyxZQUFZLFlBQ3BCdEMsRUFBRUYsTUFBTXdDLFlBQVksYUFDcEI1QyxFQUFLNkQsY0FBY3ZELEVBQUVGLFdBSWpDRSxFQUFFSSxRQUFRcUMsR0FBRyxPQUFRLFdBQ2J6QyxFQUFFLE9BQU9zRCxHQUFHLHVCQUNadEQsRUFBRSxzQkFBc0JtRCxLQUFLLFdBQ3pCekQsRUFBSzZELGNBQWN2RCxFQUFFRixXQUtqQ0MsRUFBSzBDLEdBQUcsUUFBUyxTQUFVTSxNQU12Qi9DLEVBQUUsS0FBS3NELEdBQUcsa0JBQ1p0RCxFQUFFLGlCQUFpQjRELEtBQUssS0FBS25CLEdBQUcsUUFBUSxTQUFVTSxHQUU5Q0EsRUFBTTBGLGlCQUNOekksRUFBRSxpQkFBaUI0RCxLQUFLLE1BQU10QixZQUFZLGFBQzFDdEMsRUFBRUYsTUFBTXNJLFNBQVMvRixTQUFTLGFBQzFCeUUsUUFBUUMsSUFBSSxnQkFhdEIvRyxFQUFFQyxVQUFVK08sTUFFUixXQUNtQixJQUFJMVAiLCJmaWxlIjoiYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy/RhNGD0L3QutGG0LjRjywg0L7Qv9GA0LXQtNC10LvRj9GO0YnQsNGPINC30LDRgNC10LPQuNGB0YLQstC40YDQvtCy0LDQvdC90YvQuSDQv9C+0LvRjNC30L7QstCw0YLQtdC70Ywg0LjQu9C4INC90LXRglxyXG5cclxuLy8g0L/RgNC10LTRg9GB0LzQvtGC0YDQtdGC0Ywg0LLRi9GF0L7QtCDQuNC3INCw0LrQutCw0YPQvdGC0LBcclxuXHJcblxyXG5Hb1RvVHJpcCA9IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICB2YXIgc2VsZiA9IHRoaXMsXHJcbiAgICAgICAgYm9keSA9ICQoZG9jdW1lbnQuYm9keSksXHJcbiAgICAgICAgZG9jID0gJChkb2N1bWVudCksXHJcbiAgICAgICAgZG9jV2luZG93ID0gJCh3aW5kb3cpLFxyXG4gICAgICAgIGJvZHlQb3NpdGlvbiA9IHtcclxuICAgICAgICAgICAgdG9wOiBmYWxzZSxcclxuICAgICAgICAgICAgbGVmdDogZmFsc2VcclxuICAgICAgICB9LFxyXG4gICAgICAgIHRva2VuMzYwID0gJChcIiNndC1pcy0zNjBcIiksXHJcbiAgICAgICAgdG9rZW40ODAgPSAkKFwiI2d0LWlzLTQ4MFwiKSxcclxuICAgICAgICB0b2tlbjY2NyA9ICQoXCIjZ3QtaXMtNjY3XCIpLFxyXG4gICAgICAgIHRva2VuNzY4ID0gJChcIiNndC1pcy03NjhcIiksXHJcbiAgICAgICAgdG9rZW4xMDI0ID0gJChcIiNndC1pcy0xMDI0XCIpLFxyXG4gICAgICAgIHRva2VuMTIzMSA9ICQoXCIjZ3QtaXMtMTIzMVwiKSxcclxuICAgICAgICBndEhlYWRlciA9ICQoXCJoZWFkZXJcIiksXHJcbiAgICAgICAgZ3RGb290ZXIgPSAkKFwiZm9vdGVyXCIpLFxyXG4gICAgICAgIGd0V3JhcHBlciA9ICQoXCIjZ3Qtd3JhcHBlclwiKSxcclxuICAgICAgICB1cEJ1dHRvbiA9ICQoXCIjZ3QtdXBcIiksXHJcbiAgICAgICAgbW9iaWxlTWVudVN3aXRjaCA9ICQoXCIjZ3QtbW9iaWxlLW1lbnUtc3dpdGNoXCIpLFxyXG4gICAgICAgIGVudGVyQnV0dG9uID0gJCgnLmd0LWVudGVyJyksXHJcbiAgICAgICAgZW50ZXJXcmFwcGVyID0gJCgnI2d0LWhlYWRlci1lbnRlci13cmFwcGVyJyksXHJcbiAgICAgICAgZW50ZXJGb3JtID0gJCgnI2d0LWhlYWRlci1lbnRlcicpLFxyXG4gICAgICAgIGVudGVyQ2hvc2UgPSAkKCcjZ3QtaGVhZGVyLWVudGVyLWNob3NlJyksXHJcbiAgICAgICAgZW50ZXJDbG9zZSA9ICQoJyNndC1oZWFkZXItZW50ZXItY2xvc2UnKTtcclxuICAgICQoXCJodG1sXCIpLm5pY2VTY3JvbGwoe1xyXG4gICAgICAgIGN1cnNvcmJvcmRlcjogJzFweCBzb2xpZCAjNmQ2ZDZkJyxcclxuICAgICAgICBtb3VzZXNjcm9sbHN0ZXA6ICc2MCcsXHJcbiAgICAgICAgYm91bmNlc2Nyb2xsOiB0cnVlLFxyXG4gICAgICAgIGN1cnNvcmNvbG9yOiAnIzZkNmQ2ZCdcclxuICAgIH0pXHJcblxyXG5cclxuICAgIHRoaXMuZml4Qm9keSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAoYm9keVBvc2l0aW9uLnRvcCB8fCBib2R5UG9zaXRpb24ubGVmdCkgcmV0dXJuO1xyXG4gICAgICAgIGJvZHlQb3NpdGlvbi50b3AgPSBkb2Muc2Nyb2xsVG9wKCk7XHJcbiAgICAgICAgYm9keVBvc2l0aW9uLmxlZnQgPSBib2R5Lm9mZnNldCgpLmxlZnQ7XHJcbiAgICAgICAgYm9keS5jc3Moe1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogXCJmaXhlZFwiLFxyXG4gICAgICAgICAgICBsZWZ0OiBib2R5UG9zaXRpb24ubGVmdCArIFwicHhcIixcclxuICAgICAgICAgICAgdG9wOiAtMSAqIGJvZHlQb3NpdGlvbi50b3AgKyBcInB4XCJcclxuICAgICAgICB9KTtcclxuICAgIH07XHJcbiAgICBcclxuICAgIHRoaXMudW5maXhCb2R5ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGJvZHkuY3NzKHtcclxuICAgICAgICAgICAgcG9zaXRpb246IFwiXCIsXHJcbiAgICAgICAgICAgIGxlZnQ6IFwiXCIsXHJcbiAgICAgICAgICAgIHRvcDogXCJcIlxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGRvYy5zY3JvbGxUb3AoYm9keVBvc2l0aW9uLnRvcCk7XHJcbiAgICAgICAgYm9keVBvc2l0aW9uLnRvcCA9IGZhbHNlO1xyXG4gICAgICAgIGJvZHlQb3NpdGlvbi5sZWZ0ID0gZmFsc2U7XHJcbiAgICB9O1xyXG5cclxuICAgIHRoaXMuZm9vdGVySGVpZ2h0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBmb290ZXJIZWlnaHQgPSBndEZvb3Rlci5vdXRlckhlaWdodCgpO1xyXG4gICAgICAgIGlmIChmb290ZXJIZWlnaHQgPiBkb2NXaW5kb3cuaGVpZ2h0KCkgLSA1MCkge1xyXG4gICAgICAgICAgICBndEZvb3Rlci5jc3MoXCJwb3NpdGlvblwiLCBcInN0YXRpY1wiKTtcclxuICAgICAgICAgICAgZ3RXcmFwcGVyLmNzcyhcIm1hcmdpbi1ib3R0b21cIiwgXCJcIik7XHJcbiAgICAgICAgICAgIHVwQnV0dG9uLmNzcyhcInBvc2l0aW9uXCIsIFwic3RhdGljXCIpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGd0Rm9vdGVyLmNzcyhcInBvc2l0aW9uXCIsIFwiXCIpO1xyXG4gICAgICAgICAgICB1cEJ1dHRvbi5jc3MoXCJwb3NpdGlvblwiLCBcIlwiKTtcclxuICAgICAgICAgICAgZ3RXcmFwcGVyLmNzcyhcIm1hcmdpbi1ib3R0b21cIiwgZ3RGb290ZXIub3V0ZXJIZWlnaHQoKSArIFwicHhcIik7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIHRoaXMuZGVza1RvcE1lbnVTY3JvbGwgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKGRvY1dpbmRvdy5zY3JvbGxUb3AoKSA+IGd0SGVhZGVyLm91dGVySGVpZ2h0KCkpIHtcclxuICAgICAgICAgICAgZ3RIZWFkZXIuYWRkQ2xhc3MoXCJndC1oZWFkZXItc2Nyb2xsZWRcIik7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgZ3RIZWFkZXIucmVtb3ZlQ2xhc3MoXCJndC1oZWFkZXItc2Nyb2xsZWRcIik7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBcclxuICAgIHRoaXMubW9iaWxlTWVudUNsb3NlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHNlbGYudW5maXhCb2R5KCk7XHJcbiAgICAgICAgbW9iaWxlTWVudVN3aXRjaC5yZW1vdmVDbGFzcyhcImd0LW9wZW5cIik7XHJcbiAgICAgICAgZ3RIZWFkZXIucmVtb3ZlQ2xhc3MoXCJndC1vcGVuXCIpO1xyXG4gICAgfTtcclxuICAgIFxyXG4gICAgdGhpcy5tb2JpbGVNZW51T3BlbiA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBzZWxmLmZpeEJvZHkoKTtcclxuICAgICAgICBndEhlYWRlci5hZGRDbGFzcyhcImd0LW9wZW5cIik7XHJcbiAgICAgICAgbW9iaWxlTWVudVN3aXRjaC5hZGRDbGFzcyhcImd0LW9wZW5cIik7XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgbW9iaWxlTWVudVN3aXRjaC5vbihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAoJCh0aGlzKS5oYXNDbGFzcyhcImd0LW9wZW5cIikpIHtcclxuICAgICAgICAgICAgc2VsZi5tb2JpbGVNZW51Q2xvc2UoKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBzZWxmLm1vYmlsZU1lbnVPcGVuKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICB0aGlzLm9wZW5FbnRlckZvcm0gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgZW50ZXJXcmFwcGVyLmFkZENsYXNzKCdndC1vcGVuJyk7XHJcbiAgICAgICAgc2V0VGltZW91dChzaG93KTtcclxuICAgICAgICBmdW5jdGlvbiBzaG93KCkge1xyXG4gICAgICAgICAgICAkKCcjZ3QtaGVhZGVyLXJlZ2lzdGVyZWQnKS5hZGRDbGFzcygnZ3Qtb3BlbicpO1xyXG4gICAgICAgICAgICBlbnRlckZvcm0uYWRkQ2xhc3MoJ2d0LW9wZW4nKTtcclxuICAgICAgICAgICAgZW50ZXJDbG9zZS5hZGRDbGFzcygnZ3Qtb3BlbicpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICBcclxuICAgIHRoaXMuY2xvc2VFbnRlckZvcm0gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgZW50ZXJDbG9zZS5yZW1vdmVDbGFzcygnZ3Qtb3BlbicpO1xyXG4gICAgICAgIGVudGVyRm9ybS5yZW1vdmVDbGFzcygnZ3Qtb3BlbicpO1xyXG4gICAgICAgICQoJyNndC1oZWFkZXItcmVnaXN0ZXJlZCcpLnJlbW92ZUNsYXNzKCdndC1vcGVuJyk7XHJcbiAgICAgICAgc2VsZi5jbG9zZVJlc3RvcmVQYXNzKCk7XHJcbiAgICAgICAgc2V0VGltZW91dChoaWRlLCA3NTApO1xyXG4gICAgICAgIGZ1bmN0aW9uIGhpZGUoKSB7XHJcbiAgICAgICAgICAgIGVudGVyV3JhcHBlci5yZW1vdmVDbGFzcygnZ3Qtb3BlbicpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICBcclxuICAgIHRoaXMuY2hhbmdlRW50ZXJSZWdpc3RyYXRpb24gPSBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICBpZiAoZW50ZXJGb3JtLmhhc0NsYXNzKCQoZXZlbnQudGFyZ2V0KS5hdHRyKFwiY2xhc3NcIikpKVxyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgZW50ZXJGb3JtLnJlbW92ZUNsYXNzKFwiZ3QtY2hvc2VuLWVudGVyXCIpLnJlbW92ZUNsYXNzKFwiZ3QtY2hvc2VuLXJlZ2lzdHJhdGlvblwiKS5hZGRDbGFzcygkKGV2ZW50LnRhcmdldCkuYXR0cihcImNsYXNzXCIpKTtcclxuICAgIH07XHJcbiAgICBcclxuICAgIFxyXG4gICAgdGhpcy5vcGVuUmVzdG9yZVBhc3MgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgJCgnI2d0LWVudGVyLXBhc3MtcmVzdG9yZS13cmFwcGVyJykuYWRkQ2xhc3MoJ2d0LW9wZW4nKVxyXG4gICAgXHJcbiAgICB9O1xyXG4gICAgdGhpcy5jbG9zZVJlc3RvcmVQYXNzID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQoJyNndC1lbnRlci1wYXNzLXJlc3RvcmUtd3JhcHBlcicpLnJlbW92ZUNsYXNzKCdndC1vcGVuJylcclxuICAgIH07XHJcbiAgICBcclxuICAgIFxyXG4gICAgZW50ZXJCdXR0b24uZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgJCh0aGlzKS5vbignY2xpY2snLCBzZWxmLm9wZW5FbnRlckZvcm0pXHJcbiAgICB9KTtcclxuICAgIFxyXG4gICAgZW50ZXJDbG9zZS5vbignY2xpY2snLCBzZWxmLmNsb3NlRW50ZXJGb3JtKTtcclxuICAgIFxyXG4gICAgZW50ZXJDaG9zZS5vbignY2xpY2snLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICBzZWxmLmNoYW5nZUVudGVyUmVnaXN0cmF0aW9uKGV2ZW50KTtcclxuICAgIH0pO1xyXG4gICAgXHJcbiAgICAkKCcjZ3QtZW50ZXItZm9ybS1yZXN0b3JlLXBhc3MnKS5vbignY2xpY2snLHNlbGYub3BlblJlc3RvcmVQYXNzKTtcclxuICAgICQoJyNndC1lbnRlci1wYXNzLXJlc3RvcmUtc3VibWl0Jykub24oJ2NsaWNrJyxzZWxmLmNsb3NlUmVzdG9yZVBhc3MpO1xyXG5cclxuICAgIHRoaXMuc2V0QmFja2dyb3VuZCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgaW1nSG9sZGVycyA9ICQoXCIuZ3QtaW1nLWhvbGRlclwiKTtcclxuICAgICAgICBpbWdIb2xkZXJzLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAoISQodGhpcykuYXR0cihcImRhdGEtYmdcIikpIHJldHVybjtcclxuICAgICAgICAgICAgdmFyIHBhdGggPSAkKHRoaXMpLmF0dHIoXCJkYXRhLWJnXCIpO1xyXG4gICAgICAgICAgICBpZiAodG9rZW42NjcuaXMoXCI6dmlzaWJsZVwiKSkge1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5jc3MoXHJcbiAgICAgICAgICAgICAgICAgICAgXCJiYWNrZ3JvdW5kLWltYWdlXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgJ3VybChcIi4vaW1nL2JhY2tncm91bmRzL3Bob25lLycgKyBwYXRoICsgJ1wiKSdcclxuICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHRva2VuMTAyNC5pcyhcIjp2aXNpYmxlXCIpKSB7XHJcbiAgICAgICAgICAgICAgICAkKHRoaXMpLmNzcyhcclxuICAgICAgICAgICAgICAgICAgICBcImJhY2tncm91bmQtaW1hZ2VcIixcclxuICAgICAgICAgICAgICAgICAgICAndXJsKFwiLi9pbWcvYmFja2dyb3VuZHMvdGFibGV0LycgKyBwYXRoICsgJ1wiKSdcclxuICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJCh0aGlzKS5jc3MoXHJcbiAgICAgICAgICAgICAgICBcImJhY2tncm91bmQtaW1hZ2VcIixcclxuICAgICAgICAgICAgICAgICd1cmwoXCIuL2ltZy9iYWNrZ3JvdW5kcy9kZXNrdG9wLycgKyBwYXRoICsgJ1wiKSdcclxuICAgICAgICAgICAgKTtcclxuICAgICAgICB9KTtcclxuICAgIH07XHJcbiAgICBcclxuICAgIFxyXG4gICAgdGhpcy5pbWdIb2xkZXJGdW5jID0gZnVuY3Rpb24gKGVsKSB7XHJcbiAgICAgICAgJChlbCkucmVtb3ZlQ2xhc3MoXCJndC13aWR0aFwiKTtcclxuICAgICAgICAkKGVsKS5yZW1vdmVDbGFzcyhcImd0LWhlaWdodFwiKTtcclxuICAgICAgICAkKGVsKS5yZW1vdmVDbGFzcyhcImd0LXZpc2libGVcIik7XHJcbiAgICAgICAgdmFyIGhvbGRlckNvbnN0ID0gZWwub3V0ZXJIZWlnaHQoKSAvIGVsLm91dGVyV2lkdGgoKSxcclxuICAgICAgICAgICAgaW1nID0gZWwuZmluZCgnaW1nJyksXHJcbiAgICAgICAgICAgIGltZ0NvbnN0ID0gaW1nLm91dGVySGVpZ2h0KCkgLyBpbWcub3V0ZXJXaWR0aCgpO1xyXG4gICAgXHJcbiAgICAgICAgaWYgKGltZ0NvbnN0ID4gaG9sZGVyQ29uc3QpIHtcclxuICAgICAgICAgICAgJChlbCkuYWRkQ2xhc3MoXCJndC13aWR0aFwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICQoZWwpLmFkZENsYXNzKFwiZ3QtaGVpZ2h0XCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAkKGVsKS5hZGRDbGFzcyhcImd0LXZpc2libGVcIik7XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICBcclxuICAgIGlmICgkKFwiZGl2XCIpLmlzKFwiLmd0LWltZy1ob2xkZXJcIikpIHtcclxuICAgICAgICBzZWxmLnNldEJhY2tncm91bmQoKTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLmNyZWF0ZVNsaWRlciA9IGZ1bmN0aW9uIChjdXJyU2xpZGVyLCBwb3NpdGlvbikge1xyXG4gICAgICAgIHZhciBzbGlkZXJUaW1lT3V0LFxyXG4gICAgICAgICAgICBzY3JlZW5Db25zdCA9IDEsXHJcbiAgICAgICAgICAgIGJhc2VXaWR0aCxcclxuICAgICAgICAgICAgYXJyb3dzUmVhZHkgPSBmYWxzZSxcclxuICAgICAgICAgICAgaW5uZXIgPSBjdXJyU2xpZGVyLmZpbmQoXCIuZ3Qtc2xpZGVyLWlubmVyXCIpLFxyXG4gICAgICAgICAgICBjb250YWluZXIgPSBjdXJyU2xpZGVyLmZpbmQoXCIuZ3Qtc2xpZGVyLWNvbnRhaW5lclwiKSxcclxuICAgICAgICAgICAgaW5uZXJDb3VudCA9IGlubmVyLmxlbmd0aCxcclxuICAgICAgICAgICAgY3VyclBvc2l0aW9uID0gcG9zaXRpb24gfHwgMCxcclxuICAgICAgICAgICAgYXJyb3cgPSBjdXJyU2xpZGVyLmhhc0NsYXNzKFwiZ3Qtc2xpZGVyLWhhcy1hcnJvd1wiKSxcclxuICAgICAgICAgICAgZG90cyA9IGN1cnJTbGlkZXIuaGFzQ2xhc3MoXCJndC1zbGlkZXItaGFzLWRvdHNcIiksXHJcbiAgICAgICAgICAgIG51bVBhbmVsID0gY3VyclNsaWRlci5oYXNDbGFzcyhcImd0LXNsaWRlci1udW1cIiksXHJcbiAgICAgICAgICAgIHRyYW0gPSBjdXJyU2xpZGVyLmhhc0NsYXNzKFwiZ3Qtc2xpZGVyLXRyYW1cIiksXHJcbiAgICAgICAgICAgIHRyYW1BbmltYXRpb24gPSBjdXJyU2xpZGVyLmF0dHIoJ2RhdGEtZHVyYXRpb24nKSB8fCAzMDAsXHJcbiAgICAgICAgICAgIGZhZGUgPSBjdXJyU2xpZGVyLmhhc0NsYXNzKFwiZ3Qtc2xpZGVyLWZhZGVcIiksXHJcbiAgICAgICAgICAgIGhhc0Nsb25lID0gY3VyclNsaWRlci5oYXNDbGFzcyhcImd0LXNsaWRlci1oYXMtY2xvbmVcIik7XHJcbiAgICAgICAgaWYgKGZhZGUpIHtcclxuICAgICAgICAgICAgZmFkZVNsaWRlck1vdmUocG9zaXRpb24pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodHJhbSkge1xyXG4gICAgICAgICAgICBmaW5kU2NyZWVuQ29uc3QoKTtcclxuICAgICAgICAgICAgc2V0QmFzZVdpZHRoKCk7XHJcbiAgICAgICAgICAgIHRyYW1TbGlkZXJNb3ZlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChhcnJvdykge1xyXG4gICAgICAgICAgICBjdXJyU2xpZGVyLmFwcGVuZCgnPGRpdiBjbGFzcz1cImd0LXNsaWRlci1hcnJvdy1ob2xkZXJcIj48L2Rpdj4nKTtcclxuICAgICAgICAgICAgY3JlYXRlQXJyb3dzKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChkb3RzKSB7XHJcbiAgICAgICAgICAgIGNyZWF0ZURvdHMoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGlubmVyQ291bnQgPiBzY3JlZW5Db25zdCkge1xyXG4gICAgICAgICAgICBjcmVhdGVUb3VjaCgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoaGFzQ2xvbmUpIHtcclxuICAgICAgICAgICAgY3JlYXRlQ2xvbmVMaXN0ZW5lcnMoKTtcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICBmdW5jdGlvbiBjcmVhdGVDbG9uZUxpc3RlbmVycygpIHtcclxuICAgICAgICAgICAgY3VyclNsaWRlci5maW5kKCcuZ3Qtc2xpZGVyLWlubmVyLWNvdmVyJykuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAkKHRoaXMpLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICBjcmVhdGVDbG9uZVNsaWRlcigkKHRoaXMpLnBhcmVudCgpLmluZGV4KCkpXHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgIGZ1bmN0aW9uIGNyZWF0ZUFycm93cygpIHtcclxuICAgICAgICAgICAgaWYgKGlubmVyQ291bnQgPiBzY3JlZW5Db25zdCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIG51bUlubmVyID0gJyc7XHJcbiAgICAgICAgICAgICAgICBpZiAobnVtUGFuZWwpIHtcclxuICAgICAgICAgICAgICAgICAgICBudW1Jbm5lciA9ICc8ZGl2IGNsYXNzPVwiZ3Qtc2xpZGVyLWFycm93LW51bVwiPjxpIGNsYXNzPVwiZ3Qtc2xpZGVyLW51bS1jdXJyXCI+PC9pPjxpPtC40Lc8L2k+PGkgY2xhc3M9XCJndC1zbGlkZXItbnVtLW1heFwiPjwvaT48L2Rpdj4nXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBjdXJyU2xpZGVyLmZpbmQoXCIuZ3Qtc2xpZGVyLWFycm93LWhvbGRlclwiKS5odG1sKFxyXG4gICAgICAgICAgICAgICAgICAgICc8c3BhbiBjbGFzcyA9IFwiZ3Qtc2xpZGVyLWFycm93IGxlZnRcIj4nICtcclxuICAgICAgICAgICAgICAgICAgICBcIjwvc3Bhbj5cIiArIG51bUlubmVyICtcclxuICAgICAgICAgICAgICAgICAgICAnPHNwYW4gY2xhc3MgPSBcImd0LXNsaWRlci1hcnJvdyByaWdodFwiPicgK1xyXG4gICAgICAgICAgICAgICAgICAgIFwiPC9zcGFuPlwiXHJcbiAgICAgICAgICAgICAgICApO1xyXG4gICAgICAgICAgICAgICAgY3JlYXRlQXJyb3dzTGlzdGVuZXJzKCk7XHJcbiAgICAgICAgICAgICAgICBzaG93TnVtKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYXJyb3dzUmVhZHkgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgIGZ1bmN0aW9uIGRlc3Ryb3lBcnJvd3MoY2xvbmUpIHtcclxuICAgICAgICAgICAgdmFyIGVsID0gY2xvbmUgfHwgY3VyclNsaWRlcjtcclxuICAgICAgICAgICAgZWwuZmluZChcIi5sZWZ0XCIpLm9mZigpO1xyXG4gICAgICAgICAgICBlbC5maW5kKFwiLnJpZ2h0XCIpLm9mZigpO1xyXG4gICAgICAgICAgICBlbC5maW5kKFwiLmd0LXNsaWRlci1hcnJvdy1ob2xkZXJcIikuaHRtbChcIlwiKTtcclxuICAgICAgICAgICAgYXJyb3dzUmVhZHkgPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICBmdW5jdGlvbiBjcmVhdGVBcnJvd3NMaXN0ZW5lcnMoKSB7XHJcbiAgICAgICAgICAgIGN1cnJTbGlkZXIuZmluZChcIi5sZWZ0XCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgb25lTW92ZUZ1bmN0aW9uKGZhbHNlKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGN1cnJTbGlkZXIuZmluZChcIi5yaWdodFwiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIG9uZU1vdmVGdW5jdGlvbih0cnVlKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGlmIChudW1QYW5lbCkgc2hvd051bSgpXHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgZnVuY3Rpb24gY3JlYXRlRG90cygpIHtcclxuICAgICAgICAgICAgY3VyclNsaWRlci5hcHBlbmQoJzxkaXYgY2xhc3M9XCJndC1zbGlkZXItbmF2XCI+PC9kaXY+Jyk7XHJcbiAgICAgICAgICAgIHZhciBuYXYgPSBjdXJyU2xpZGVyLmZpbmQoXCIuZ3Qtc2xpZGVyLW5hdlwiKSxcclxuICAgICAgICAgICAgICAgIHNwYW5zID0gXCJcIjtcclxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBpbm5lckNvdW50OyBpKyspIHtcclxuICAgICAgICAgICAgICAgIHNwYW5zICs9IFwiPHNwYW4gZGF0YS1udW0gPSBcIiArIGkgKyBcIj48L3NwYW4+XCI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgbmF2Lmh0bWwoc3BhbnMpO1xyXG4gICAgICAgICAgICBuYXYuZmluZChcInNwYW5cIikuZmlyc3QoKS5hZGRDbGFzcyhcImd0LWFjdGl2ZVwiKTtcclxuICAgICAgICAgICAgY3VyclNsaWRlci5maW5kKFwiLmd0LXNsaWRlci1uYXYgc3BhblwiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIG9uZU1vdmVGdW5jdGlvbih0cnVlLCArJCh0aGlzKS5hdHRyKFwiZGF0YS1udW1cIikpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICBmdW5jdGlvbiBvbmVNb3ZlRnVuY3Rpb24oYnVsLCBudW0pIHtcclxuICAgICAgICAgICAgdmFyIGNsb25lLGRlbGV0ZWQ7XHJcbiAgICAgICAgICAgIGlmIChudW0gfHwgbnVtID09PSAwKSB7XHJcbiAgICAgICAgICAgICAgICBjdXJyUG9zaXRpb24gPSBudW07XHJcbiAgICAgICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgICAgICBlbHNlIGlmIChidWwpIHtcclxuICAgICAgICAgICAgICAgIGN1cnJQb3NpdGlvbisrO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgY3VyclBvc2l0aW9uLS07XHJcbiAgICAgICAgICAgIH1cclxuICAgIFxyXG4gICAgXHJcbiAgICAgICAgICAgIGlmIChmYWRlKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoY3VyclBvc2l0aW9uID4gaW5uZXJDb3VudCAtIHNjcmVlbkNvbnN0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY3VyclBvc2l0aW9uID0gMDtcclxuICAgIFxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKGN1cnJQb3NpdGlvbiA8IDApIHtcclxuICAgICAgICAgICAgICAgICAgICBjdXJyUG9zaXRpb24gPSBpbm5lckNvdW50IC0gc2NyZWVuQ29uc3Q7XHJcbiAgICBcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGZhZGVTbGlkZXJNb3ZlKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgICAgICBpZiAodHJhbSkge1xyXG4gICAgICAgICAgICAgICAgaWYgKGN1cnJQb3NpdGlvbiA+IGlubmVyQ291bnQgLSBzY3JlZW5Db25zdCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNsb25lID0gIGNvbnRhaW5lci5jaGlsZHJlbigpLmZpcnN0KCkuY2xvbmUoKTtcclxuICAgICAgICAgICAgICAgICAgICBkZWxldGVkID0gY29udGFpbmVyLmNoaWxkcmVuKCkuZmlyc3QoKTtcclxuICAgICAgICAgICAgICAgICAgICBpZihjdXJyU2xpZGVyLmhhc0NsYXNzKCdndC12aWV3LWNhcmRzLXNsaWRlcicpKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5kZXN0cm95Vmlld0NhcmRMaXN0ZW5lcnMoZGVsZXRlZCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuY3JlYXRlVmlld0NhcmRMaXN0ZW5lcnMoY2xvbmUpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBjb250YWluZXIuY3NzKCdsZWZ0JywgKC0oY3VyclBvc2l0aW9uIC0gMikgKiBiYXNlV2lkdGgpICsgJ3B4Jyk7XHJcbiAgICAgICAgICAgICAgICAgICAgY29udGFpbmVyLmFwcGVuZChjbG9uZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgZGVsZXRlZC5yZW1vdmUoKTtcclxuICAgICAgICAgICAgICAgICAgICBjdXJyUG9zaXRpb24tLTtcclxuICAgIFxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKGN1cnJQb3NpdGlvbiA8IDApIHtcclxuICAgICAgICAgICAgICAgICAgICBjbG9uZSA9IGNvbnRhaW5lci5jaGlsZHJlbigpLmxhc3QoKTtcclxuICAgICAgICAgICAgICAgICAgICBkZWxldGVkID0gY29udGFpbmVyLmNoaWxkcmVuKCkubGFzdCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmKGN1cnJTbGlkZXIuaGFzQ2xhc3MoJ2d0LXZpZXctY2FyZHMtc2xpZGVyJykpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLmRlc3Ryb3lWaWV3Q2FyZExpc3RlbmVycyhkZWxldGVkKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5jcmVhdGVWaWV3Q2FyZExpc3RlbmVycyhjbG9uZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRhaW5lci5jc3MoJ2xlZnQnLCAoLShjdXJyUG9zaXRpb24gKyAyKSAqIGJhc2VXaWR0aCkgKyAncHgnKTtcclxuICAgICAgICAgICAgICAgICAgICBjb250YWluZXIucHJlcGVuZChjbG9uZS5jbG9uZSgpKTtcclxuICAgICAgICAgICAgICAgICAgICBkZWxldGVkLnJlbW92ZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGN1cnJQb3NpdGlvbisrO1xyXG4gICAgICAgICAgICAgICAgICAgIHRyYW1TbGlkZXJNb3ZlKCk7XHJcbiAgICBcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdHJhbVNsaWRlck1vdmUoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICAgICAgaWYgKG51bVBhbmVsKSBzaG93TnVtKCk7XHJcbiAgICAgICAgICAgIGlmIChkb3RzKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgYWxsRG90cyA9IGN1cnJTbGlkZXIuZmluZChcIi5ndC1zbGlkZXItbmF2IHNwYW5cIik7XHJcbiAgICAgICAgICAgICAgICBhbGxEb3RzLnJlbW92ZUNsYXNzKFwiZ3QtYWN0aXZlXCIpO1xyXG4gICAgICAgICAgICAgICAgJChhbGxEb3RzW2NvbnRhaW5lci5maW5kKCcuZ3Qtb3BlbicpLmF0dHIoJ2RhdGEtY291bnQnKV0pLmFkZENsYXNzKFwiZ3QtYWN0aXZlXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgICAgIGZ1bmN0aW9uIHRyYW1TbGlkZXJNb3ZlKCkge1xyXG4gICAgICAgICAgICBjb250YWluZXIuY2hpbGRyZW4oKS5yZW1vdmVDbGFzcygnZ3Qtb3BlbicpO1xyXG4gICAgICAgICAgICBjb250YWluZXIuYW5pbWF0ZSh7bGVmdDogLWN1cnJQb3NpdGlvbiAqIGJhc2VXaWR0aH0sIHRyYW1BbmltYXRpb24pO1xyXG4gICAgICAgICAgICBjb250YWluZXIuY2hpbGRyZW4oKS5lcShjdXJyUG9zaXRpb24pLmFkZENsYXNzKCdndC1vcGVuJyk7XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICBcclxuICAgICAgICBmdW5jdGlvbiBmYWRlU2xpZGVyTW92ZShwb3NpdGlvbikge1xyXG4gICAgICAgICAgICB2YXIgaW5kZXggPSBwb3NpdGlvbiB8fCBjdXJyUG9zaXRpb247XHJcbiAgICAgICAgICAgICQoaW5uZXIpLnJlbW92ZUNsYXNzKCdndC1vcGVuJyk7XHJcbiAgICAgICAgICAgICQoaW5uZXJbaW5kZXhdKS5hZGRDbGFzcygnZ3Qtb3BlbicpO1xyXG4gICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgIGZ1bmN0aW9uIHNob3dOdW0oKSB7XHJcbiAgICAgICAgICAgIGN1cnJTbGlkZXIuZmluZCgnLmd0LXNsaWRlci1udW0tY3VycicpLnRleHQoKyhjb250YWluZXIuZmluZCgnLmd0LW9wZW4nKS5hdHRyKCdkYXRhLWNvdW50JykpICsgMSk7XHJcbiAgICAgICAgICAgIGN1cnJTbGlkZXIuZmluZCgnLmd0LXNsaWRlci1udW0tbWF4JykudGV4dChpbm5lckNvdW50KTtcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICBmdW5jdGlvbiBjcmVhdGVUb3VjaCgpIHtcclxuICAgICAgICAgICAgdmFyIGluaXRpYWxQb2ludCA9IDAsXHJcbiAgICAgICAgICAgICAgICBmaW5hbFBvaW50ID0gMDtcclxuICAgICAgICAgICAgY3VyclNsaWRlci5vbihcInRvdWNoc3RhcnRcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgZSA9IGV2ZW50Lm9yaWdpbmFsRXZlbnQ7XHJcbiAgICAgICAgICAgICAgICBpbml0aWFsUG9pbnQgPSBNYXRoLmFicyhlLnRvdWNoZXNbMF0ucGFnZVgpO1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJ0b3VjaHN0YXJ0XCIpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgY3VyclNsaWRlci5vbihcInRvdWNoZW5kXCIsIGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGUgPSBldmVudC5vcmlnaW5hbEV2ZW50O1xyXG4gICAgICAgICAgICAgICAgZmluYWxQb2ludCA9IE1hdGguYWJzKGUuY2hhbmdlZFRvdWNoZXNbMF0ucGFnZVgpO1xyXG4gICAgICAgICAgICAgICAgaWYgKE1hdGguYWJzKGluaXRpYWxQb2ludCAtIGZpbmFsUG9pbnQpID4gNTApIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoaW5pdGlhbFBvaW50ID4gZmluYWxQb2ludCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBvbmVNb3ZlRnVuY3Rpb24odHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgb25lTW92ZUZ1bmN0aW9uKGZhbHNlKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgIGZ1bmN0aW9uIGRlc3Ryb3lUb3VjaChjbG9uZSkge1xyXG4gICAgICAgICAgICB2YXIgZWwgPSBjbG9uZSB8fCBjdXJyU2xpZGVyO1xyXG4gICAgICAgICAgICBlbC5vZmYoKTtcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICBmdW5jdGlvbiBmaW5kU2NyZWVuQ29uc3QoKSB7XHJcbiAgICAgICAgICAgIGlmIChjdXJyU2xpZGVyLmF0dHIoXCJkYXRhLWNvdW50XCIpKSB7XHJcbiAgICAgICAgICAgICAgICBzY3JlZW5Db25zdCA9IHBhcnNlSW50KGN1cnJTbGlkZXIuYXR0cihcImRhdGEtY291bnRcIikpO1xyXG4gICAgICAgICAgICAgICAgaWYgKCQodG9rZW43NjgpLmlzKFwiOnZpc2libGVcIikpIHNjcmVlbkNvbnN0ID0gMztcclxuICAgICAgICAgICAgICAgIGlmICgkKHRva2VuNjY3KS5pcyhcIjp2aXNpYmxlXCIpKSBzY3JlZW5Db25zdCA9IDI7XHJcbiAgICAgICAgICAgICAgICBpZiAoJCh0b2tlbjM2MCkuaXMoXCI6dmlzaWJsZVwiKSkgc2NyZWVuQ29uc3QgPSAxO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgZnVuY3Rpb24gc2V0QmFzZVdpZHRoKCkge1xyXG4gICAgICAgICAgICBiYXNlV2lkdGggPSBjdXJyU2xpZGVyLm91dGVyV2lkdGgoKSAvIHNjcmVlbkNvbnN0O1xyXG4gICAgICAgICAgICBjdXJyU2xpZGVyLmZpbmQoXCIuZ3Qtc2xpZGVyLWNvbnRhaW5lclwiKS5vdXRlcldpZHRoKChpbm5lckNvdW50ICsgMSkgKiBiYXNlV2lkdGgpO1xyXG4gICAgICAgICAgICBpbm5lci5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICQodGhpcykub3V0ZXJXaWR0aChiYXNlV2lkdGgpO1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5hdHRyKCdkYXRhLWNvdW50JywgJCh0aGlzKS5pbmRleCgpKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgZnVuY3Rpb24gY3JlYXRlQ2xvbmVTbGlkZXIoY2xpY2tQb3NpdGlvbikge1xyXG4gICAgICAgICAgICBpZiAoJChcImRpdlwiKS5pcyhcIiNndC1jbG9uZVwiKSkgcmV0dXJuO1xyXG4gICAgICAgICAgICBzZWxmLmZpeEJvZHkoKTtcclxuICAgICAgICAgICAgdmFyIGJvZHlXcmFwcGVyID0gJChcIiNndC1ib2R5LXdyYXBwZXJcIik7XHJcbiAgICAgICAgICAgIGJvZHlXcmFwcGVyLmFwcGVuZCgnPGRpdiBpZCA9IFwiZ3QtY2xvbmUtd3JhcHBlclwiICAgY2xhc3M9XCJjb250YWluZXJcIj48ZGl2IGlkID0gXCJndC1jbG9uZVwiIGNsYXNzPVwiZ3Qtc2xpZGVyIGd0LXNsaWRlci1jbG9uZSBndC1zbGlkZXItZmFkZSBndC1zbGlkZXItbnVtICBndC1zbGlkZXItaGFzLWFycm93XCI+PGRpdiBpZCA9IFwiZ3QtY2xvbmUtY2xvc2VcIiBjbGFzcyA9IFwiZ3Qtc2xpZGVyLWNsb25lLWNsb3NlXCI+PC9kaXY+PGRpdiAgaWQgPSBcImd0LWNsb25lLWNvbnRhaW5lclwiIGNsYXNzPVwiZ3Qtc2xpZGVyLWNvbnRhaW5lclwiPjwvZGl2PjwvZGl2PjwvZGl2PicpO1xyXG4gICAgICAgICAgICBib2R5V3JhcHBlci5zaG93KCk7XHJcbiAgICAgICAgICAgIHZhciBjbG9uZVNsaWRlciA9ICQoJyNndC1jbG9uZScpLFxyXG4gICAgICAgICAgICAgICAgaW5uZXJzID0gY3VyclNsaWRlci5maW5kKFwiLmd0LXNsaWRlci1pbm5lclwiKS5jbG9uZSh0cnVlKTtcclxuICAgICAgICAgICAgaW5uZXJzLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5vdXRlcldpZHRoKCcnKTtcclxuICAgICAgICAgICAgICAgICQoJyNndC1jbG9uZS1jb250YWluZXInKS5hcHBlbmQoJCh0aGlzKSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBzZWxmLmNyZWF0ZVNsaWRlcihjbG9uZVNsaWRlciwgY2xpY2tQb3NpdGlvbik7XHJcbiAgICAgICAgICAgICQoXCIjZ3QtY2xvbmUtY2xvc2VcIikub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBkZXN0cm95Q2xvbmVTbGlkZXIoY2xvbmVTbGlkZXIpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICBmdW5jdGlvbiBkZXN0cm95Q2xvbmVTbGlkZXIoY2xvbmVTbGlkZXIpIHtcclxuICAgICAgICAgICAgZGVzdHJveUFycm93cyhjbG9uZVNsaWRlcik7XHJcbiAgICAgICAgICAgIGRlc3Ryb3lUb3VjaChjbG9uZVNsaWRlcik7XHJcbiAgICAgICAgICAgICQoXCIjZ3QtY2xvbmUtY2xvc2VcIikub2ZmKCk7XHJcbiAgICAgICAgICAgICQoXCIjZ3QtY2xvbmUtd3JhcHBlclwiKS5yZW1vdmUoKTtcclxuICAgICAgICAgICAgJChcIiNndC1ib2R5LXdyYXBwZXJcIikuaGlkZSgpO1xyXG4gICAgICAgICAgICBzZWxmLnVuZml4Qm9keSgpO1xyXG4gICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgIC8vLy8vLy8vLy9yZXNpemVTbGlkZXJcclxuICAgICAgICBmdW5jdGlvbiByZXNpemVTbGlkZXIoKSB7XHJcbiAgICAgICAgICAgIGlmICghc2xpZGVyVGltZU91dCkge1xyXG4gICAgICAgICAgICAgICAgc2xpZGVyVGltZU91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHNsaWRlclRpbWVPdXQgPSBudWxsO1xyXG4gICAgICAgICAgICAgICAgICAgIHJlc2l6ZUZ1bmMoKTtcclxuICAgICAgICAgICAgICAgIH0sIDEzMik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICBkb2NXaW5kb3cucmVzaXplKHJlc2l6ZVNsaWRlcik7XHJcbiAgICBcclxuICAgICAgICBmdW5jdGlvbiByZXNpemVGdW5jKCkge1xyXG4gICAgICAgICAgICBkZXN0cm95VG91Y2goKTtcclxuICAgICAgICAgICAgaWYgKHRyYW0pIHtcclxuICAgICAgICAgICAgICAgIGZpbmRTY3JlZW5Db25zdCgpO1xyXG4gICAgICAgICAgICAgICAgc2V0QmFzZVdpZHRoKCk7XHJcbiAgICAgICAgICAgICAgICByZXNpemVNb3ZlKCk7XHJcbiAgICAgICAgICAgICAgICB0cmFtU2xpZGVyTW92ZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChhcnJvd3NSZWFkeSkge1xyXG4gICAgICAgICAgICAgICAgZGVzdHJveUFycm93cygpO1xyXG4gICAgICAgICAgICAgICAgY3JlYXRlQXJyb3dzKClcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoaW5uZXJDb3VudCA+IHNjcmVlbkNvbnN0KSB7XHJcbiAgICAgICAgICAgICAgICBjcmVhdGVUb3VjaCgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICBcclxuICAgIFxyXG4gICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgIGZ1bmN0aW9uIHJlc2l6ZU1vdmUoKSB7XHJcbiAgICAgICAgICAgIGlmIChjdXJyUG9zaXRpb24gPiBpbm5lckNvdW50IC0gc2NyZWVuQ29uc3QpXHJcbiAgICAgICAgICAgICAgICBjdXJyUG9zaXRpb24gPSBpbm5lckNvdW50IC0gc2NyZWVuQ29uc3Q7XHJcbiAgICAgICAgICAgIGlmIChpbm5lckNvdW50IDw9IHNjcmVlbkNvbnN0KSBjdXJyUG9zaXRpb24gPSAwO1xyXG4gICAgXHJcbiAgICBcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgIH07XHJcbiAgICBpZiAoJChcImRpdlwiKS5pcyhcIi5ndC1zbGlkZXJcIikpIHtcclxuICAgICAgICAkKFwiLmd0LXNsaWRlclwiKS5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgc2VsZi5jcmVhdGVTbGlkZXIoJCh0aGlzKSk7XHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuICAgIHRoaXMubWFuYWdlR3RBY3RpdmVVbE1lbnUgPSBmdW5jdGlvbiAoZWwpIHtcclxuICAgICAgICBpZiAoZWwudGFnTmFtZSAhPSBcImxpXCIpXHJcbiAgICAgICAgICAgIGVsID0gJChlbCkuY2xvc2VzdChcImxpXCIpO1xyXG4gICAgXHJcbiAgICAgICAgJChlbCkuY2xvc2VzdCgkKFwidWxcIikpLmZpbmQoXCJsaVwiKS5yZW1vdmVDbGFzcyhcImd0LWFjdGl2ZVwiKTtcclxuICAgICAgICAkKGVsKS5hZGRDbGFzcyhcImd0LWFjdGl2ZVwiKTtcclxuICAgIH07XHJcbiAgICBcclxuICAgIFxyXG4gICAgLy8gaWYgKCQoXCIqXCIpLmlzKFwiLmd0LWh1bmRyZXQtbWVudVwiKSkge1xyXG4gICAgLy8gICAgICQoXCIuZ3QtaHVuZHJldC1tZW51XCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAvLyAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAvLyAgICAgICAgIHNlbGYubWFuYWdlR3RBY3RpdmVVbE1lbnUoZXZlbnQudGFyZ2V0KTtcclxuICAgIC8vICAgICB9KTtcclxuICAgIC8vIH1cclxuICAgIFxyXG4gICAgXHJcbiAgICBpZiAoJChcIipcIikuaXMoXCIuZ3QtYnV0dG9uLW1lbnVcIikpIHtcclxuICAgICAgICAkKFwiLmd0LWJ1dHRvbi1tZW51XCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIHNlbGYubWFuYWdlR3RBY3RpdmVVbE1lbnUoZXZlbnQudGFyZ2V0KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgaWYgKCQoXCIqXCIpLmlzKFwiLmd0LW1lbnUtbmV3c19pdGVtc1wiKSkge1xyXG4gICAgICAgICQoXCIuZ3QtbWVudS1uZXdzX2l0ZW1zXCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIHNlbGYubWFuYWdlR3RBY3RpdmVVbE1lbnUoZXZlbnQudGFyZ2V0KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLnNldFBsYXllcnMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIHRhZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIik7XHJcbiAgICAgICAgdGFnLnR5cGUgPSBcInRleHQvamF2YXNjcmlwdFwiO1xyXG4gICAgICAgIHRhZy5zcmMgPSBcImh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3BsYXllcl9hcGlcIjtcclxuICAgICAgICB2YXIgbGFzdFNjcmlwdFRhZyA9ICQoXCJzY3JpcHRcIilbJChcInNjcmlwdFwiKS5sZW5ndGggLSAxXTtcclxuICAgICAgICBsYXN0U2NyaXB0VGFnLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRhZywgbGFzdFNjcmlwdFRhZyk7XHJcbiAgICAgICAgdmFyIGd0VmlkZW9zID0gJChcIi5ndC12aWRlb1wiKTtcclxuICAgICAgICBndFZpZGVvcy5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIGN1cnJlbnRQbGF5ZXIgPSAkKHRoaXMpO1xyXG4gICAgICAgICAgICBjdXJyZW50UGxheWVyLmZpbmQoXCIuZ3QtdmlkZW8tc3dpdGNoXCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5hZGRDbGFzcyhcImd0LW9wZW5cIik7XHJcbiAgICAgICAgICAgICAgICBjdXJyZW50UGxheWVyLmFkZENsYXNzKFwiZ3Qtb3BlblwiKTtcclxuICAgICAgICAgICAgICAgIHNlbGYuYWRkWW91VHViZShjdXJyZW50UGxheWVyKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICB0aGlzLmFkZFlvdVR1YmUgPSBmdW5jdGlvbiAoZWwpIHtcclxuICAgICAgICB2YXIgcGxheWVyLFxyXG4gICAgICAgICAgICBlbElkID0gXCJndC12aWRlby1cIiArIGVsLmluZGV4KCk7XHJcbiAgICBcclxuICAgICAgICBlbC5maW5kKFwiLmd0LXZpZGVvLXN3aXRjaFwiKS5oaWRlKCdzbG93Jyk7XHJcbiAgICBcclxuICAgICAgICBlbFxyXG4gICAgICAgICAgICAuZmluZChcIi5ndC12aWRlby1pbm5lclwiKVxyXG4gICAgICAgICAgICAuYXR0cihcImlkXCIsIGVsSWQpXHJcbiAgICAgICAgICAgIC5hZGRDbGFzcyhcImd0LXZpZGVvLWZvcmVncm91bmRcIik7XHJcbiAgICBcclxuICAgICAgICBmdW5jdGlvbiBvbllvdVR1YmVJZnJhbWVBUElSZWFkeSgpIHtcclxuICAgICAgICAgICAgcGxheWVyID0gbmV3IFlULlBsYXllcihlbElkLCB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNjAwLFxyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA0MDAsXHJcbiAgICAgICAgICAgICAgICB2aWRlb0lkOiBlbC5hdHRyKFwiZGF0YS15b3V0dWJlXCIpLFxyXG4gICAgICAgICAgICAgICAgcGxheWVyVmFyczoge1xyXG4gICAgICAgICAgICAgICAgICAgIHBsYXlsaXN0OiBlbC5hdHRyKFwiZGF0YS15b3V0dWJlXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiBcIndoaXRlXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgbG9vcDogMSxcclxuICAgICAgICAgICAgICAgICAgICBhdXRvcGxheTogMVxyXG4gICAgICAgICAgICAgICAgICAgIC8vIGRpc2FibGVrYjogMCxcclxuICAgICAgICAgICAgICAgICAgICAvLyBjb250cm9sczogMFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGV2ZW50czoge1xyXG4gICAgICAgICAgICAgICAgICAgIG9uUmVhZHk6IGluaXRpYWxpemVcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgb25Zb3VUdWJlSWZyYW1lQVBJUmVhZHkoKTtcclxuICAgIFxyXG4gICAgICAgIGZ1bmN0aW9uIGluaXRpYWxpemUoKSB7XHJcbiAgICAgICAgICAgIHBsYXllci5tdXRlKCk7XHJcbiAgICAgICAgICAgIHBsYXllci5wbGF5VmlkZW8oKTtcclxuICAgICAgICAgICAgZWwuYWRkQ2xhc3MoXCJndC12aWRlby1vblwiKTtcclxuICAgICAgICAgICAgZWwuZmluZChcIi5ndC12aWRlby11bmNvdmVyXCIpLm9uKCdjbGljaycsIHBsYXlGdWxsU2NyZWVuKTtcclxuICAgICAgICAgICAgZWwuZmluZChcIi5ndC12aWRlby1wYXVzZVwiKS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBwbGF5ZXIucGF1c2VWaWRlbygpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgZWwuZmluZChcIi5ndC12aWRlby1wbGF5XCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgcGxheWVyLnBsYXlWaWRlbygpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICBmdW5jdGlvbiBwbGF5RnVsbFNjcmVlbigpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ3BsYXlGdWxsU2NyZWVuJyk7XHJcbiAgICAgICAgICAgIHZhciBpZnJhbWUgPSBlbC5maW5kKCdpZnJhbWUnKVswXTtcclxuICAgICAgICAgICAgdmFyIHJlcXVlc3RGdWxsU2NyZWVuID0gaWZyYW1lLnJlcXVlc3RGdWxsU2NyZWVuIHx8IGlmcmFtZS5tb3pSZXF1ZXN0RnVsbFNjcmVlbiB8fCBpZnJhbWUud2Via2l0UmVxdWVzdEZ1bGxTY3JlZW47XHJcbiAgICAgICAgICAgIGlmIChyZXF1ZXN0RnVsbFNjcmVlbikge1xyXG4gICAgICAgICAgICAgICAgcmVxdWVzdEZ1bGxTY3JlZW4uYmluZChpZnJhbWUpKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICBcclxuICAgIH07XHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICBpZiAoJChcImRpdlwiKS5pcyhcIi5ndC12aWRlb1wiKSkge1xyXG4gICAgICAgIHNlbGYuc2V0UGxheWVycygpO1xyXG4gICAgfVxyXG4gICAgLy8gdG9kbyDQtdGB0LvQuCDQv9GA0LDQstGL0Lkg0LHQu9C+0Log0LLRi9GI0LUg0L/RgNCw0LLQvtCz0L4gcmV0dXJuXHJcbiAgICBcclxuICAgIFxyXG4gICAgdGhpcy5maXhBcnRpY2xlU2Nyb2xsVGFibGVQb3NpdGlvbiA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgdGFibGUgPSAkKFwiLmd0LWFydGljbGUtdGFibGUtd3JhcHBlclwiKSxcclxuICAgICAgICAgICAgdGFibGVQYXJlbnQgPSB0YWJsZS5wYXJlbnQoKSxcclxuICAgICAgICAgICAgdGFibGVIZWlnaHQgPSB0YWJsZS5vdXRlckhlaWdodCgpLFxyXG4gICAgICAgICAgICB0YWJsZVBhcmVudFRvcCA9IHRhYmxlUGFyZW50LnBvc2l0aW9uKCkudG9wLFxyXG4gICAgICAgICAgICB0YWJsZVBhcmVudEJvdHRvbSA9IHRhYmxlUGFyZW50VG9wICsgdGFibGVQYXJlbnQub3V0ZXJIZWlnaHQoKSxcclxuICAgICAgICAgICAgdGFibGVXaWR0aCA9IHRhYmxlLm91dGVyV2lkdGgoKSxcclxuICAgICAgICAgICAgd2luZG93VG9wID0gZG9jLnNjcm9sbFRvcCgpO1xyXG4gICAgXHJcbiAgICAgICAgaWYgKHRhYmxlUGFyZW50VG9wKzkwID4gd2luZG93VG9wKSB7XHJcbiAgICAgICAgICAgIGlmICh0YWJsZS5oYXNDbGFzcyhcImd0LWZpeGVkXCIpKSB7XHJcbiAgICAgICAgICAgICAgICB0YWJsZS5yZW1vdmVDbGFzcyhcImd0LWZpeGVkXCIpO1xyXG4gICAgICAgICAgICAgICAgdGFibGUuY3NzKHtcclxuICAgICAgICAgICAgICAgICAgICBsZWZ0OiBcIlwiLFxyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiBcIlwiXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgIGlmICh0YWJsZVBhcmVudFRvcCA8IHdpbmRvd1RvcCArIDkwKSB7XHJcbiAgICAgICAgICAgIGlmICghdGFibGUuaGFzQ2xhc3MoXCJndC1maXhlZFwiKSkge1xyXG4gICAgICAgICAgICAgICAgdGFibGUuY3NzKHtcclxuICAgICAgICAgICAgICAgICAgICBsZWZ0OiB0YWJsZS5vZmZzZXQoKS5sZWZ0ICsgXCJweFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiB0YWJsZVdpZHRoXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIHRhYmxlLmFkZENsYXNzKFwiZ3QtZml4ZWRcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHdpbmRvd1RvcC0gdGFibGVQYXJlbnRCb3R0b20rdGFibGVIZWlnaHQrOTAgPj0wKSB7XHJcbiAgICAgICAgICAgICAgICB0YWJsZS5hZGRDbGFzcyhcImd0LWZpeGVkLWJvdHRvbVwiKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRhYmxlLnJlbW92ZUNsYXNzKFwiZ3QtZml4ZWQtYm90dG9tXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICBcclxuICAgIH07XHJcbiAgICBcclxuICAgIFxyXG4gICAgdGhpcy5jcmVhdGVBcnRpY3RlU2Nyb2xsVGFibGUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKCEkKFwiZGl2XCIpLmlzKFwiLmd0LWFydGljbGVcIikpIHJldHVybjtcclxuICAgICAgICB2YXIgYXJ0aWNsZXMgPSAkKFwiLmd0LWFydGljbGVcIiksXHJcbiAgICAgICAgICAgIGh0bWwgPSBcIlwiO1xyXG4gICAgICAgIGFydGljbGVzLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBodG1sICs9XHJcbiAgICAgICAgICAgICAgICAnPGRpdiBjbGFzcyA9IFwiZ3QtYXJ0aWNsZS1zY3JvbGxcIj48ZGl2IGNsYXNzID0gXCJndC1hcnRpY2xlLXNjcm9sbC1zaGFkb3dcIj48L2Rpdj48cD4nICtcclxuICAgICAgICAgICAgICAgICQodGhpcylcclxuICAgICAgICAgICAgICAgICAgICAuZmluZChcImgyXCIpXHJcbiAgICAgICAgICAgICAgICAgICAgLnRleHQoKSArXHJcbiAgICAgICAgICAgICAgICBcIjwvcD48L2Rpdj5cIjtcclxuICAgICAgICB9KTtcclxuICAgICAgICAkKFwiI2d0LWFydGljbGUtc2Nyb2xsLXRhYmxlXCIpLmh0bWwoaHRtbCk7XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICB0aGlzLnNob3dBcnRpZGxlU2hhZG93ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQoXCIuZ3QtYXJ0aWNsZVwiKS5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgLy8gY29uc29sZS5sb2coJCh0aGlzKSk7XHJcbiAgICAgICAgICAgIHZhciBjdXJyUG9zaXRpb24gPSAkKHRoaXMpLnBvc2l0aW9uKCkudG9wLFxyXG4gICAgICAgICAgICAgICAgZWxIZWlnaHQgPSAkKHRoaXMpLm91dGVySGVpZ2h0KCksXHJcbiAgICAgICAgICAgICAgICB3aW5kb3dQb3NpdGlvbiA9ICQoZG9jdW1lbnQpLnNjcm9sbFRvcCgpLFxyXG4gICAgICAgICAgICAgICAgeCA9IDA7XHJcbiAgICAgICAgICAgIGlmIChjdXJyUG9zaXRpb24gPiB3aW5kb3dQb3NpdGlvbikge1xyXG4gICAgICAgICAgICAgICAgeCA9IDA7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB4ID0gKHdpbmRvd1Bvc2l0aW9uIC0gY3VyclBvc2l0aW9uKSAvIGVsSGVpZ2h0O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICh4ID4gMSkgeCA9IDE7XHJcbiAgICAgICAgICAgIHZhciBjdXJyU2hhZG93ID0gJChcIi5ndC1hcnRpY2xlLXNjcm9sbFwiKVskKHRoaXMpLmluZGV4KCldO1xyXG4gICAgICAgICAgICAkKGN1cnJTaGFkb3cpXHJcbiAgICAgICAgICAgICAgICAuZmluZChcIi5ndC1hcnRpY2xlLXNjcm9sbC1zaGFkb3dcIilcclxuICAgICAgICAgICAgICAgIC5jc3MoXCJ3aWR0aFwiLCB4ICogMTAwICsgXCIlXCIpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgaWYgKCQoJ2RpdicpLmlzKCcuZ3QtYXJ0aWNsZS10YWJsZS13cmFwcGVyJykpIHtcclxuICAgICAgICB2YXIgc2hhZG93ID0gZmFsc2UsXHJcbiAgICAgICAgICAgIHNjcm9sbFRpbWVvdXQ7XHJcbiAgICAgICAgaWYgKCQoJ2RpdicpLmlzKFwiLmd0LWFydGljbGUtc2Nyb2xsLXRhYmxlXCIpKSB7XHJcbiAgICAgICAgICAgIHNoYWRvdyA9IHRydWU7XHJcbiAgICAgICAgICAgIHNlbGYuY3JlYXRlQXJ0aWN0ZVNjcm9sbFRhYmxlKCk7XHJcbiAgICAgICAgICAgIHNlbGYuc2hvd0FydGlkbGVTaGFkb3coKTtcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgIFxyXG4gICAgICAgIGZ1bmN0aW9uIHNjcm9sbFRocm90dGxlcigpIHtcclxuICAgICAgICAgICAgaWYgKCFzY3JvbGxUaW1lb3V0KSB7XHJcbiAgICAgICAgICAgICAgICBzY3JvbGxUaW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgc2Nyb2xsVGltZW91dCA9IG51bGw7XHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5maXhBcnRpY2xlU2Nyb2xsVGFibGVQb3NpdGlvbigpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChzaGFkb3cpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5zaG93QXJ0aWRsZVNoYWRvdygpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICBkb2NXaW5kb3cuc2Nyb2xsKHNjcm9sbFRocm90dGxlcik7XHJcbiAgICAgICAgZG9jV2luZG93LnJlc2l6ZShzY3JvbGxUaHJvdHRsZXIpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5zZXRDdXJyVGltZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBzZWxmLmN1cnJUaW1lKCk7XHJcbiAgICAgICAgdmFyIHQgPSBzZXRJbnRlcnZhbChzZWxmLmN1cnJUaW1lLCAzMDAwMCk7XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgdGhpcy5jdXJyVGltZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkKFwiLmd0LWN1cnItdGltZVwiKS5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIGRhdGUgPSBuZXcgRGF0ZSgpO1xyXG4gICAgICAgICAgICBpZiAoJCh0aGlzKS5hdHRyKFwiZGF0YS1nbXRcIikpIGRhdGUuc2V0VVRDSG91cnMoKyQodGhpcykuYXR0cihcImRhdGEtZ210XCIpKTtcclxuICAgICAgICAgICAgdmFyIGhvdXJzID0gZGF0ZS5nZXRIb3VycygpLFxyXG4gICAgICAgICAgICAgICAgbWludXRlcyA9IGRhdGUuZ2V0TWludXRlcygpLFxyXG4gICAgICAgICAgICAgICAgd2Vla2RheSA9IGRhdGUuZ2V0RGF5KCksXHJcbiAgICAgICAgICAgICAgICBkYXkgPSBkYXRlLmdldERhdGUoKSxcclxuICAgICAgICAgICAgICAgIG1vbnRoID0gZGF0ZS5nZXRNb250aCgpLFxyXG4gICAgICAgICAgICAgICAgeWVhciA9IGRhdGUuZ2V0RnVsbFllYXIoKSxcclxuICAgICAgICAgICAgICAgIHdlZWtkYXlzID0gW1xyXG4gICAgICAgICAgICAgICAgICAgIFwi0JLQvtGB0LrRgNC10YHQtdC90YzQtVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwi0J/QvtC90LXQtNC10LvRjNC90LjQulwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwi0JLRgtC+0YDQvdC40LpcIixcclxuICAgICAgICAgICAgICAgICAgICBcItCh0YDQtdC00LBcIixcclxuICAgICAgICAgICAgICAgICAgICBcItCn0LXRgtCy0LXRgNCzXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCLQn9GP0YLQvdC40YbQsFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwi0KHRg9Cx0LHQvtGC0LBcIlxyXG4gICAgICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgICAgIG1vbnRoZXMgPSBbXHJcbiAgICAgICAgICAgICAgICAgICAgXCLRj9C90LLQsNGA0Y9cIixcclxuICAgICAgICAgICAgICAgICAgICBcItGE0LXQstGA0LDQu9GPXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCLQvNCw0YDRgtCwXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCLQsNC/0YDQtdC70Y9cIixcclxuICAgICAgICAgICAgICAgICAgICBcItC80LDRj1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwi0LjRjtC90Y9cIixcclxuICAgICAgICAgICAgICAgICAgICBcItC40Y7Qu9GPXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCLQsNCy0LPRg9GB0YLQsFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwi0YHQtdC90YLRj9Cx0YDRj1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwi0L7QutGC0Y/QsdGA0Y9cIixcclxuICAgICAgICAgICAgICAgICAgICBcItC90L7Rj9Cx0YDRj1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwi0LTQtdC60LDQsdGA0Y9cIlxyXG4gICAgICAgICAgICAgICAgXTtcclxuICAgICAgICAgICAgaWYgKGhvdXJzIDwgMTApIGhvdXJzID0gXCIwXCIgKyBob3VycztcclxuICAgICAgICAgICAgaWYgKG1pbnV0ZXMgPCAxMCkgbWludXRlcyA9IFwiMFwiICsgbWludXRlcztcclxuICAgICAgICAgICAgd2Vla2RheSA9IHdlZWtkYXlzW3dlZWtkYXldO1xyXG4gICAgICAgICAgICBtb250aCA9IG1vbnRoZXNbbW9udGhdO1xyXG4gICAgICAgICAgICBpZiAoJChcIi5ndC1jdXJyLXRpbWUtdGltZVwiKSlcclxuICAgICAgICAgICAgICAgICQoXCIuZ3QtY3Vyci10aW1lLXRpbWVcIikuaHRtbChob3VycyArIFwiOlwiICsgbWludXRlcyk7XHJcbiAgICAgICAgICAgIGlmICgkKFwiLmd0LWN1cnItdGltZS1kYXRlXCIpKVxyXG4gICAgICAgICAgICAgICAgJChcIi5ndC1jdXJyLXRpbWUtZGF0ZVwiKS5odG1sKFxyXG4gICAgICAgICAgICAgICAgICAgIHdlZWtkYXkgKyBcIiwgXCIgKyBkYXkgKyBcIiBcIiArIG1vbnRoICsgXCIgXCIgKyB5ZWFyXHJcbiAgICAgICAgICAgICAgICApO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuICAgIFxyXG4gICAgXHJcbiAgICBpZiAoJChcImRpdlwiKS5pcyhcIi5ndC1jdXJyLXRpbWVcIikpIHtcclxuICAgICAgICBzZWxmLnNldEN1cnJUaW1lKCk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKCQoXCJkaXZcIikuaXMoXCIuZ3QtaW5uZXItc2Nyb2xsXCIpKSB7XHJcbiAgICAgICAgJCgnLmd0LWlubmVyLXNjcm9sbCcpLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgXHJcbiAgICAgICAgICAgICQodGhpcykubmljZVNjcm9sbCh7XHJcbiAgICAgICAgICAgICAgICBjdXJzb3JvcGFjaXR5bWluOiAnMScsXHJcbiAgICAgICAgICAgICAgICBjdXJzb3JvcGFjaXR5bWF4OiAnMScsXHJcbiAgICAgICAgICAgICAgICBjdXJzb3J3aWR0aDogJzJweCcsXHJcbiAgICAgICAgICAgICAgICBjdXJzb3Jib3JkZXI6ICdub25lJyxcclxuICAgICAgICAgICAgICAgIG1vdXNlc2Nyb2xsc3RlcDogJzYwJyxcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IFwiI0NFQ0VDRVwiLFxyXG4gICAgICAgICAgICAgICAgcmFpbG9mZnNldDogJ2xlZnQnLFxyXG4gICAgICAgICAgICAgICAgemluZGV4OiBcImF1dG9cIixcclxuICAgICAgICAgICAgICAgIGN1cnNvcmNvbG9yOiBcIiNDRUNFQ0VcIlxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG4gICAgLy8gX2lubmVyX3Njcm9sbCAgbXVzdCBiZSBiZWZvcmUgX3RhYl9zbGlkZXIgLSAhaW1wb3J0YW50XHJcblxyXG4gICAgdGhpcy50YWJTbGlkZXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIHRhYlNsaWRlcnMgPSAkKFwiLmd0LXRhYnNcIik7XHJcbiAgICAgICAgdGFiU2xpZGVycy5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIGN1cnJUYWJzID0gJCh0aGlzKTtcclxuICAgICAgICAgICAgY3VyclRhYnMuZmluZChcIi5ndC10YWJzLWJ1dHRvblwiKS5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICQodGhpcykub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZi50YWJTbGlkZXJBY3Rpb24oY3VyclRhYnMsICQodGhpcykuaW5kZXgoKSk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIHNlbGYudGFiU2xpZGVyQWN0aW9uKGN1cnJUYWJzLDAsdHJ1ZSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICB0aGlzLnRhYlNsaWRlckFjdGlvbiA9IGZ1bmN0aW9uIChlbCwgbnVtICxpbml0KSB7XHJcbiAgICAgICAgdmFyIGJ1dHRvbnMgPSAkKGVsLmZpbmQoXCIuZ3QtdGFicy1idXR0b25cIikpLFxyXG4gICAgICAgICAgICBtYWluID0gICQoZWwuZmluZChcIi5ndC10YWJzLW1haW5cIikpXHJcbiAgICAgICAgZWwuZmluZCgnLmd0LWlubmVyLXNjcm9sbC10YWInKS5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgJCgnIycgKyAkKHRoaXMpLmF0dHIoJ2RhdGEtc2Nyb2xsJykpLmhpZGUoKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBidXR0b25zLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpO1xyXG4gICAgICAgIG1haW4ucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIik7XHJcbiAgICAgICAgJChidXR0b25zW251bV0pLmFkZENsYXNzKFwiYWN0aXZlXCIpO1xyXG4gICAgICAgICQobWFpbltudW1dKS5hZGRDbGFzcyhcImFjdGl2ZVwiKTtcclxuICAgIFxyXG4gICAgICAgIGlmKCQoJyMnICsgJChtYWluW251bV0pLmZpbmQoJy5ndC1pbm5lci1zY3JvbGwtdGFiJykuYXR0cignZGF0YS1zY3JvbGwnKSkuZmluZCgnLmd0LXNjcm9sbC1jdXJzb3InKS5oZWlnaHQoKSAhPSAwIHx8IGluaXQpe1xyXG4gICAgICAgICAgICAkKCcjJyArICQobWFpbltudW1dKS5maW5kKCcuZ3QtaW5uZXItc2Nyb2xsLXRhYicpLmF0dHIoJ2RhdGEtc2Nyb2xsJykpLnNob3coKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICBpZiAoJChcImRpdlwiKS5pcyhcIi5ndC10YWJzXCIpKSB7XHJcbiAgICAgICAgc2VsZi50YWJTbGlkZXIoKTtcclxuICAgIH1cclxuXHJcblxyXG5cclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vZG9lcyBub3Qgd29ya1xyXG5cclxuICAgIHRoaXMuY3JlYXRlVmlld0NhcmRMaXN0ZW5lcnMgPSBmdW5jdGlvbiAoZWwpIHtcclxuICAgICAgICBlbC5maW5kKCcuZ3Qtdmlldy1jYXJkcy1pY29ucy12aXNpdCcpLm9uKCdjbGljaycsZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICAgIHNlbGYuY2xvc2VTaGFyZVZpZXdDYXJkKGVsKTtcclxuICAgICAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgICAgICAgIHNlbGYuY2xpY2tWaXNpdFZpZXdDYXJkKGVsKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBlbC5maW5kKCcuZ3Qtdmlldy1jYXJkcy1pY29ucy1waW4tcGx1cycpLm9uKCdjbGljaycsZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICAgIHNlbGYuY2xvc2VTaGFyZVZpZXdDYXJkKGVsKTtcclxuICAgICAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgICAgICAgIHNlbGYuY2xpY2tTZWVuVmlld0NhcmQoZWwpO1xyXG4gICAgXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgZWwuZmluZCgnLmd0LXZpZXctY2FyZHMtaWNvbnMtYm9va21hcmtzJykub24oJ2NsaWNrJyxmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICAgICAgc2VsZi5jbG9zZVNoYXJlVmlld0NhcmQoZWwpO1xyXG4gICAgICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgICAgICAgc2VsZi5jbGlja01hcmtWaWV3Q2FyZChlbCk7XHJcbiAgICBcclxuICAgICAgICB9KTtcclxuICAgICAgICBlbC5maW5kKCcuZ3Qtdmlldy1jYXJkcy1pY29ucy1zaGFyZScpLm9uKCdjbGljaycsZnVuY3Rpb24gKGV2ZW50Zykge1xyXG4gICAgICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgICAgICAgc2VsZi5jbGlja1NoYXJlVmlld0NhcmQoZWwpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGVsLmZpbmQoJy5ndC12aWV3LWNhcmRzLWljb25zLXNoYXJlJykuZmluZCgnYScpLm9uKCdjbGljaycsZnVuY3Rpb24gKGV2ZW50LGVsKSB7XHJcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICBcclxuICAgICAgICAgICAgc2VsZi52aWV3Q2FyZFNvY2lhbChlbCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgZWwub24oJ2NsaWNrICBtb3VzZWxlYXZlJyxmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICQoZWwpLmZpbmQoJy5ndC12aWV3LWNhcmRzLWljb25zLXNoYXJlJykucGFyZW50KCkucmVtb3ZlQ2xhc3MoJ2d0LWFjdGl2ZScpO1xyXG4gICAgICAgICAgICBzZWxmLmNsb3NlU2hhcmVWaWV3Q2FyZChlbCk7XHJcbiAgICBcclxuICAgICAgICB9KVxyXG4gICAgfTtcclxuICAgIFxyXG4gICAgdGhpcy5kZXN0cm95Vmlld0NhcmRMaXN0ZW5lcnMgPSBmdW5jdGlvbiAoZWwpIHtcclxuICAgICAgICBlbC5maW5kKCcuZ3Qtdmlldy1jYXJkcy1pY29ucy12aXNpdCcpLm9mZigpO1xyXG4gICAgICAgIGVsLmZpbmQoJy5ndC12aWV3LWNhcmRzLWljb25zLXBpbi1wbHVzJykub2ZmKCk7XHJcbiAgICAgICAgZWwuZmluZCgnLmd0LXZpZXctY2FyZHMtaWNvbnMtYm9va21hcmtzJykub2ZmKCk7XHJcbiAgICAgICAgZWwuZmluZCgnLmd0LXZpZXctY2FyZHMtaWNvbnMtc2hhcmUnKS5vZmYoKTtcclxuICAgICAgICBlbC5maW5kKCcuZ3Qtdmlldy1jYXJkcy1pY29ucy1zaGFyZScpLmZpbmQoJ2EnKS5vZmYoKTtcclxuICAgICAgICBlbC5vZmYoKTtcclxuICAgIFxyXG4gICAgfTtcclxuICAgIFxyXG4gICAgXHJcbiAgICB0aGlzLnZpZXdDYXJkU29jaWFsID0gZnVuY3Rpb24gKGVsKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ2NsaWNrIHNvY2lhbCcpO1xyXG4gICAgICAgIHNlbGYuY2xvc2VTaGFyZVZpZXdDYXJkKGVsKTtcclxuICAgIH07XHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICB0aGlzLm9wZW5TaGFyZVZpZXdDYXJkID0gZnVuY3Rpb24gKGVsKSB7XHJcbiAgICAgICAgJChlbCkuYWRkQ2xhc3MoJ2d0LWFjdGl2ZScpO1xyXG4gICAgfTtcclxuICAgIHRoaXMuY2xvc2VTaGFyZVZpZXdDYXJkID0gZnVuY3Rpb24gKGVsKSB7XHJcbiAgICAgICAgJChlbCkucmVtb3ZlQ2xhc3MoJ2d0LWFjdGl2ZScpO1xyXG4gICAgXHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICBcclxuICAgIHRoaXMuY2xpY2tTaGFyZVZpZXdDYXJkID0gZnVuY3Rpb24gKGVsKSB7XHJcbiAgICBcclxuICAgICAgICB2YXIgYnV0dG9uID0gZWwuZmluZCgnLmd0LXZpZXctY2FyZHMtaWNvbnMtc2hhcmUnKS5wYXJlbnQoKTtcclxuICAgICAgICBpZihidXR0b24uaGFzQ2xhc3MoJ2d0LWFjdGl2ZScpKXtcclxuICAgICAgICAgICAgYnV0dG9uLnJlbW92ZUNsYXNzKCdndC1hY3RpdmUnKTtcclxuICAgICAgICAgICAgc2VsZi5jbG9zZVNoYXJlVmlld0NhcmQoZWwpO1xyXG4gICAgXHJcbiAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgIGJ1dHRvbi5hZGRDbGFzcygnZ3QtYWN0aXZlJyk7XHJcbiAgICAgICAgICAgIHNlbGYub3BlblNoYXJlVmlld0NhcmQoZWwpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICB0aGlzLmNsaWNrVmlzaXRWaWV3Q2FyZCA9IGZ1bmN0aW9uIChlbCkge1xyXG4gICAgICAgIGlmKGVsLmhhc0NsYXNzKCdndC1hY3RpdmUnKSkgcmV0dXJuO1xyXG4gICAgICAgIHZhciBidXR0b24gPSBlbC5maW5kKCcuZ3Qtdmlldy1jYXJkcy1pY29ucy12aXNpdCcpLnBhcmVudCgpO1xyXG4gICAgICAgIGlmKGJ1dHRvbi5oYXNDbGFzcygnZ3QtYWN0aXZlJykpe1xyXG4gICAgICAgICAgICBidXR0b24ucmVtb3ZlQ2xhc3MoJ2d0LWFjdGl2ZScpO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnY2xpY2sgbm90IHZpc2l0ZWQgbm93Jyk7XHJcbiAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgIGJ1dHRvbi5hZGRDbGFzcygnZ3QtYWN0aXZlJyk7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdjbGljayB2aXNpdCcpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICBcclxuICAgIHRoaXMuY2xpY2tTZWVuVmlld0NhcmQgPSBmdW5jdGlvbiAoZWwpIHtcclxuICAgICAgICBpZihlbC5oYXNDbGFzcygnZ3QtYWN0aXZlJykpIHJldHVybjtcclxuICAgICAgICB2YXIgYnV0dG9uID0gZWwuZmluZCgnLmd0LXZpZXctY2FyZHMtaWNvbnMtcGluLXBsdXMnKS5wYXJlbnQoKTtcclxuICAgICAgICBpZihidXR0b24uaGFzQ2xhc3MoJ2d0LWFjdGl2ZScpKXtcclxuICAgICAgICAgICAgYnV0dG9uLnJlbW92ZUNsYXNzKCdndC1hY3RpdmUnKTtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ2NsaWNrIG5vdCBzZWVuIG5vdycpO1xyXG4gICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICBidXR0b24uYWRkQ2xhc3MoJ2d0LWFjdGl2ZScpO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnY2xpY2sgc2VlbicpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICB0aGlzLmNsaWNrTWFya1ZpZXdDYXJkID0gZnVuY3Rpb24gKGVsKSB7XHJcbiAgICAgICAgaWYoZWwuaGFzQ2xhc3MoJ2d0LWFjdGl2ZScpKSByZXR1cm47XHJcbiAgICAgICAgdmFyIGJ1dHRvbiA9IGVsLmZpbmQoJy5ndC12aWV3LWNhcmRzLWljb25zLWJvb2ttYXJrcycpLnBhcmVudCgpO1xyXG4gICAgICAgIGlmKGJ1dHRvbi5oYXNDbGFzcygnZ3QtYWN0aXZlJykpe1xyXG4gICAgICAgICAgICBidXR0b24ucmVtb3ZlQ2xhc3MoJ2d0LWFjdGl2ZScpO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnY2xpY2sgZGVsZXRlIGJvb2ttYXJrJyk7XHJcbiAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgIGJ1dHRvbi5hZGRDbGFzcygnZ3QtYWN0aXZlJyk7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdjbGljayBhZGQgYm9va21hcmsnKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICBpZiAoJChcIipcIikuaXMoXCIuZ3Qtdmlldy1jYXJkcy1pbm5lclwiKSkge1xyXG4gICAgXHJcbiAgICAgICAgJCgnLmd0LXZpZXctY2FyZHMtaW5uZXInKS5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgc2VsZi5jcmVhdGVWaWV3Q2FyZExpc3RlbmVycygkKHRoaXMpKTtcclxuICAgICAgICB9KVxyXG4gICAgXHJcbiAgICBcclxuICAgIH1cclxuICAgIC8vINC/0YDQvtCy0LXRgNC60LAg0L3QsCDQvdCw0LvQuNGH0LjQtSAtINC+0LHRgdGD0LTQuNGC0Ywg0YEg0LHQtdC60L7QvCDQv9C+0LLQtdC00LXQs9GC0LVcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgICQoJyNndC1lbnRlci1mb3JtLWZhY2Vib29rJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHNlbGYuc29jaWFsRW50ZXIoJ2ZhY2Vib29rJylcclxuICAgIH0pO1xyXG4gICAgJCgnI2d0LWVudGVyLWZvcm0tdHdpdHRlcicpLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBzZWxmLnNvY2lhbEVudGVyKCd0d2l0dGVyJylcclxuICAgIH0pO1xyXG4gICAgJCgnI2d0LWVudGVyLWZvcm0tZ29vZ2xlJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHNlbGYuc29jaWFsRW50ZXIoJ2dvb2dsZScpXHJcbiAgICB9KTtcclxuICAgIFxyXG4gICAgJCgnI2d0LXJlZy1mb3JtLWZhY2Vib29rJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHNlbGYuc29jaWFsUmVnaXN0cmF0aW9uKCdmYWNlYm9vaycpXHJcbiAgICB9KTtcclxuICAgICQoJyNndC1yZWctZm9ybS10d2l0dGVyJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHNlbGYuc29jaWFsUmVnaXN0cmF0aW9uKCd0d2l0dGVyJylcclxuICAgIH0pO1xyXG4gICAgJCgnI2d0LXJlZy1mb3JtLWdvb2dsZScpLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBzZWxmLnNvY2lhbFJlZ2lzdHJhdGlvbignZ29vZ2xlJylcclxuICAgIH0pO1xyXG4gICAgXHJcbiAgICB0aGlzLnNvY2lhbFJlZ2lzdHJhdGlvbiA9IGZ1bmN0aW9uICh0b2tlbikge1xyXG4gICAgXHJcbiAgICAgICAgYWxlcnQoXCLQoNC10LPQuNGB0YLRgNCw0YbQuNGPINGH0LXRgNC10LcgXCIgKyB0b2tlbilcclxuICAgIFxyXG4gICAgfTtcclxuICAgIHRoaXMuc29jaWFsRW50ZXIgPSBmdW5jdGlvbiAodG9rZW4pIHtcclxuICAgIFxyXG4gICAgICAgIGFsZXJ0KFwi0JLRhdC+0LQg0YfQtdGA0LXQtyBcIiArIHRva2VuKVxyXG4gICAgXHJcbiAgICB9O1xyXG4gICB0aGlzLmN1dE5ld3MgPSBmdW5jdGlvbiAoZWwpIHtcclxuICAgICAgIHZhciBwYXJlbnQgPSBlbC5wYXJlbnQoKSxcclxuICAgICAgICAgICBtYXhIZWlnaHQgPSBwYXJlbnQuaGVpZ2h0KCksXHJcbiAgICAgICAgICAgY3V0dGluZ0VsID0gZWwuZmluZCgncCcpLFxyXG4gICAgICAgICAgIGN1cnJIZWlnaHQsXHJcbiAgICAgICAgICAgY3V0dGluZ0xlbmdodCxcclxuICAgICAgICAgICBuZXdUZXh0O1xyXG4gICAgICAgcGFyZW50LmNoaWxkcmVuKCkuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgbWF4SGVpZ2h0IC09ICQodGhpcykub3V0ZXJIZWlnaHQodHJ1ZSk7XHJcbiAgICAgICB9KTtcclxuICAgXHJcbiAgICAgICBtYXhIZWlnaHQgPSBtYXhIZWlnaHQgKyBlbC5oZWlnaHQoKSAtIDIwO1xyXG4gICBcclxuICAgXHJcbiAgICAgICBjdXR0aW5nRWwuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgY3VyckhlaWdodCA9ICQodGhpcykub3V0ZXJIZWlnaHQodHJ1ZSk7XHJcbiAgIFxyXG4gICAgICAgICAgIGlmIChjdXJySGVpZ2h0IDwgbWF4SGVpZ2h0KSB7XHJcbiAgICAgICAgICAgICAgIG1heEhlaWdodCAtPSBjdXJySGVpZ2h0XHJcbiAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgaWYgKCFtYXhIZWlnaHQpIHtcclxuICAgICAgICAgICAgICAgICAgICQodGhpcykuY3NzKCdkaXNwbGF5JywgJ25vbmUnKTtcclxuICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgIGN1dHRpbmdMZW5naHQgPSBNYXRoLmZsb29yKCQodGhpcykudGV4dCgpLmxlbmd0aCAqIG1heEhlaWdodCAvIGN1cnJIZWlnaHQpO1xyXG4gICAgICAgICAgICAgICAgICAgbmV3VGV4dCA9ICQodGhpcykudGV4dCgpLnN1YnN0cmluZygwLCBjdXR0aW5nTGVuZ2h0IC0gNSk7XHJcbiAgICAgICAgICAgICAgICAgICAvLyBjdXRMYXN0U3ltYm9sKCk7XHJcbiAgICAgICAgICAgICAgICAgICAkKHRoaXMpLnRleHQoKG5ld1RleHQpICsgJy4uLicpO1xyXG4gICAgICAgICAgICAgICAgICAgbWF4SGVpZ2h0ID0gMDtcclxuICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgIH1cclxuICAgICAgIH0pO1xyXG4gICAgICAgLy9cclxuICAgICAgIC8vIGZ1bmN0aW9uIGN1dExhc3RTeW1ib2woKSB7XHJcbiAgICAgICAvLyAgICAgdmFyIHN0ckxlbmd0aCA9IG5ld1RleHQubGVuZ3RoO1xyXG4gICAgICAgLy8gICAgIGlmKG5ld1RleHQuY2hhckF0KHN0ckxlbmd0aCAtIDEpID09ICcgJyl7XHJcbiAgICAgICAvLyAgICAgICAgIG5ld1RleHQ9IG5ld1RleHQuc3Vic3RyaW5nKDAsIHN0ckxlbmd0aCAtIDEpO1xyXG4gICAgICAgLy8gICAgIH1lbHNle1xyXG4gICAgICAgLy8gICAgICAgICBuZXdUZXh0ID0gbmV3VGV4dC5zdWJzdHJpbmcoMCwgc3RyTGVuZ3RoIC0gMSk7XHJcbiAgICAgICAvLyAgICAgICAgIHNldFRpbWVvdXQoY3V0TGFzdFN5bWJvbClcclxuICAgICAgIC8vICAgICB9XHJcbiAgICAgICAvLyB9XHJcbiAgIFxyXG4gICB9O1xyXG4gICBcclxuICAgXHJcbiAgIGlmICgkKFwiZGl2XCIpLmlzKFwiLmpzLW5ld3MtY3V0XCIpKSB7XHJcbiAgICAgICAkKFwiLmpzLW5ld3MtY3V0XCIpLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgIHNlbGYuY3V0TmV3cygkKHRoaXMpKTtcclxuICAgICAgIH0pO1xyXG4gICBcclxuICAgXHJcbiAgICAgICBkb2NXaW5kb3cucmVzaXplKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAkKFwiLmpzLW5ld3MtY3V0XCIpLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICBzZWxmLmN1dE5ld3MoJCh0aGlzKSk7XHJcbiAgICAgICAgICAgfSk7XHJcbiAgICAgICB9KTtcclxuICAgfVxyXG4gICBcclxuICAgXHJcbiAgIHRoaXMuY3V0UmVhZE1vcmVTbGlkZXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICB2YXIgY3V0dGluZ3MgPSAkKFwiLmd0LXJlYWQtbW9yZS1zbGlkZXItdGV4dC1pbm5lclwiKTtcclxuICAgICAgIGN1dHRpbmdzLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgIHNlbGYuY3V0dGluZygkKHRoaXMpLCAxNjApO1xyXG4gICAgICAgfSk7XHJcbiAgIH07XHJcbiAgIFxyXG4gICB0aGlzLmN1dHRpbmcgPSBmdW5jdGlvbiAoZWwsIG51bSkge1xyXG4gICAgICAgdmFyIG5ld3NUZXh0ID0gZWwudGV4dCgpO1xyXG4gICAgICAgaWYgKG5ld3NUZXh0Lmxlbmd0aCA+IG51bSkge1xyXG4gICAgICAgICAgIG5ld3NUZXh0ID0gbmV3c1RleHQuc2xpY2UoMCwgbnVtKSArIFwiLi4uXCI7XHJcbiAgICAgICAgICAgZWwudGV4dChuZXdzVGV4dCk7XHJcbiAgICAgICB9XHJcbiAgIH07XHJcbiAgIFxyXG4gICBcclxuICAgaWYgKCQoXCJwXCIpLmlzKFwiLmd0LXJlYWQtbW9yZS1zbGlkZXItdGV4dC1pbm5lclwiKSkge1xyXG4gICAgICAgc2VsZi5jdXRSZWFkTW9yZVNsaWRlcigpO1xyXG4gICB9XHJcblxyXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcblxyXG4gICAgZG9jLnJlYWR5KGZ1bmN0aW9uICgpIHtcclxuICAgIFxyXG4gICAgICAgIHNlbGYuZm9vdGVySGVpZ2h0KCk7Ly9fZm9vdGVyX2hlaWdodC5qc1xyXG4gICAgICAgIHNlbGYuZGVza1RvcE1lbnVTY3JvbGwoKTsvL19kZXNjdG9wX2hlYWRlcl9mdW5jLmpzXHJcbiAgICBcclxuICAgIFxyXG4gICAgfSk7XHJcbiAgICB0aGlzLnBhZ2VVcCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkKCdodG1sLCBib2R5JykuYW5pbWF0ZSh7c2Nyb2xsVG9wOiAwfSwgODAwKTtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICB0aGlzLnVwUGFnZUJ1dHRvbiA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAoJChkb2N1bWVudCkuc2Nyb2xsVG9wKCkgPiAzMCkge1xyXG4gICAgICAgICAgICB1cEJ1dHRvbi5hZGRDbGFzcyhcImd0LXZpc2libGVcIik7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdXBCdXR0b24ucmVtb3ZlQ2xhc3MoXCJndC12aXNpYmxlXCIpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICBcclxuICAgIFxyXG4gICAgdXBCdXR0b24ub24oXCJjbGlja1wiLCBzZWxmLnBhZ2VVcCk7XHJcbiAgICBcclxuICAgIGRvY1dpbmRvdy5zY3JvbGwoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHNlbGYudXBQYWdlQnV0dG9uKCk7Ly9fdXBfYnV0dG9uLmpzXHJcbiAgICAgICAgaWYgKCQoXCIuZ3QtaGVhZGVyLW1lbnVcIikuaXMoXCI6dmlzaWJsZVwiKSkge1xyXG4gICAgICAgICAgICBzZWxmLmRlc2tUb3BNZW51U2Nyb2xsKCk7Ly9fZGVzY3RvcF9oZWFkZXJfZnVuYy5qc1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgZG9jV2luZG93LnJlc2l6ZShmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgc2VsZi5kZXNrVG9wTWVudVNjcm9sbCgpO1xyXG4gICAgICAgIHNlbGYuZm9vdGVySGVpZ2h0KCk7XHJcbiAgICBcclxuICAgICAgICBpZiAoZ3RIZWFkZXIuaGFzQ2xhc3MoXCJndC1vcGVuXCIpKSBzZWxmLm1vYmlsZU1lbnVDbG9zZSgpO1xyXG4gICAgXHJcbiAgICAgICAgaWYgKCQoXCJkaXZcIikuaXMoXCIuZ3QtaW1nLWhvbGRlci1hYnNcIikpIHtcclxuICAgICAgICAgICAgJChcIi5ndC1pbWctaG9sZGVyLWFic1wiKS5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICQodGhpcykucmVtb3ZlQ2xhc3MoXCJndC13aWR0aFwiKTtcclxuICAgICAgICAgICAgICAgICQodGhpcykucmVtb3ZlQ2xhc3MoXCJndC1oZWlnaHRcIik7XHJcbiAgICAgICAgICAgICAgICBzZWxmLmltZ0hvbGRlckZ1bmMoJCh0aGlzKSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgJCh3aW5kb3cpLm9uKCdsb2FkJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmICgkKFwiZGl2XCIpLmlzKFwiLmd0LWltZy1ob2xkZXItYWJzXCIpKSB7XHJcbiAgICAgICAgICAgICQoXCIuZ3QtaW1nLWhvbGRlci1hYnNcIikuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBzZWxmLmltZ0hvbGRlckZ1bmMoJCh0aGlzKSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIGJvZHkub24oJ2NsaWNrJywgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coZXZlbnQudGFyZ2V0KTtcclxuICAgIFxyXG4gICAgfSk7XHJcbiAgICBcclxuICAgIFxyXG4gICAgaWYgKCQoXCIqXCIpLmlzKFwiLmd0LW1lbnUtbmV3c1wiKSkge1xyXG4gICAgICAkKCcuZ3QtbWVudS1uZXdzJykuZmluZCgnYScpLm9uKCdjbGljaycsZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICBcclxuICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAkKCcuZ3QtbWVudS1uZXdzJykuZmluZCgnbGknKS5yZW1vdmVDbGFzcygnZ3QtYWN0aXZlJyk7XHJcbiAgICAgICAgICAkKHRoaXMpLnBhcmVudCgpLmFkZENsYXNzKCdndC1hY3RpdmUnKTtcclxuICAgICAgICAgIGNvbnNvbGUubG9nKCd0ZW1wIGZ1bmMnKVxyXG4gICAgICB9KVxyXG4gICAgXHJcbiAgICAgICAgLy8gdG9kbyB0ZW1wIGZ1bmNcclxuICAgIH1cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbn07XHJcbiQoZG9jdW1lbnQpLnJlYWR5KFxyXG5cclxuICAgIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgZ29Ub1RyaXAgPSBuZXcgR29Ub1RyaXAoKTtcclxuICAgIH1cclxuKTsiXX0=
