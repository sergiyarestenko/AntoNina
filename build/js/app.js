GoToTrip=function(){function t(){b||(b=setTimeout(function(){b=null,e.fixArticleScrollTablePosition(),k&&e.showArtidleShadow()}))}var e=this,i=$(document.body),s=$(document),o=$(window),n={top:!1,left:!1},a=$("#gt-is-360"),r=($("#gt-is-480"),$("#gt-is-667")),c=$("#gt-is-768"),l=$("#gt-is-1024"),d=($("#gt-is-1231"),$("header")),g=$("footer"),u=$("#gt-wrapper"),h=$("#gt-up"),f=$("#gt-mobile-menu-switch"),v=$(".gt-enter"),p=$("#gt-header-enter-wrapper"),m=$("#gt-header-enter"),C=$("#gt-header-enter-chose"),w=$("#gt-header-enter-close");if($("html").niceScroll({cursorborder:"1px solid #6d6d6d",mousescrollstep:"60",bouncescroll:!0,cursorcolor:"#6d6d6d"}),this.fixBody=function(){n.top||n.left||(n.top=s.scrollTop(),n.left=i.offset().left,i.css({position:"fixed",left:n.left+"px",top:-1*n.top+"px"}))},this.unfixBody=function(){i.css({position:"",left:"",top:""}),s.scrollTop(n.top),n.top=!1,n.left=!1},this.footerHeight=function(){g.outerHeight()>o.height()-50?(g.css("position","static"),u.css("margin-bottom",""),h.css("position","static")):(g.css("position",""),h.css("position",""),u.css("margin-bottom",g.outerHeight()+"px"))},this.deskTopMenuScroll=function(){o.scrollTop()>d.outerHeight()?d.addClass("gt-header-scrolled"):d.removeClass("gt-header-scrolled")},this.mobileMenuClose=function(){e.unfixBody(),f.removeClass("gt-open"),d.removeClass("gt-open")},this.mobileMenuOpen=function(){e.fixBody(),d.addClass("gt-open"),f.addClass("gt-open")},f.on("click",function(){$(this).hasClass("gt-open")?e.mobileMenuClose():e.mobileMenuOpen()}),this.openEnterForm=function(){p.addClass("gt-open"),setTimeout(function(){$("#gt-header-registered").addClass("gt-open"),m.addClass("gt-open"),w.addClass("gt-open")})},this.closeEnterForm=function(){w.removeClass("gt-open"),m.removeClass("gt-open"),$("#gt-header-registered").removeClass("gt-open"),e.closeRestorePass(),setTimeout(function(){p.removeClass("gt-open")},750)},this.changeEnterRegistration=function(t){m.hasClass($(t.target).attr("class"))||m.removeClass("gt-chosen-enter").removeClass("gt-chosen-registration").addClass($(t.target).attr("class"))},this.openRestorePass=function(){$("#gt-enter-pass-restore-wrapper").addClass("gt-open")},this.closeRestorePass=function(){$("#gt-enter-pass-restore-wrapper").removeClass("gt-open")},v.each(function(){$(this).on("click",e.openEnterForm)}),w.on("click",e.closeEnterForm),C.on("click",function(t){e.changeEnterRegistration(t)}),$("#gt-enter-form-restore-pass").on("click",e.openRestorePass),$("#gt-enter-pass-restore-submit").on("click",e.closeRestorePass),this.setBackground=function(){$(".gt-img-holder").each(function(){if($(this).attr("data-bg")){var t=$(this).attr("data-bg");r.is(":visible")?$(this).css("background-image",'url("./img/backgrounds/phone/'+t+'")'):l.is(":visible")?$(this).css("background-image",'url("./img/backgrounds/tablet/'+t+'")'):$(this).css("background-image",'url("./img/backgrounds/desktop/'+t+'")')}})},this.imgHolderFunc=function(t){$(t).removeClass("gt-width"),$(t).removeClass("gt-height"),$(t).removeClass("gt-visible");var e=t.outerHeight()/t.outerWidth(),i=t.find("img");i.outerHeight()/i.outerWidth()>e?$(t).addClass("gt-width"):$(t).addClass("gt-height"),$(t).addClass("gt-visible")},$("div").is(".gt-img-holder")&&e.setBackground(),this.createSlider=function(t,i){function s(){if(S>w){var e="";V&&(e='<div class="gt-slider-arrow-num"><i class="gt-slider-num-curr"></i><i>из</i><i class="gt-slider-num-max"></i></div>'),t.find(".gt-slider-arrow-holder").html('<span class = "gt-slider-arrow left"></span>'+e+'<span class = "gt-slider-arrow right"></span>'),t.find(".left").on("click",function(){l(!1)}),t.find(".right").on("click",function(){l(!0)}),V&&u(),u()}b=!0}function n(e){var i=e||t;i.find(".left").off(),i.find(".right").off(),i.find(".gt-slider-arrow-holder").html(""),b=!1}function l(e,i){if(i||0===i?T=i:e?T++:T--,R&&(T>S-w&&(T=0),T<0&&(T=S-w),g()),E&&(T>S-w&&(x.css("left",-(T-2)*C+"px"),x.append(x.children().first().clone()),x.children().first().remove(),T--),T<0?(x.css("left",-(T+2)*C+"px"),x.prepend(x.children().last().clone()),x.children().last().remove(),T++,d()):d()),V&&u(),M){var s=t.find(".gt-slider-nav span");s.removeClass("gt-active"),$(s[x.find(".gt-open").attr("data-count")]).addClass("gt-active")}}function d(){x.children().removeClass("gt-open"),x.animate({left:-T*C},H),x.children().eq(T).addClass("gt-open")}function g(t){var e=t||T;$(k).removeClass("gt-open"),$(k[e]).addClass("gt-open")}function u(){t.find(".gt-slider-num-curr").text(+x.find(".gt-open").attr("data-count")+1),t.find(".gt-slider-num-max").text(S)}function h(){var e=0,i=0;t.on("touchstart",function(t){var i=t.originalEvent;e=Math.abs(i.touches[0].pageX),console.log("touchstart")}),t.on("touchend",function(t){var s=t.originalEvent;i=Math.abs(s.changedTouches[0].pageX),Math.abs(e-i)>50&&l(e>i?!0:!1)})}function f(e){(e||t).off()}function v(){t.attr("data-count")&&(w=parseInt(t.attr("data-count")),$(c).is(":visible")&&(w=3),$(r).is(":visible")&&(w=2),$(a).is(":visible")&&(w=1))}function p(){C=t.outerWidth()/w,t.find(".gt-slider-container").outerWidth((S+1)*C),k.each(function(){$(this).outerWidth(C),$(this).attr("data-count",$(this).index())})}var m,C,w=1,b=!1,k=t.find(".gt-slider-inner"),x=t.find(".gt-slider-container"),S=k.length,T=i||0,y=t.hasClass("gt-slider-has-arrow"),M=t.hasClass("gt-slider-has-dots"),V=t.hasClass("gt-slider-num"),E=t.hasClass("gt-slider-tram"),H=t.attr("data-duration")||300,R=t.hasClass("gt-slider-fade"),A=t.hasClass("gt-slider-has-clone");R&&g(i),E&&(v(),p(),d()),y&&(t.append('<div class="gt-slider-arrow-holder"></div>'),s()),M&&function(){t.append('<div class="gt-slider-nav"></div>');for(var e=t.find(".gt-slider-nav"),i="",s=0;s<S;s++)i+="<span data-num = "+s+"></span>";e.html(i),e.find("span").first().addClass("gt-active"),t.find(".gt-slider-nav span").on("click",function(){l(!0,+$(this).attr("data-num"))})}(),S>w&&h(),A&&t.find(".gt-slider-inner-cover").each(function(){$(this).on("click",function(){!function(i){if(!$("div").is("#gt-clone")){e.fixBody();var s=$("#gt-body-wrapper");s.append('<div id = "gt-clone-wrapper"   class="container"><div id = "gt-clone" class="gt-slider gt-slider-clone gt-slider-fade gt-slider-num  gt-slider-has-arrow"><div id = "gt-clone-close" class = "gt-slider-clone-close"></div><div  id = "gt-clone-container" class="gt-slider-container"></div></div></div>'),s.show();var o=$("#gt-clone");t.find(".gt-slider-inner").clone(!0).each(function(){$(this).outerWidth(""),$("#gt-clone-container").append($(this))}),e.createSlider(o,i),$("#gt-clone-close").on("click",function(){!function(t){n(t),f(t),$("#gt-clone-close").off(),$("#gt-clone-wrapper").remove(),$("#gt-body-wrapper").hide(),e.unfixBody()}(o)})}}($(this).parent().index())})}),o.resize(function(){m||(m=setTimeout(function(){m=null,f(),E&&(v(),p(),T>S-w&&(T=S-w),S<=w&&(T=0),d()),b&&(n(),s()),S>w&&h()},132))})},$("div").is(".gt-slider")&&$(".gt-slider").each(function(){e.createSlider($(this))}),this.manageGtActiveUlMenu=function(t){"li"!=t.tagName&&(t=$(t).closest("li")),$(t).closest($("ul")).find("li").removeClass("gt-active"),$(t).addClass("gt-active")},$("*").is(".gt-button-menu")&&$(".gt-button-menu").on("click",function(t){t.preventDefault(),e.manageGtActiveUlMenu(t.target)}),$("*").is(".gt-menu-news")&&$(".gt-menu-news").on("click",function(t){t.preventDefault(),e.manageGtActiveUlMenu(t.target)}),this.setPlayers=function(){var t=document.createElement("script");t.type="text/javascript",t.src="https://www.youtube.com/player_api";var i=$("script")[$("script").length-1];i.parentNode.insertBefore(t,i);$(".gt-video").each(function(){var t=$(this);t.find(".gt-video-switch").on("click",function(){$(this).addClass("gt-open"),t.addClass("gt-open"),e.addYouTube(t)})})},this.addYouTube=function(t){function e(){s.mute(),s.playVideo(),t.addClass("gt-video-on"),t.find(".gt-video-uncover").on("click",i),t.find(".gt-video-pause").on("click",function(){s.pauseVideo()}),t.find(".gt-video-play").on("click",function(){s.playVideo()})}function i(){console.log("playFullScreen");var e=t.find("iframe")[0],i=e.requestFullScreen||e.mozRequestFullScreen||e.webkitRequestFullScreen;i&&i.bind(e)()}var s,o="gt-video-"+t.index();t.find(".gt-video-switch").hide("slow"),t.find(".gt-video-inner").attr("id",o).addClass("gt-video-foreground"),s=new YT.Player(o,{width:600,height:400,videoId:t.attr("data-youtube"),playerVars:{playlist:t.attr("data-youtube"),color:"white",loop:1,autoplay:1},events:{onReady:e}})},$("div").is(".gt-video")&&e.setPlayers(),this.fixArticleScrollTablePosition=function(){var t=$(".gt-article-table-wrapper"),e=t.parent(),i=t.outerHeight(),o=e.position().top,n=o+e.outerHeight(),a=t.outerWidth(),r=s.scrollTop();o+90>r&&t.hasClass("gt-fixed")&&(t.removeClass("gt-fixed"),t.css({left:"",width:""})),o<r+90&&(t.hasClass("gt-fixed")||(t.css({left:t.offset().left+"px",width:a}),t.addClass("gt-fixed")),r-n+i+90>=0?t.addClass("gt-fixed-bottom"):t.removeClass("gt-fixed-bottom"))},this.createArticteScrollTable=function(){if($("div").is(".gt-article")){var t="";$(".gt-article").each(function(){t+='<div class = "gt-article-scroll"><div class = "gt-article-scroll-shadow"></div><p>'+$(this).find("h2").text()+"</p></div>"}),$("#gt-article-scroll-table").html(t)}},this.showArtidleShadow=function(){$(".gt-article").each(function(){var t=$(this).position().top,e=$(this).outerHeight(),i=$(document).scrollTop(),s=0;(s=t>i?0:(i-t)/e)>1&&(s=1);var o=$(".gt-article-scroll")[$(this).index()];$(o).find(".gt-article-scroll-shadow").css("width",100*s+"%")})},$("div").is(".gt-article-table-wrapper")){var b,k=!1;$("div").is(".gt-article-scroll-table")&&(k=!0,e.createArticteScrollTable(),e.showArtidleShadow()),o.scroll(t),o.resize(t)}this.setCurrTime=function(){e.currTime();setInterval(e.currTime,3e4)},this.currTime=function(){$(".gt-curr-time").each(function(){var t=new Date;$(this).attr("data-gmt")&&t.setUTCHours(+$(this).attr("data-gmt"));var e=t.getHours(),i=t.getMinutes(),s=t.getDay(),o=t.getDate(),n=t.getMonth(),a=t.getFullYear();e<10&&(e="0"+e),i<10&&(i="0"+i),s=["Воскресенье","Понедельник","Вторник","Среда","Четверг","Пятница","Суббота"][s],n=["января","февраля","марта","апреля","мая","июня","июля","августа","сентября","октября","ноября","декабря"][n],$(".gt-curr-time-time")&&$(".gt-curr-time-time").html(e+":"+i),$(".gt-curr-time-date")&&$(".gt-curr-time-date").html(s+", "+o+" "+n+" "+a)})},$("div").is(".gt-curr-time")&&e.setCurrTime(),$("div").is(".gt-inner-scroll")&&$(".gt-inner-scroll").each(function(){$(this).niceScroll({cursoropacitymin:"1",cursoropacitymax:"1",cursorwidth:"2px",cursorborder:"none",mousescrollstep:"60",background:"#CECECE",railoffset:"left",zindex:"auto",cursorcolor:"#CECECE"})}),this.tabSlider=function(){$(".gt-tabs").each(function(){var t=$(this);t.find(".gt-tabs-button").each(function(){$(this).on("click",function(){e.tabSliderAction(t,$(this).index())})}),e.tabSliderAction(t,0,!0)})},this.tabSliderAction=function(t,e,i){var s=$(t.find(".gt-tabs-button")),o=$(t.find(".gt-tabs-main"));t.find(".gt-inner-scroll-tab").each(function(){$("#"+$(this).attr("data-scroll")).hide()}),s.removeClass("active"),o.removeClass("active"),$(s[e]).addClass("active"),$(o[e]).addClass("active"),(0!=$("#"+$(o[e]).find(".gt-inner-scroll-tab").attr("data-scroll")).find(".gt-scroll-cursor").height()||i)&&$("#"+$(o[e]).find(".gt-inner-scroll-tab").attr("data-scroll")).show()},$("div").is(".gt-tabs")&&e.tabSlider(),this.createViewCardListeners=function(t){t.find(".gt-view-cards-icons-visit").on("click",function(){e.clickVisitViewCard(t)}),t.find(".gt-view-cards-icons-pin-plus").on("click",function(){e.clickSeenViewCard(t)}),t.find(".gt-view-cards-icons-bookmarks").on("click",function(){e.clickMarkViewCard(t)}),t.find(".gt-view-cards-icons-share").on("click",function(){e.clickShareViewCard(t)}),t.find(".gt-view-cards-icons-share").find("a").on("click",function(t,i){t.preventDefault(),e.veiwCardSocial(i)})},this.veiwCardSocial=function(t){console.log("click social"),e.closeShareViewCard(t)},this.openShareViewCard=function(t){$(t).addClass("gt-active")},this.closeShareViewCard=function(t){$(t).removeClass("gt-active")},this.clickShareViewCard=function(t){var i=t.find(".gt-view-cards-icons-share").parent();i.hasClass("gt-active")?(i.removeClass("gt-active"),e.closeShareViewCard(t)):(i.addClass("gt-active"),e.openShareViewCard(t))},this.clickVisitViewCard=function(t){if(!t.hasClass("gt-active")){var e=t.find(".gt-view-cards-icons-visit").parent();e.hasClass("gt-active")?(e.removeClass("gt-active"),console.log("click not visited now")):(e.addClass("gt-active"),console.log("click visit"))}},this.clickSeenViewCard=function(t){if(!t.hasClass("gt-active")){var e=t.find(".gt-view-cards-icons-pin-plus").parent();e.hasClass("gt-active")?(e.removeClass("gt-active"),console.log("click not seen now")):(e.addClass("gt-active"),console.log("click seen"))}},this.clickMarkViewCard=function(t){if(!t.hasClass("gt-active")){var e=t.find(".gt-view-cards-icons-bookmarks").parent();e.hasClass("gt-active")?(e.removeClass("gt-active"),console.log("click delete bookmark")):(e.addClass("gt-active"),console.log("click add bookmark"))}},$("*").is(".gt-view-cards-inner")&&$(".gt-view-cards-inner").each(function(){e.createViewCardListeners($(this))}),$("#gt-enter-form-facebook").on("click",function(){e.socialEnter("facebook")}),$("#gt-enter-form-twitter").on("click",function(){e.socialEnter("twitter")}),$("#gt-enter-form-google").on("click",function(){e.socialEnter("google")}),$("#gt-reg-form-facebook").on("click",function(){e.socialRegistration("facebook")}),$("#gt-reg-form-twitter").on("click",function(){e.socialRegistration("twitter")}),$("#gt-reg-form-google").on("click",function(){e.socialRegistration("google")}),this.socialRegistration=function(t){alert("Регистрация через "+t)},this.socialEnter=function(t){alert("Вход через "+t)},this.cutNews=function(t){var e,i,s,o=t.parent(),n=o.height(),a=t.find("p");o.children().each(function(){n-=$(this).outerHeight(!0)}),n=n+t.height()-20,a.each(function(){(e=$(this).outerHeight(!0))<n?n-=e:n?(i=Math.floor($(this).text().length*n/e),s=$(this).text().substring(0,i-5),$(this).text(s+"..."),n=0):$(this).css("display","none")})},$("div").is(".js-news-cut")&&($(".js-news-cut").each(function(){e.cutNews($(this))}),o.resize(function(){$(".js-news-cut").each(function(){e.cutNews($(this))})})),this.cutReadMoreSlider=function(){$(".gt-read-more-slider-text-inner").each(function(){e.cutting($(this),160)})},this.cutting=function(t,e){var i=t.text();i.length>e&&(i=i.slice(0,e)+"...",t.text(i))},$("p").is(".gt-read-more-slider-text-inner")&&e.cutReadMoreSlider(),s.ready(function(){e.footerHeight(),e.deskTopMenuScroll()}),this.pageUp=function(){return $("html, body").animate({scrollTop:0},800),!1},this.upPageButton=function(){$(document).scrollTop()>30?h.addClass("gt-visible"):h.removeClass("gt-visible")},h.on("click",e.pageUp),o.scroll(function(){e.upPageButton(),$(".gt-header-menu").is(":visible")&&e.deskTopMenuScroll()}),o.resize(function(){e.deskTopMenuScroll(),e.footerHeight(),d.hasClass("gt-open")&&e.mobileMenuClose(),$("div").is(".gt-img-holder-abs")&&$(".gt-img-holder-abs").each(function(){$(this).removeClass("gt-width"),$(this).removeClass("gt-height"),e.imgHolderFunc($(this))})}),$(window).on("load",function(){$("div").is(".gt-img-holder-abs")&&$(".gt-img-holder-abs").each(function(){e.imgHolderFunc($(this))})}),i.on("click",function(t){})},$(document).ready(function(){new GoToTrip});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
