GoToTrip=function(){function t(){w||(w=setTimeout(function(){w=null,e.fixArticleScrollTablePosition(),k&&e.showArtidleShadow()}))}var e=this,i=$(document.body),s=$(document),n=$(window),o={top:!1,left:!1},a=$("#gt-is-360"),r=($("#gt-is-480"),$("#gt-is-667")),c=$("#gt-is-768"),l=$("#gt-is-1024"),d=($("#gt-is-1231"),$("header")),g=$("footer"),h=$("#gt-wrapper"),u=$("#gt-up"),f=$("#gt-mobile-menu-switch"),v=$(".gt-enter"),p=$("#gt-header-enter-wrapper"),m=$("#gt-header-enter"),b=$("#gt-header-enter-chose"),C=$("#gt-header-enter-close");if(this.fixBody=function(){o.top||o.left||(o.top=s.scrollTop(),o.left=i.offset().left,i.css({position:"fixed",left:o.left+"px",top:-1*o.top+"px"}))},this.unfixBody=function(){i.css({position:"",left:"",top:""}),s.scrollTop(o.top),o.top=!1,o.left=!1},this.footerHeight=function(){g.outerHeight()>n.height()-50?(g.css("position","static"),h.css("margin-bottom",""),u.css("position","static")):(g.css("position",""),u.css("position",""),h.css("margin-bottom",g.outerHeight()+"px"))},this.deskTopMenuScroll=function(){n.scrollTop()>d.outerHeight()?d.addClass("gt-header-scrolled"):d.removeClass("gt-header-scrolled")},this.pageUp=function(){return $("body,html").animate({scrollTop:0},800),!1},this.upPageButton=function(){$(document).scrollTop()>30?u.addClass("gt-visible"):u.removeClass("gt-visible")},u.on("click",e.pageUp),this.mobileMenuClose=function(){e.unfixBody(),f.removeClass("gt-open"),d.removeClass("gt-open")},this.mobileMenuOpen=function(){e.fixBody(),d.addClass("gt-open"),f.addClass("gt-open")},f.on("click",function(){$(this).hasClass("gt-open")?e.mobileMenuClose():e.mobileMenuOpen()}),this.openEnterForm=function(){p.addClass("gt-open"),setTimeout(function(){$("#gt-header-registered").addClass("gt-open"),m.addClass("gt-open"),C.addClass("gt-open")})},this.closeEnterForm=function(){C.removeClass("gt-open"),m.removeClass("gt-open"),$("#gt-header-registered").removeClass("gt-open"),e.closeRestorePass(),setTimeout(function(){p.removeClass("gt-open")},750)},this.changeEnterRegistration=function(t){m.hasClass($(t.target).attr("class"))||m.removeClass("gt-chosen-enter").removeClass("gt-chosen-registration").addClass($(t.target).attr("class"))},this.openRestorePass=function(){$("#gt-enter-pass-restore-wrapper").addClass("gt-open")},this.closeRestorePass=function(){$("#gt-enter-pass-restore-wrapper").removeClass("gt-open")},v.each(function(){$(this).on("click",e.openEnterForm)}),C.on("click",e.closeEnterForm),b.on("click",function(t){e.changeEnterRegistration(t)}),$("#gt-enter-form-restore-pass").on("click",e.openRestorePass),$("#gt-enter-pass-restore-submit").on("click",e.closeRestorePass),this.setBackground=function(){$(".gt-img-holder").each(function(){if($(this).attr("data-bg")){var t=$(this).attr("data-bg");r.is(":visible")?$(this).css("background-image",'url("./img/backgrounds/phone/'+t+'")'):l.is(":visible")?$(this).css("background-image",'url("./img/backgrounds/tablet/'+t+'")'):$(this).css("background-image",'url("./img/backgrounds/desktop/'+t+'")')}})},this.imgHolderFunc=function(t){$(t).removeClass("gt-width"),$(t).removeClass("gt-height"),$(t).removeClass("gt-visible");var e=t.outerHeight()/t.outerWidth(),i=t.find("img");i.outerHeight()/i.outerWidth()>e?$(t).addClass("gt-width"):$(t).addClass("gt-height"),$(t).addClass("gt-visible")},$("div").is(".gt-img-holder")&&e.setBackground(),this.createSlider=function(t,i){function s(){if(T>C){var e="";H&&(e='<div class="gt-slider-arrow-num"><i class="gt-slider-num-curr"></i><i>из</i><i class="gt-slider-num-max"></i></div>'),t.find(".gt-slider-arrow-holder").html('<span class = "gt-slider-arrow left"></span>'+e+'<span class = "gt-slider-arrow right"></span>'),t.find(".left").on("click",function(){l(!1)}),t.find(".right").on("click",function(){l(!0)}),H&&h(),h()}w=!0}function o(e){var i=e||t;i.find(".left").off(),i.find(".right").off(),i.find(".gt-slider-arrow-holder").html(""),w=!1}function l(e,i){if(i||0===i?y=i:e?y++:y--,R&&(y>T-C&&(y=0),y<0&&(y=T-C),g()),A&&(console.log("start",y),y>T-C&&(x.css("left",-(y-2)*b+"px"),x.append(x.children().first().clone()),x.children().first().remove(),y--),y<0?(x.css("left",-(y+2)*b+"px"),x.prepend(x.children().last().clone()),x.children().last().remove(),y++,d()):d()),H&&h(),M){var s=t.find(".gt-slider-nav span");s.removeClass("gt-active"),$(s[x.find(".gt-open").attr("data-count")]).addClass("gt-active")}}function d(){x.children().removeClass("gt-open"),x.animate({left:-y*b},B),x.children().eq(y).addClass("gt-open")}function g(t){var e=t||y;$(k).removeClass("gt-open"),$(k[e]).addClass("gt-open")}function h(){t.find(".gt-slider-num-curr").text(+x.find(".gt-open").attr("data-count")+1),t.find(".gt-slider-num-max").text(T)}function u(){var e=0,i=0;t.on("touchstart",function(t){var i=t.originalEvent;e=Math.abs(i.touches[0].pageX),console.log("touchstart")}),t.on("touchend",function(t){var s=t.originalEvent;i=Math.abs(s.changedTouches[0].pageX),Math.abs(e-i)>50&&l(e>i?!0:!1)})}function f(e){(e||t).off()}function v(){t.attr("data-count")&&(C=parseInt(t.attr("data-count")),$(c).is(":visible")&&(C=3),$(r).is(":visible")&&(C=2),$(a).is(":visible")&&(C=1))}function p(){b=t.outerWidth()/C,t.find(".gt-slider-container").outerWidth((T+1)*b),k.each(function(){$(this).outerWidth(b),$(this).attr("data-count",$(this).index())})}var m,b,C=1,w=!1,k=t.find(".gt-slider-inner"),x=t.find(".gt-slider-container"),T=k.length,y=i||0,S=t.hasClass("gt-slider-has-arrow"),M=t.hasClass("gt-slider-has-dots"),H=t.hasClass("gt-slider-num"),A=t.hasClass("gt-slider-tram"),B=t.attr("data-duration")||300,R=t.hasClass("gt-slider-fade"),E=t.hasClass("gt-slider-has-clone");R&&g(i),A&&(v(),p(),d()),S&&(t.append('<div class="gt-slider-arrow-holder"></div>'),s()),M&&function(){t.append('<div class="gt-slider-nav"></div>');for(var e=t.find(".gt-slider-nav"),i="",s=0;s<T;s++)i+="<span data-num = "+s+"></span>";e.html(i),e.find("span").first().addClass("gt-active"),t.find(".gt-slider-nav span").on("click",function(){l(!0,+$(this).attr("data-num"))})}(),T>C&&u(),E&&t.find(".gt-slider-inner-cover").each(function(){$(this).on("click",function(){!function(i){if(!$("div").is("#gt-clone")){e.fixBody();var s=$("#gt-body-wrapper");s.append('<div id = "gt-clone-wrapper"   class="container"><div id = "gt-clone" class="gt-slider gt-slider-clone gt-slider-fade gt-slider-num  gt-slider-has-arrow"><div id = "gt-clone-close" class = "gt-slider-clone-close"></div><div  id = "gt-clone-container" class="gt-slider-container"></div></div></div>'),s.show();var n=$("#gt-clone");t.find(".gt-slider-inner").clone(!0).each(function(){$(this).outerWidth(""),$("#gt-clone-container").append($(this))}),e.createSlider(n,i),$("#gt-clone-close").on("click",function(){!function(t){o(t),f(t),$("#gt-clone-close").off(),$("#gt-clone-wrapper").remove(),$("#gt-body-wrapper").hide(),e.unfixBody()}(n)})}}($(this).parent().index())})}),n.resize(function(){m||(m=setTimeout(function(){m=null,f(),A&&(v(),p(),y>T-C&&(y=T-C),T<=C&&(y=0),d()),w&&(o(),s()),T>C&&u()},132))})},$("div").is(".gt-slider")&&$(".gt-slider").each(function(){e.createSlider($(this))}),this.manageGtActiveUlMenu=function(t){"li"!=t.tagName&&(t=$(t).closest("li")),$(t).closest($("ul")).find("li").removeClass("gt-active"),$(t).addClass("gt-active")},$("*").is(".gt-button-menu")&&$(".gt-button-menu").on("click",function(t){t.preventDefault(),e.manageGtActiveUlMenu(t.target)}),$("*").is(".gt-menu-news")&&$(".gt-menu-news").on("click",function(t){t.preventDefault(),e.manageGtActiveUlMenu(t.target)}),this.tabSlider=function(){$(".gt-tabs").each(function(){var t=$(this);t.find(".gt-tabs-button").each(function(){$(this).on("click",function(){e.tabSliderAction(t,$(this).index())})}),e.tabSliderActivation(t)})},this.tabSliderActivation=function(t){$(t.find(".gt-tabs-button")).removeClass("active"),$(t.find(".gt-tabs-main")).removeClass("active"),$(t.find(".gt-tabs-button")[0]).addClass("active"),$(t.find(".gt-tabs-main")[0]).addClass("active")},this.tabSliderAction=function(t,e){$(t.find(".gt-tabs-button")).removeClass("active"),$(t.find(".gt-tabs-main")).removeClass("active"),$(t.find(".gt-tabs-button")[e]).addClass("active"),$(t.find(".gt-tabs-main")[e]).addClass("active")},$("div").is(".gt-tabs")&&e.tabSlider(),this.setPlayers=function(){var t=document.createElement("script");t.type="text/javascript",t.src="https://www.youtube.com/player_api";var i=$("script")[$("script").length-1];i.parentNode.insertBefore(t,i);$(".gt-video").each(function(){var t=$(this);t.find(".gt-video-switch").on("click",function(){$(this).addClass("gt-open"),t.addClass("gt-open"),e.addYouTube(t)})})},this.addYouTube=function(t){function e(){s.mute(),s.playVideo(),t.addClass("gt-video-on"),t.find(".gt-video-uncover").on("click",i),t.find(".gt-video-pause").on("click",function(){s.pauseVideo()}),t.find(".gt-video-play").on("click",function(){s.playVideo()})}function i(){console.log("playFullScreen");var e=t.find("iframe")[0],i=e.requestFullScreen||e.mozRequestFullScreen||e.webkitRequestFullScreen;i&&i.bind(e)()}var s,n="gt-video-"+t.index();t.find(".gt-video-switch").hide("slow"),t.find(".gt-video-inner").attr("id",n).addClass("gt-video-foreground"),s=new YT.Player(n,{width:600,height:400,videoId:t.attr("data-youtube"),playerVars:{playlist:t.attr("data-youtube"),color:"white",loop:1,autoplay:1},events:{onReady:e}})},$("div").is(".gt-video")&&e.setPlayers(),this.fixArticleScrollTablePosition=function(){var t=$(".gt-article-table-wrapper"),e=t.parent(),i=e.position().top,o=i+e.outerHeight(),a=t.outerWidth(),r=s.scrollTop(),c=n.outerHeight();console.log(i),console.log(r),i+90>r&&t.hasClass("gt-fixed")&&(t.removeClass("gt-fixed"),t.css({left:"",width:""})),i<r+90&&(t.hasClass("gt-fixed")||(t.css({left:t.offset().left+"px",width:a}),t.addClass("gt-fixed")),r+c>o?t.addClass("gt-fixed-bottom"):t.removeClass("gt-fixed-bottom")),t.hasClass("gt-fixed")?t.css({height:c-120+"px"}):t.css({height:""})},this.createArticteScrollTable=function(){if($("div").is(".gt-article")){var t="";$(".gt-article").each(function(){t+='<div class = "gt-article-scroll"><div class = "gt-article-scroll-shadow"></div><p>'+$(this).find("h2").text()+"</p></div>"}),$("#gt-article-scroll-table").html(t)}},this.showArtidleShadow=function(){$(".gt-article").each(function(){var t=$(this).position().top,e=$(this).outerHeight(),i=$(document).scrollTop(),s=0;(s=t>i?0:(i-t)/e)>1&&(s=1);var n=$(".gt-article-scroll")[$(this).index()];$(n).find(".gt-article-scroll-shadow").css("width",100*s+"%")})},$("div").is(".gt-article-table-wrapper")){var w,k=!1;$("div").is(".gt-article-scroll-table")&&(k=!0,e.createArticteScrollTable(),e.showArtidleShadow()),n.scroll(t),n.resize(t)}this.setCurrTime=function(){e.currTime();setInterval(e.currTime,3e4)},this.currTime=function(){$(".gt-curr-time").each(function(){var t=new Date;$(this).attr("data-gmt")&&t.setUTCHours(+$(this).attr("data-gmt"));var e=t.getHours(),i=t.getMinutes(),s=t.getDay(),n=t.getDate(),o=t.getMonth(),a=t.getFullYear();e<10&&(e="0"+e),i<10&&(i="0"+i),s=["Воскресенье","Понедельник","Вторник","Среда","Четверг","Пятница","Суббота"][s],o=["января","февраля","марта","апреля","мая","июня","июля","августа","сентября","октября","ноября","декабря"][o],$(".gt-curr-time-time")&&$(".gt-curr-time-time").html(e+":"+i),$(".gt-curr-time-date")&&$(".gt-curr-time-date").html(s+", "+n+" "+o+" "+a)})},$("div").is(".gt-curr-time")&&e.setCurrTime(),this.innerScroll=function(t){t.find(".overview").height()>t.height()&&(t.addClass("isScrolled"),t.tinyscrollbar({thumbSize:40,wheelSpeed:10}))},$("div").is(".gt-inner-scroll")&&$(".gt-inner-scroll").each(function(){e.innerScroll($(this))}),this.createIconsItemsClick=function(){$(".gt-view-cards-icons-item").each(function(){$(this).hasClass("gt-view-cards-icons-visit")?e.createVisitLink($(this)):$(this).hasClass("gt-view-cards-icons-bookmarks")?e.createBookmarksLink($(this)):$(this).hasClass("gt-view-cards-icons-pin")||$(this).hasClass("gt-view-cards-icons-share")?e.toggleGtActive($(this)):$(this).hasClass("gt-view-cards-icons-share")&&e.createShareLink($(this))})},this.createShareLink=function(t){t.removeClass("gt-active"),t.on("click",function(){t.toggleClass("gt-active")})},this.toggleGtActive=function(t){(t=$(t)).removeClass("gt-active"),t.on("click",function(){t.toggleClass("gt-active")})},this.createVisitLink=function(t){t.closest(".gt-view-cards-inner").attr("data-href")&&t.on("click",function(){e.addVisitedLink(t)})},this.addVisitedLink=function(t){alert("послали данные на бек",t.closest(".gt-view-cards-inner").attr("data-href")),t.toggleClass("gt-active")},this.addBookmark=function(t,e,i){try{window.external.AddFavorite(e,i)}catch(s){try{window.sidebar.addPanel(i,e,"")}catch(s){if("object"==typeof opera)return t.title=i,t.url=e,!0;alert("Нажмите Ctrl-D чтобы добавить страницу в закладки")}}return!1},this.createBookmarksLink=function(t){var i=(t=$(t)).closest(".gt-view-cards-inner");(i=$(i)).attr("data-href")||i.attr("data-href",window.location.href),i.attr("data-bookmark")||i.attr("data-bookmark","GoToTrip"),t.attr("href",i.attr("data-href")),t.attr("rel","sidebar"),t.on("click",function(s){s.preventDefault(),e.addBookmark(t,i.attr("data-href"),i.attr("data-bookmark"))})},$("*").is(".gt-view-cards-icons-bookmarks")&&e.createBookmarksLink(),$("*").is(".gt-view-cards-icons-item")&&e.createIconsItemsClick(),$("#gt-enter-form-facebook").on("click",function(){e.socialEnter("facebook")}),$("#gt-enter-form-twitter").on("click",function(){e.socialEnter("twitter")}),$("#gt-enter-form-google").on("click",function(){e.socialEnter("google")}),$("#gt-reg-form-facebook").on("click",function(){e.socialRegistration("facebook")}),$("#gt-reg-form-twitter").on("click",function(){e.socialRegistration("twitter")}),$("#gt-reg-form-google").on("click",function(){e.socialRegistration("google")}),this.socialRegistration=function(t){alert("Регистрация через "+t)},this.socialEnter=function(t){alert("Вход через "+t)},this.cutNews=function(t){var e,i,s,n=t.parent(),o=n.height(),a=t.find("p");n.children().each(function(){o-=$(this).outerHeight(!0)}),o=o+t.height()-20,a.each(function(){(e=$(this).outerHeight(!0))<o?o-=e:o?(i=Math.floor($(this).text().length*o/e),s=$(this).text().substring(0,i),$(this).text(s+"..."),o=0):$(this).css("display","none")})},$("div").is(".js-news-cut")&&($(".js-news-cut").each(function(){e.cutNews($(this))}),n.resize(function(){$(".js-news-cut").each(function(){e.cutNews($(this))})})),this.cutReadMoreSlider=function(){$(".gt-read-more-slider-text-inner").each(function(){e.cutting($(this),160)})},this.cutting=function(t,e){var i=t.text();i.length>e&&(i=i.slice(0,e)+"...",t.text(i))},$("p").is(".gt-read-more-slider-text-inner")&&e.cutReadMoreSlider(),s.ready(function(){e.footerHeight(),e.deskTopMenuScroll()}),n.scroll(function(){e.upPageButton(),$(".gt-header-menu").is(":visible")&&e.deskTopMenuScroll()}),n.resize(function(){e.deskTopMenuScroll(),e.footerHeight(),d.hasClass("gt-open")&&e.mobileMenuClose(),$("div").is(".gt-img-holder-abs")&&$(".gt-img-holder-abs").each(function(){$(this).removeClass("gt-width"),$(this).removeClass("gt-height"),e.imgHolderFunc($(this))})}),$(window).on("load",function(){$("div").is(".gt-img-holder-abs")&&$(".gt-img-holder-abs").each(function(){e.imgHolderFunc($(this))})}),i.on("click",function(t){})};var goToTrip=new GoToTrip;
//# sourceMappingURL=data:application/json;charset=utf8;base64,
