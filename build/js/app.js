GoToTrip=function(){function t(){C||(C=setTimeout(function(){C=null,e.fixArticleScrollTablePosition(),k&&e.showArtidleShadow()},66))}var e=this,i=$(document.body),n=$(document),o=$(window),s={top:!1,left:!1},a=$("#gt-is-360"),r=($("#gt-is-480"),$("#gt-is-667")),c=$("#gt-is-768"),l=$("#gt-is-1024"),d=($("#gt-is-1231"),$("header")),g=$("footer"),f=$("#gt-wrapper"),h=$("#gt-up"),u=$("#gt-mobile-menu-switch"),v=$(".gt-enter"),m=$("#gt-header-enter-wrapper"),p=$("#gt-header-enter"),b=$("#gt-header-enter-chose"),w=$("#gt-header-enter-close");if(this.fixBody=function(){s.top||s.left||(s.top=n.scrollTop(),s.left=i.offset().left,i.css({position:"fixed",left:s.left+"px",top:-1*s.top+"px"}))},this.unfixBody=function(){i.css({position:"",left:"",top:""}),n.scrollTop(s.top),s.top=!1,s.left=!1},this.footerHeight=function(){g.outerHeight()>o.height()-50?(g.css("position","static"),f.css("margin-bottom",""),h.css("position","static")):(g.css("position",""),h.css("position",""),f.css("margin-bottom",g.outerHeight()+"px"))},this.deskTopMenuScroll=function(){o.scrollTop()>d.outerHeight()?d.addClass("gt-header-scrolled"):d.removeClass("gt-header-scrolled")},this.pageUp=function(){return $("body,html").animate({scrollTop:0},800),!1},this.upPageButton=function(){$(document).scrollTop()>30?h.addClass("gt-visible"):h.removeClass("gt-visible")},h.on("click",e.pageUp),this.mobileMenuClose=function(){e.unfixBody(),u.removeClass("gt-open"),d.removeClass("gt-open")},this.mobileMenuOpen=function(){e.fixBody(),d.addClass("gt-open"),u.addClass("gt-open")},u.on("click",function(){$(this).hasClass("gt-open")?e.mobileMenuClose():e.mobileMenuOpen()}),this.openEnterForm=function(){m.addClass("gt-open"),setTimeout(function(){p.addClass("gt-open"),w.addClass("gt-open")})},this.closeEnterForm=function(){w.removeClass("gt-open"),p.removeClass("gt-open"),setTimeout(function(){m.removeClass("gt-open")},750)},this.changeEnterRegistration=function(t){p.hasClass($(t.target).attr("class"))||p.removeClass("gt-chosen-enter").removeClass("gt-chosen-registration").addClass($(t.target).attr("class"))},v.each(function(){$(this).on("click",e.openEnterForm)}),w.on("click",e.closeEnterForm),b.on("click",function(t){e.changeEnterRegistration(t)}),this.setBackground=function(){$(".gt-img-holder").each(function(){if($(this).attr("data-bg")){var t=$(this).attr("data-bg");r.is(":visible")?$(this).css("background-image",'url("./img/backgrounds/phone/'+t+'")'):l.is(":visible")?$(this).css("background-image",'url("./img/backgrounds/tablet/'+t+'")'):$(this).css("background-image",'url("./img/backgrounds/desktop/'+t+'")')}})},this.imgHolderFunc=function(t){var e=t.outerHeight()/t.outerWidth(),i=t.find("img");i.outerHeight()/i.outerWidth()>e?$(t).addClass("gt-width"):$(t).addClass("gt-height"),$(t).addClass("gt-visible")},$("div").is(".gt-img-holder")&&e.setBackground(),this.createSliders=function(){$(".gt-slider").each(function(){function t(){l=1,f.attr("data-count")&&(l=parseInt(f.attr("data-count")),$(c).is(":visible")&&(l=3),$(r).is(":visible")&&(l=2),$(a).is(":visible")&&(l=1))}function i(){u&&f.find(".gt-slider-arrow-holder").html(""),d=f.outerWidth()/l,f.find(".gt-slider-container").outerWidth((b+1)*d),p.each(function(){$(this).outerWidth(d)}),b>l&&(u&&function(){var t="";m&&(t='<div class="gt-slider-arrow-num"><i class="gt-slider-num-curr">1</i> <i>из</i> <i class="gt-slider-num-max">10</i> </div>');f.find(".gt-slider-arrow-holder").html('<span class = "gt-slider-arrow left"><i class="fa fa-angle-left fa-2x"></i></span>'+t+'<span class = "gt-slider-arrow right"><i class="fa fa-angle-right fa-2x"></i></span>'),f.find(".left").off().on("click",function(){o(!1)}),f.find(".right").off().on("click",function(){o(!0)}),n(),m&&s()}(),v&&function(){for(var t=f.find(".gt-slider-nav"),e="",i=0;i<b;i++)e+="<span data-num = "+i+"></span>";t.html(e),t.find("span").first().addClass("gt-active"),f.find(".gt-slider-nav span").off().on("click",function(){o(!0,+$(this).attr("data-num"))})}()),g=f.outerHeight(),f.find(".gt-img-holder").outerHeight(g)}function n(){var t=f.find(".left"),e=f.find(".right");e.removeClass("not-active"),t.removeClass("not-active"),0==h&&t.addClass("not-active"),h!=b-1&&h!=b-l||e.addClass("not-active")}function o(t,i){return i||0===i?h=i:t?h+=1:h-=1,h>b-l?(h=b-l,void e.sliderEndLeft(f)):h<0?(h=0,void e.sliderEndRight(f)):(e.sliderMove(f,d,h),u&&n(),void(m&&s()))}function s(){f.find(".gt-slider-num-curr").text(h+1),f.find(".gt-slider-num-max").text(b)}var l,d,g,f=$(this),h=0,u=!1,v=!1,m=!1,p=f.find(".gt-slider-inner"),b=p.length;f.hasClass("gt-slider-has-arrow")&&(u=!0,f.hasClass("gt-slider-num")&&(m=!0),f.append('<div class="gt-slider-arrow-holder"></div>')),f.hasClass("gt-slider-has-dots")&&(v=!0,f.append('<div class="gt-slider-nav"></div>')),t(),i(),function(){var t=0,e=0;f.on("touchstart",function(e){var i=e.originalEvent;t=Math.abs(i.touches[0].pageX)}),f.on("touchend",function(i){var n=i.originalEvent;e=Math.abs(n.changedTouches[0].pageX),Math.abs(t-e)>50&&o(!(t>e))})}(),f.find(".gt-slider-open-clone")&&f.find(".gt-slider-open-clone").each(function(){$(this).on("click",function(){e.createCloneSlider(f,$(this).parent().index())})}),$(window).resize(function(){t(),i(),h>b-l&&(h=b-l),b<=l&&(h=0),e.sliderMove(f,d,h)})})},this.createCloneSlider=function(t,i){function n(){if((a+=1)>g-1)return a=g-1,void e.sliderEndRight(r);e.sliderMove(r,f,a),s()}function o(){if((a-=1)<0)return a=0,void e.sliderEndLeft(r);e.sliderMove(r,f,a),s()}function s(){if($("#gt-clone-arrow-left")){var t=$("#gt-clone-arrow-left"),e=$("#gt-clone-arrow-right");e.removeClass("not-active"),t.removeClass("not-active"),0==a&&t.addClass("not-active"),a==g-1&&e.addClass("not-active")}}if(!$("div").is("#gt-clone-close")){e.fixBody();var a=i;$("#gt-body-wrapper").show().append('<div id = "gt-clone" class="gt-slider-clone"><div id = "gt-clone-close" class = "gt-slider-clone-close"></div><div class="container"><div id = "gt-clone-inner" class = "gt-slider-clone-inner"><div id = "gt-clone-container" class = "gt-slider-container gt-slider-clone-container"></div></div></div></div>');var r=$("#gt-clone-inner"),c=t.find(".gt-slider-inner").clone(!0),l=c.length;c.each(function(){$(this).removeClass("gt-slider-inner").addClass("gt-clone-slider-inner"),$(this).find(".gt-slider-inner-cover").remove(),$("#gt-clone-container").append($(this))}),l>1&&($("#gt-clone .container").append('<span class = "gt-slider-arrow left" id = "gt-clone-arrow-left"><i class="fa fa-angle-left fa-2x"></i></span><span class = "gt-slider-arrow right" id = "gt-clone-arrow-right"><i class="fa fa-angle-right fa-2x"></i></span>'),$("#gt-clone-arrow-left").on("click",o),$("#gt-clone-arrow-right").on("click",n));var d=r.find("#gt-clone-container"),g=c.length,f=r.outerWidth();c.each(function(){$(this).outerWidth(f)}),d.outerWidth(f*(g+1)),d.css("margin-left",-1*f*a+"px"),setTimeout(function(){d.addClass("gt-animated")}),s();var h=0,u=0;r.on("touchstart",function(t){var e=t.originalEvent;h=Math.abs(e.touches[0].pageX)}),r.on("touchend",function(t){var e=t.originalEvent;u=Math.abs(e.changedTouches[0].pageX),Math.abs(h-u)>50&&(h>u?o():n())}),$("#gt-clone-close").on("click",function(){e.destroyCloneSlider()})}},this.destroyCloneSlider=function(){$("#gt-clone-arrow-right").off(),$("#gt-clone-arrow-left").off(),$("#gt-clone-close").off(),$("#gt-clone-inner").off(),$("#gt-clone").remove(),$("#gt-body-wrapper").hide(),e.unfixBody()},this.sliderEndLeft=function(t){console.log("left_end")},this.sliderEndRight=function(t){console.log("right_end")},this.sliderMove=function(t,e,i){if(t.find(".gt-slider-nav")){var n=t.find(".gt-slider-nav span");n.removeClass("gt-active"),$(n[i]).addClass("gt-active")}t.find(".gt-slider-container").css("margin-left",-1*e*i+"px")},this.numberCollectionArticle=function(t){t.find(".gt-collection-link-wrapper").each(function(){$(this).find(".gt-collection-link-slider-wrapper").after('<div class = "gt-collection-link-number"><span>'+($(this).index()+1)+"</span></div>")})},$("div").is(".gt-collection-wrapper-num")&&$(".gt-collection-wrapper-num").each(function(){e.numberCollectionArticle($(this))}),$("div").is(".gt-slider")&&e.createSliders(),this.manageGtActiveUlMenu=function(t){"li"!=t.tagName&&(t=$(t).closest("li")),$(t).closest($("ul")).find("li").removeClass("gt-active"),$(t).addClass("gt-active")},$("*").is(".gt-hundret-menu")&&$(".gt-hundret-menu").on("click",function(t){t.preventDefault(),e.manageGtActiveUlMenu(t.target)}),$("*").is(".gt-button-menu")&&$(".gt-button-menu").on("click",function(t){t.preventDefault(),e.manageGtActiveUlMenu(t.target)}),$("*").is(".gt-menu-news")&&$(".gt-menu-news").on("click",function(t){t.preventDefault(),e.manageGtActiveUlMenu(t.target)}),this.tabSlider=function(){$(".gt-tabs").each(function(){var t=$(this);t.find(".gt-tabs-button").each(function(){$(this).on("click",function(){e.tabSliderAction(t,$(this).index())})}),e.tabSliderActivation(t)})},this.tabSliderActivation=function(t){$(t.find(".gt-tabs-button")).removeClass("active"),$(t.find(".gt-tabs-main")).removeClass("active"),$(t.find(".gt-tabs-main")).hide(),$(t.find(".gt-tabs-button")[0]).addClass("active"),$(t.find(".gt-tabs-main")[0]).show(),$(t.find(".gt-tabs-main")[0]).addClass("active")},this.tabSliderAction=function(t,e){$(t.find(".gt-tabs-button")).removeClass("active"),$(t.find(".gt-tabs-main")).removeClass("active"),$(t.find(".gt-tabs-main")).hide(),$(t.find(".gt-tabs-button")[e]).addClass("active"),$(t.find(".gt-tabs-main")[e]).show(),$(t.find(".gt-tabs-main")[e]).addClass("active")},$("div").is(".gt-tabs")&&e.tabSlider(),this.setPlayers=function(){var t=document.createElement("script");t.type="text/javascript",t.src="https://www.youtube.com/player_api";var i=$("script")[$("script").length-1];i.parentNode.insertBefore(t,i);$(".gt-video").each(function(){var t=$(this);t.find(".gt-video-switch").on("click",function(){$(this).addClass("gt-open"),t.addClass("gt-open"),e.addYouTube(t)})})},this.addYouTube=function(t){function e(){n.mute(),n.playVideo(),t.addClass("gt-video-on"),t.find(".gt-video-uncover").on("click",i),t.find(".gt-video-pause").on("click",function(){n.pauseVideo()}),t.find(".gt-video-play").on("click",function(){n.playVideo()})}function i(){console.log("playFullScreen");var e=t.find("iframe")[0],i=e.requestFullScreen||e.mozRequestFullScreen||e.webkitRequestFullScreen;i&&i.bind(e)()}var n,o="gt-video-"+t.index();t.find(".gt-video-switch").hide("slow"),t.find(".gt-video-inner").attr("id",o).addClass("gt-video-foreground"),n=new YT.Player(o,{width:600,height:400,videoId:t.attr("data-youtube"),playerVars:{playlist:t.attr("data-youtube"),color:"white",loop:1,autoplay:1},events:{onReady:e}})},$("div").is(".gt-video")&&e.setPlayers(),this.fixArticleScrollTablePosition=function(){var t=$(".gt-article-table-wrapper"),e=t.parent(),i=e.position().top,s=i+e.outerHeight(),a=t.outerWidth(),r=n.scrollTop(),c=o.outerHeight();i>r&&t.hasClass("gt-fixed")&&(t.removeClass("gt-fixed"),t.css({left:"",width:""})),i<r+90&&(t.hasClass("gt-fixed")||(t.css({left:t.offset().left+"px",width:a}),t.addClass("gt-fixed")),r+c>s?t.addClass("gt-fixed-bottom"):t.removeClass("gt-fixed-bottom")),t.hasClass("gt-fixed")?t.css({height:c-120+"px"}):t.css({height:""})},this.createArticteScrollTable=function(){if($("div").is(".gt-article")){var t="";$(".gt-article").each(function(){t+='<div class = "gt-article-scroll"><div class = "gt-article-scroll-shadow"></div><p>'+$(this).find("h2").text()+"</p></div>"}),$("#gt-article-scroll-table").html(t)}},this.showArtidleShadow=function(){$(".gt-article").each(function(){var t=$(this).position().top,e=$(this).outerHeight(),i=$(document).scrollTop(),n=0;(n=t>i?0:(i-t)/e)>1&&(n=1);var o=$(".gt-article-scroll")[$(this).index()];$(o).find(".gt-article-scroll-shadow").css("width",100*n+"%")})},$("div").is(".gt-article-table-wrapper")){var C,k=!1;$("div").is(".gt-article-scroll-table")&&(k=!0,e.createArticteScrollTable(),e.showArtidleShadow()),o.scroll(t),o.resize(t)}this.setCurrTime=function(){e.currTime();setInterval(e.currTime,3e4)},this.currTime=function(){$(".gt-curr-time").each(function(){var t=new Date;$(this).attr("data-gmt")&&t.setUTCHours(+$(this).attr("data-gmt"));var e=t.getHours(),i=t.getMinutes(),n=t.getDay(),o=t.getDate(),s=t.getMonth(),a=t.getFullYear();e<10&&(e="0"+e),i<10&&(i="0"+i),n=["Воскресенье","Понедельник","Вторник","Среда","Четверг","Пятница","Суббота"][n],s=["января","февраля","марта","апреля","мая","июня","июля","августа","сентября","октября","ноября","декабря"][s],$(".gt-curr-time-time")&&$(".gt-curr-time-time").html(e+":"+i),$(".gt-curr-time-date")&&$(".gt-curr-time-date").html(n+", "+o+" "+s+" "+a)})},$("div").is(".gt-curr-time")&&e.setCurrTime(),this.innerScroll=function(t){t.find(".overview").height()>t.height()&&(t.addClass("isScrolled"),t.tinyscrollbar({thumbSize:40,wheelSpeed:10}))},$("div").is(".gt-inner-scroll")&&$(".gt-inner-scroll").each(function(){e.innerScroll($(this))}),this.createIconsItemsClick=function(){$(".gt-view-cards-icons-item").each(function(){$(this).hasClass("gt-view-cards-icons-visit")?e.createVisitLink($(this)):$(this).hasClass("gt-view-cards-icons-bookmarks")?e.createBookmarksLink($(this)):$(this).hasClass("gt-view-cards-icons-pin")||$(this).hasClass("gt-view-cards-icons-share")?e.toggleGtActive($(this)):$(this).hasClass("gt-view-cards-icons-share")&&e.createShareLink($(this))})},this.createShareLink=function(t){t.removeClass("gt-active"),t.on("click",function(){t.toggleClass("gt-active")})},this.toggleGtActive=function(t){(t=$(t)).removeClass("gt-active"),t.on("click",function(){t.toggleClass("gt-active")})},this.createVisitLink=function(t){t.closest(".gt-view-cards-inner").attr("data-href")&&t.on("click",function(){e.addVisitedLink(t)})},this.addVisitedLink=function(t){alert("послали данные на бек",t.closest(".gt-view-cards-inner").attr("data-href")),t.toggleClass("gt-active")},this.addBookmark=function(t,e,i){try{window.external.AddFavorite(e,i)}catch(n){try{window.sidebar.addPanel(i,e,"")}catch(n){if("object"==typeof opera)return t.title=i,t.url=e,!0;alert("Нажмите Ctrl-D чтобы добавить страницу в закладки")}}return!1},this.createBookmarksLink=function(t){var i=(t=$(t)).closest(".gt-view-cards-inner");(i=$(i)).attr("data-href")||i.attr("data-href",window.location.href),i.attr("data-bookmark")||i.attr("data-bookmark","GoToTrip"),t.attr("href",i.attr("data-href")),t.attr("rel","sidebar"),t.on("click",function(n){n.preventDefault(),e.addBookmark(t,i.attr("data-href"),i.attr("data-bookmark"))})},$("*").is(".gt-view-cards-icons-bookmarks")&&e.createBookmarksLink(),$("*").is(".gt-view-cards-icons-item")&&e.createIconsItemsClick(),$("#gt-enter-form-facebook").on("click",function(){e.socialEnter("facebook")}),$("#gt-enter-form-twitter").on("click",function(){e.socialEnter("twitter")}),$("#gt-enter-form-google").on("click",function(){e.socialEnter("google")}),$("#gt-reg-form-facebook").on("click",function(){e.socialRegistration("facebook")}),$("#gt-reg-form-twitter").on("click",function(){e.socialRegistration("twitter")}),$("#gt-reg-form-google").on("click",function(){e.socialRegistration("google")}),this.socialRegistration=function(t){alert("Регистрация через "+t)},this.socialEnter=function(t){alert("Вход через "+t)},this.cutNews=function(t){for(var e=t.height(),i=t.find("a"),n=0;n<i.length;n++)if($(i[n]).outerHeight(!0)<e)$(i[n]).addClass("gt-ready"),e-=$(i[n]).outerHeight(!0);else{var o=Math.floor(($(i[n]).text().length-30)*e/$(i[n]).height()),s=$(i[n]).text().substring(0,o-5);$(i[n]).text(s+"..."),$(i[n]).addClass("gt-ready")}},this.cutReadMoreSlider=function(){$(".gt-read-more-slider-text-inner").each(function(){e.cutting($(this),160)})},this.cutting=function(t,e){var i=t.text();i.length>e&&(i=i.slice(0,e)+"...",t.text(i))},$("div").is(".gt-news-cut")&&$(".gt-news-cut").each(function(){e.cutNews($(this))}),$("p").is(".gt-read-more-slider-text-inner")&&e.cutReadMoreSlider(),n.ready(function(){e.footerHeight(),e.deskTopMenuScroll()}),o.scroll(function(){e.upPageButton(),$(".gt-header-menu").is(":visible")&&e.deskTopMenuScroll()}),$(window).resize(function(){e.deskTopMenuScroll(),e.footerHeight(),d.hasClass("gt-open")&&e.mobileMenuClose(),$("div").is(".gt-img-holder-abs")&&$(".gt-img-holder-abs").each(function(){$(this).removeClass("gt-width"),$(this).removeClass("gt-height"),e.imgHolderFunc($(this))})}),$(window).on("load",function(){$("div").is(".gt-img-holder-abs")&&$(".gt-img-holder-abs").each(function(){e.imgHolderFunc($(this))})}),i.on("click",function(t){})};var goToTrip=new GoToTrip;
//# sourceMappingURL=data:application/json;charset=utf8;base64,
