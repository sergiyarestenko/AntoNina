GoToTrip=function(){function t(){k||(k=setTimeout(function(){k=null,i.fixArticleScrollTablePosition(),w&&i.showArtidleShadow()}))}var i=this,e=$(document.body),s=$(document),n=$(window),o={top:!1,left:!1},a=$("#gt-is-360"),r=($("#gt-is-480"),$("#gt-is-667")),c=$("#gt-is-768"),l=$("#gt-is-1024"),d=($("#gt-is-1231"),$("header")),g=$("footer"),u=$("#gt-wrapper"),h=$("#gt-up"),f=$("#gt-mobile-menu-switch"),v=$(".gt-enter"),m=$("#gt-header-enter-wrapper"),p=$("#gt-header-enter"),b=$("#gt-header-enter-chose"),C=$("#gt-header-enter-close");if(this.fixBody=function(){o.top||o.left||(o.top=s.scrollTop(),o.left=e.offset().left,e.css({position:"fixed",left:o.left+"px",top:-1*o.top+"px"}))},this.unfixBody=function(){e.css({position:"",left:"",top:""}),s.scrollTop(o.top),o.top=!1,o.left=!1},this.footerHeight=function(){g.outerHeight()>n.height()-50?(g.css("position","static"),u.css("margin-bottom",""),h.css("position","static")):(g.css("position",""),h.css("position",""),u.css("margin-bottom",g.outerHeight()+"px"))},this.deskTopMenuScroll=function(){n.scrollTop()>d.outerHeight()?d.addClass("gt-header-scrolled"):d.removeClass("gt-header-scrolled")},this.pageUp=function(){return $("body,html").animate({scrollTop:0},800),!1},this.upPageButton=function(){$(document).scrollTop()>30?h.addClass("gt-visible"):h.removeClass("gt-visible")},h.on("click",i.pageUp),this.mobileMenuClose=function(){i.unfixBody(),f.removeClass("gt-open"),d.removeClass("gt-open")},this.mobileMenuOpen=function(){i.fixBody(),d.addClass("gt-open"),f.addClass("gt-open")},f.on("click",function(){$(this).hasClass("gt-open")?i.mobileMenuClose():i.mobileMenuOpen()}),this.openEnterForm=function(){m.addClass("gt-open"),setTimeout(function(){p.addClass("gt-open"),C.addClass("gt-open")})},this.closeEnterForm=function(){C.removeClass("gt-open"),p.removeClass("gt-open"),setTimeout(function(){m.removeClass("gt-open")},750)},this.changeEnterRegistration=function(t){p.hasClass($(t.target).attr("class"))||p.removeClass("gt-chosen-enter").removeClass("gt-chosen-registration").addClass($(t.target).attr("class"))},v.each(function(){$(this).on("click",i.openEnterForm)}),C.on("click",i.closeEnterForm),b.on("click",function(t){i.changeEnterRegistration(t)}),this.setBackground=function(){$(".gt-img-holder").each(function(){if($(this).attr("data-bg")){var t=$(this).attr("data-bg");r.is(":visible")?$(this).css("background-image",'url("./img/backgrounds/phone/'+t+'")'):l.is(":visible")?$(this).css("background-image",'url("./img/backgrounds/tablet/'+t+'")'):$(this).css("background-image",'url("./img/backgrounds/desktop/'+t+'")')}})},this.imgHolderFunc=function(t){var i=t.outerHeight()/t.outerWidth(),e=t.find("img");e.outerHeight()/e.outerWidth()>i?$(t).addClass("gt-width"):$(t).addClass("gt-height"),$(t).addClass("gt-visible")},$("div").is(".gt-img-holder")&&i.setBackground(),this.createSlider=function(t,e){function s(){if(y>k){var i="";H&&(i='<div class="gt-slider-arrow-num"><i class="gt-slider-num-curr"></i><i>из</i><i class="gt-slider-num-max"></i></div>'),t.find(".gt-slider-arrow-holder").html('<span class = "gt-slider-arrow left"><i class="fa fa-angle-left fa-2x"></i></span>'+i+'<span class = "gt-slider-arrow right"><i class="fa fa-angle-right fa-2x"></i></span>'),t.find(".left").on("click",function(){l(!1)}),t.find(".right").on("click",function(){l(!0)}),d(),H&&h(),h()}w=!0}function o(i){var e=i||t;e.find(".left").off(),e.find(".right").off(),e.find(".gt-slider-arrow-holder").html(""),w=!1}function l(t,i){i||0===i?S=i:t?S+=1:S-=1,S>y-k?S=y-k:S<0?S=0:(B?g():u(),M&&d(),H&&h())}function d(){var i=t.find(".left"),e=t.find(".right");e.removeClass("not-active"),i.removeClass("not-active"),0==S&&i.addClass("not-active"),S!=y-1&&S!=y-k||e.addClass("not-active")}function g(){if(A){var i=t.find(".gt-slider-nav span");i.removeClass("gt-active"),$(i[S]).addClass("gt-active")}T.css("margin-left",-1*C*S+"px")}function u(t){var i=t||S;$(x).removeClass("gt-open"),$(x[i]).addClass("gt-open")}function h(){t.find(".gt-slider-num-curr").text(S+1),t.find(".gt-slider-num-max").text(y)}function f(){var i=0,e=0;t.on("touchstart",function(t){var e=t.originalEvent;i=Math.abs(e.touches[0].pageX),console.log("touchstart")}),t.on("touchend",function(t){var s=t.originalEvent;e=Math.abs(s.changedTouches[0].pageX),Math.abs(i-e)>50&&l(i>e?!0:!1)})}function v(i){(i||t).off()}function m(){t.attr("data-count")&&(k=parseInt(t.attr("data-count")),$(c).is(":visible")&&(k=3),$(r).is(":visible")&&(k=2),$(a).is(":visible")&&(k=1))}function p(){C=t.outerWidth()/k,t.find(".gt-slider-container").outerWidth((y+1)*C),x.each(function(){$(this).outerWidth(C)})}var b,C,k=1,w=!1,x=t.find(".gt-slider-inner"),T=t.find(".gt-slider-container"),y=x.length,S=e||0,M=t.hasClass("gt-slider-has-arrow"),A=t.hasClass("gt-slider-has-dots"),H=t.hasClass("gt-slider-num"),B=t.hasClass("gt-slider-tram"),E=t.hasClass("gt-slider-fade"),F=t.hasClass("gt-slider-has-clone");E&&u(e),B&&(m(),p(),g()),M&&(t.append('<div class="gt-slider-arrow-holder"></div>'),s()),A&&function(){t.append('<div class="gt-slider-nav"></div>');for(var i=t.find(".gt-slider-nav"),e="",s=0;s<y;s++)e+="<span data-num = "+s+"></span>";i.html(e),i.find("span").first().addClass("gt-active"),t.find(".gt-slider-nav span").on("click",function(){l(!0,+$(this).attr("data-num"))})}(),y>k&&f(),F&&t.find(".gt-slider-inner-cover").each(function(){$(this).on("click",function(){!function(e){if(!$("div").is("#gt-clone")){i.fixBody();var s=$("#gt-body-wrapper");s.append('<div id = "gt-clone-wrapper"   class="container"><div id = "gt-clone-close" class = "gt-slider-clone-close"></div><div id = "gt-clone" class="gt-slider gt-slider-clone gt-slider-fade gt-slider-has-arrow"><div  id = "gt-clone-container" class="gt-slider-container"></div></div></div>'),s.show();var n=$("#gt-clone");t.find(".gt-slider-inner").clone(!0).each(function(){$(this).outerWidth(""),$("#gt-clone-container").append($(this))}),i.createSlider(n,e),$("#gt-clone-close").on("click",function(){!function(t){o(t),v(t),$("#gt-clone-close").off(),$("#gt-clone-wrapper").remove(),$("#gt-body-wrapper").hide(),i.unfixBody()}(n)})}}($(this).parent().index())})}),n.resize(function(){b||(b=setTimeout(function(){b=null,v(),B&&(m(),p(),S>y-k&&(S=y-k),y<=k&&(S=0),g()),w&&(o(),s()),y>k&&f()},132))})},$("div").is(".gt-slider")&&$(".gt-slider").each(function(){i.createSlider($(this))}),this.manageGtActiveUlMenu=function(t){"li"!=t.tagName&&(t=$(t).closest("li")),$(t).closest($("ul")).find("li").removeClass("gt-active"),$(t).addClass("gt-active")},$("*").is(".gt-hundret-menu")&&$(".gt-hundret-menu").on("click",function(t){t.preventDefault(),i.manageGtActiveUlMenu(t.target)}),$("*").is(".gt-button-menu")&&$(".gt-button-menu").on("click",function(t){t.preventDefault(),i.manageGtActiveUlMenu(t.target)}),$("*").is(".gt-menu-news")&&$(".gt-menu-news").on("click",function(t){t.preventDefault(),i.manageGtActiveUlMenu(t.target)}),this.tabSlider=function(){$(".gt-tabs").each(function(){var t=$(this);t.find(".gt-tabs-button").each(function(){$(this).on("click",function(){i.tabSliderAction(t,$(this).index())})}),i.tabSliderActivation(t)})},this.tabSliderActivation=function(t){$(t.find(".gt-tabs-button")).removeClass("active"),$(t.find(".gt-tabs-main")).removeClass("active"),$(t.find(".gt-tabs-main")).hide(),$(t.find(".gt-tabs-button")[0]).addClass("active"),$(t.find(".gt-tabs-main")[0]).show(),$(t.find(".gt-tabs-main")[0]).addClass("active")},this.tabSliderAction=function(t,i){$(t.find(".gt-tabs-button")).removeClass("active"),$(t.find(".gt-tabs-main")).removeClass("active"),$(t.find(".gt-tabs-main")).hide(),$(t.find(".gt-tabs-button")[i]).addClass("active"),$(t.find(".gt-tabs-main")[i]).show(),$(t.find(".gt-tabs-main")[i]).addClass("active")},$("div").is(".gt-tabs")&&i.tabSlider(),this.setPlayers=function(){var t=document.createElement("script");t.type="text/javascript",t.src="https://www.youtube.com/player_api";var e=$("script")[$("script").length-1];e.parentNode.insertBefore(t,e);$(".gt-video").each(function(){var t=$(this);t.find(".gt-video-switch").on("click",function(){$(this).addClass("gt-open"),t.addClass("gt-open"),i.addYouTube(t)})})},this.addYouTube=function(t){function i(){s.mute(),s.playVideo(),t.addClass("gt-video-on"),t.find(".gt-video-uncover").on("click",e),t.find(".gt-video-pause").on("click",function(){s.pauseVideo()}),t.find(".gt-video-play").on("click",function(){s.playVideo()})}function e(){console.log("playFullScreen");var i=t.find("iframe")[0],e=i.requestFullScreen||i.mozRequestFullScreen||i.webkitRequestFullScreen;e&&e.bind(i)()}var s,n="gt-video-"+t.index();t.find(".gt-video-switch").hide("slow"),t.find(".gt-video-inner").attr("id",n).addClass("gt-video-foreground"),s=new YT.Player(n,{width:600,height:400,videoId:t.attr("data-youtube"),playerVars:{playlist:t.attr("data-youtube"),color:"white",loop:1,autoplay:1},events:{onReady:i}})},$("div").is(".gt-video")&&i.setPlayers(),this.fixArticleScrollTablePosition=function(){var t=$(".gt-article-table-wrapper"),i=t.parent(),e=i.position().top,o=e+i.outerHeight(),a=t.outerWidth(),r=s.scrollTop(),c=n.outerHeight();console.log(e),console.log(r),e+90>r&&t.hasClass("gt-fixed")&&(t.removeClass("gt-fixed"),t.css({left:"",width:""})),e<r+90&&(t.hasClass("gt-fixed")||(t.css({left:t.offset().left+"px",width:a}),t.addClass("gt-fixed")),r+c>o?t.addClass("gt-fixed-bottom"):t.removeClass("gt-fixed-bottom")),t.hasClass("gt-fixed")?t.css({height:c-120+"px"}):t.css({height:""})},this.createArticteScrollTable=function(){if($("div").is(".gt-article")){var t="";$(".gt-article").each(function(){t+='<div class = "gt-article-scroll"><div class = "gt-article-scroll-shadow"></div><p>'+$(this).find("h2").text()+"</p></div>"}),$("#gt-article-scroll-table").html(t)}},this.showArtidleShadow=function(){$(".gt-article").each(function(){var t=$(this).position().top,i=$(this).outerHeight(),e=$(document).scrollTop(),s=0;(s=t>e?0:(e-t)/i)>1&&(s=1);var n=$(".gt-article-scroll")[$(this).index()];$(n).find(".gt-article-scroll-shadow").css("width",100*s+"%")})},$("div").is(".gt-article-table-wrapper")){var k,w=!1;$("div").is(".gt-article-scroll-table")&&(w=!0,i.createArticteScrollTable(),i.showArtidleShadow()),n.scroll(t),n.resize(t)}this.setCurrTime=function(){i.currTime();setInterval(i.currTime,3e4)},this.currTime=function(){$(".gt-curr-time").each(function(){var t=new Date;$(this).attr("data-gmt")&&t.setUTCHours(+$(this).attr("data-gmt"));var i=t.getHours(),e=t.getMinutes(),s=t.getDay(),n=t.getDate(),o=t.getMonth(),a=t.getFullYear();i<10&&(i="0"+i),e<10&&(e="0"+e),s=["Воскресенье","Понедельник","Вторник","Среда","Четверг","Пятница","Суббота"][s],o=["января","февраля","марта","апреля","мая","июня","июля","августа","сентября","октября","ноября","декабря"][o],$(".gt-curr-time-time")&&$(".gt-curr-time-time").html(i+":"+e),$(".gt-curr-time-date")&&$(".gt-curr-time-date").html(s+", "+n+" "+o+" "+a)})},$("div").is(".gt-curr-time")&&i.setCurrTime(),this.innerScroll=function(t){t.find(".overview").height()>t.height()&&(t.addClass("isScrolled"),t.tinyscrollbar({thumbSize:40,wheelSpeed:10}))},$("div").is(".gt-inner-scroll")&&$(".gt-inner-scroll").each(function(){i.innerScroll($(this))}),this.createIconsItemsClick=function(){$(".gt-view-cards-icons-item").each(function(){$(this).hasClass("gt-view-cards-icons-visit")?i.createVisitLink($(this)):$(this).hasClass("gt-view-cards-icons-bookmarks")?i.createBookmarksLink($(this)):$(this).hasClass("gt-view-cards-icons-pin")||$(this).hasClass("gt-view-cards-icons-share")?i.toggleGtActive($(this)):$(this).hasClass("gt-view-cards-icons-share")&&i.createShareLink($(this))})},this.createShareLink=function(t){t.removeClass("gt-active"),t.on("click",function(){t.toggleClass("gt-active")})},this.toggleGtActive=function(t){(t=$(t)).removeClass("gt-active"),t.on("click",function(){t.toggleClass("gt-active")})},this.createVisitLink=function(t){t.closest(".gt-view-cards-inner").attr("data-href")&&t.on("click",function(){i.addVisitedLink(t)})},this.addVisitedLink=function(t){alert("послали данные на бек",t.closest(".gt-view-cards-inner").attr("data-href")),t.toggleClass("gt-active")},this.addBookmark=function(t,i,e){try{window.external.AddFavorite(i,e)}catch(s){try{window.sidebar.addPanel(e,i,"")}catch(s){if("object"==typeof opera)return t.title=e,t.url=i,!0;alert("Нажмите Ctrl-D чтобы добавить страницу в закладки")}}return!1},this.createBookmarksLink=function(t){var e=(t=$(t)).closest(".gt-view-cards-inner");(e=$(e)).attr("data-href")||e.attr("data-href",window.location.href),e.attr("data-bookmark")||e.attr("data-bookmark","GoToTrip"),t.attr("href",e.attr("data-href")),t.attr("rel","sidebar"),t.on("click",function(s){s.preventDefault(),i.addBookmark(t,e.attr("data-href"),e.attr("data-bookmark"))})},$("*").is(".gt-view-cards-icons-bookmarks")&&i.createBookmarksLink(),$("*").is(".gt-view-cards-icons-item")&&i.createIconsItemsClick(),$("#gt-enter-form-facebook").on("click",function(){i.socialEnter("facebook")}),$("#gt-enter-form-twitter").on("click",function(){i.socialEnter("twitter")}),$("#gt-enter-form-google").on("click",function(){i.socialEnter("google")}),$("#gt-reg-form-facebook").on("click",function(){i.socialRegistration("facebook")}),$("#gt-reg-form-twitter").on("click",function(){i.socialRegistration("twitter")}),$("#gt-reg-form-google").on("click",function(){i.socialRegistration("google")}),this.socialRegistration=function(t){alert("Регистрация через "+t)},this.socialEnter=function(t){alert("Вход через "+t)},this.cutNews=function(t){for(var i=t.height(),e=t.find("a"),s=0;s<e.length;s++)if($(e[s]).outerHeight(!0)<i)$(e[s]).addClass("gt-ready"),i-=$(e[s]).outerHeight(!0);else{var n=Math.floor(($(e[s]).text().length-30)*i/$(e[s]).height()),o=$(e[s]).text().substring(0,n-5);$(e[s]).text(o+"..."),$(e[s]).addClass("gt-ready")}},this.cutReadMoreSlider=function(){$(".gt-read-more-slider-text-inner").each(function(){i.cutting($(this),160)})},this.cutting=function(t,i){var e=t.text();e.length>i&&(e=e.slice(0,i)+"...",t.text(e))},$("div").is(".gt-news-cut")&&$(".gt-news-cut").each(function(){i.cutNews($(this))}),$("p").is(".gt-read-more-slider-text-inner")&&i.cutReadMoreSlider(),s.ready(function(){i.footerHeight(),i.deskTopMenuScroll()}),n.scroll(function(){i.upPageButton(),$(".gt-header-menu").is(":visible")&&i.deskTopMenuScroll()}),n.resize(function(){i.deskTopMenuScroll(),i.footerHeight(),d.hasClass("gt-open")&&i.mobileMenuClose(),$("div").is(".gt-img-holder-abs")&&$(".gt-img-holder-abs").each(function(){$(this).removeClass("gt-width"),$(this).removeClass("gt-height"),i.imgHolderFunc($(this))})}),$(window).on("load",function(){$("div").is(".gt-img-holder-abs")&&$(".gt-img-holder-abs").each(function(){i.imgHolderFunc($(this))})}),e.on("click",function(t){})};var goToTrip=new GoToTrip;
//# sourceMappingURL=data:application/json;charset=utf8;base64,
